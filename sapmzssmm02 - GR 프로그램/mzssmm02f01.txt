*&---------------------------------------------------------------------*
*&  Include           MZSSMM02F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  MODIFY_SCREEN_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_screen_0100 .

  LOOP AT SCREEN.

    IF screen-name = 'ZSSSMM0210-GRNUM'.
      screen-input = 0.
      screen-active = 0.
    ENDIF.

    IF gv_radio_screen = 0.
      CASE screen-group3.
        WHEN 'RA1'.
          screen-input = 0.
          screen-active = 0.
      ENDCASE.
    ELSE.
      CASE screen-group3.
        WHEN 'RA2'.
          screen-input = 0.
          screen-active = 0.
      ENDCASE.
      MODIFY SCREEN.
    ENDIF.

    IF gv_screen = 1.
      CASE screen-group1.
        WHEN 'GR1'.
          screen-input = 0.
          screen-active = 0.
      ENDCASE.
      MODIFY SCREEN.
    ENDIF.

    IF gv_screen = 0 OR gv_screen = 2.
      IF gv_screen = 0.
        CASE screen-group3.
          WHEN 'EX2'.
            screen-input = 0.
            screen-active = 0.
        ENDCASE.
      ENDIF.
      CASE screen-group1.
        WHEN 'GR2'.
          screen-input = 0.
          screen-active = 0.
      ENDCASE.
      MODIFY SCREEN.

      IF gv_entire_screen = 0.
        CASE screen-group2.
          WHEN 'BT1'.
            screen-input = 0.
            screen-active = 0.
        ENDCASE.
        MODIFY SCREEN.
      ENDIF.
      IF gv_entire_screen = 1.
        CASE screen-group2.
          WHEN 'BT1'.
            screen-input = 1.
            screen-active = 1.
          WHEN 'BT2'.
            screen-input = 0.
            screen-active = 0.
        ENDCASE.
        MODIFY SCREEN.
      ENDIF.
    ENDIF.

    IF gv_screen = 2.
      CASE screen-group3.
        WHEN 'EX1'.
          screen-input = 0.
          screen-active = 0.

      ENDCASE.
      MODIFY SCREEN.

    ENDIF.

  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ALV_0102
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_alv_0102 .

  IF go_cust_po IS INITIAL.
    PERFORM init_alv_0102.
  ELSE.
    PERFORM refresh_alv_0102.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0102
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0102 .

  PERFORM create_container_0102.
  PERFORM create_alvs_0102.
  PERFORM display_alvs_0102.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_CONTAINER_0102
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_container_0102 .

  " 메인화면
  PERFORM create_cust_obj USING 'CON' CHANGING go_cust_po.

  " 메인화면 왼쪽, 오른쪽으로 나누기
  PERFORM create_split_obj_cust USING go_cust_po 1 2 CHANGING go_split_po_main.
  PERFORM set_row_height USING 1 30 CHANGING go_split_po_main.
  PERFORM set_col_width USING 1 40 CHANGING go_split_po_main.


  PERFORM get_split_container USING 1 1 CHANGING go_split_po_main go_con_main.
  PERFORM get_split_container USING 1 2 CHANGING go_split_po_main go_con_po_right.

  PERFORM create_split_obj USING go_con_po_right 2 1 CHANGING go_split_po_right.

  PERFORM set_col_width USING 2 58 CHANGING go_split_po_right.
  PERFORM get_split_container USING 1 1 CHANGING go_split_po_right go_con_po_top.
  PERFORM get_split_container USING 2 1 CHANGING go_split_po_right go_con_po_bottom.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_CUST_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0095   text
*      <--P_GO_CUST_PO  text
*----------------------------------------------------------------------*
FORM create_cust_obj  USING VALUE(p_con)
                      CHANGING co_obj TYPE REF TO cl_gui_custom_container.

  CREATE OBJECT co_obj
    EXPORTING
      container_name              = p_con
    EXCEPTIONS
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5
      OTHERS                      = 6.
  IF sy-subrc <> 0.
    MESSAGE a100(zmcss) WITH sy-uname. " 시스템 에러입니다. &에게 문의하세요!
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_SPLIT_OBJ_CUST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_CUST_PO  text
*      -->P_1      text
*      -->P_2      text
*      <--P_GO_SPLIT_PO_MAIN  text
*----------------------------------------------------------------------*
FORM create_split_obj_cust    USING   VALUE(po_obj) TYPE REF TO cl_gui_custom_container
                                      VALUE(p_1) TYPE i
                                      VALUE(p_2) TYPE i
                              CHANGING co_split TYPE REF TO cl_gui_splitter_container.

  CREATE OBJECT co_split
    EXPORTING
      parent  = po_obj
      rows    = p_1
*     WIDTH   = 2000
      columns = p_2.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_SPLIT_CONTAINER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_1      text
*      -->P_1      text
*      <--P_GO_SPLIT_PO_MAIN  text
*      <--P_GO_CON_MAIN  text
*----------------------------------------------------------------------*
FORM get_split_container  USING   VALUE(p_1) TYPE i
                                  VALUE(p_2) TYPE i
                          CHANGING co_split TYPE REF TO cl_gui_splitter_container
                                   co_obj TYPE REF TO cl_gui_container.

  CALL METHOD co_split->get_container
    EXPORTING
      row       = p_1
      column    = p_2
    RECEIVING
      container = co_obj.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_SPLIT_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_CON_PO_RIGHT  text
*      -->P_2      text
*      -->P_1      text
*      <--P_GO_SPLIT_PO_RIGHT  text
*----------------------------------------------------------------------*
FORM create_split_obj  USING    VALUE(po_obj) TYPE REF TO cl_gui_container
                                VALUE(p_1) TYPE i
                                VALUE(p_2) TYPE i
                       CHANGING co_split TYPE REF TO cl_gui_splitter_container.

  CREATE OBJECT co_split
    EXPORTING
      parent  = po_obj
      rows    = p_1
*     WIDTH   = 2000
      columns = p_2.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALVS_0102
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_alvs_0102 .

  PERFORM create_alv USING go_con_main CHANGING go_alv_po_waiting.
  PERFORM create_alv USING go_con_po_top CHANGING go_alv_po_items.
  PERFORM create_alv USING go_con_po_bottom CHANGING go_alv_po_confirm.

  " class 설정
  PERFORM req_event_for_alv_0102.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_CON_MAIN  text
*      <--P_GO_ALV_PO_WAITING  text
*----------------------------------------------------------------------*
FORM create_alv     USING    VALUE(po_con) TYPE REF TO cl_gui_container
                    CHANGING co_alv TYPE REF TO cl_gui_alv_grid.


  CREATE OBJECT co_alv
    EXPORTING
*     i_shellstyle      = 0
*     i_lifetime        =
*     i_appl_events     = 'X'
      i_parent          = po_con
    EXCEPTIONS
      error_cntl_create = 1
      error_cntl_init   = 2
      error_cntl_link   = 3
      error_dp_create   = 4
      OTHERS            = 5.
  IF sy-subrc <> 0.
    MESSAGE a100(zmcss) WITH sy-uname. " 시스템 에러입니다 &에게 문의해주세요!
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REQ_EVENT_FOR_ALV_0102
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM req_event_for_alv_0102 .

  SET HANDLER :  lcl_event_handler=>handle_toolbar FOR go_alv_po_waiting,
                 lcl_event_handler=>handle_toolbar FOR go_alv_po_confirm,
                 lcl_event_handler=>handle_user_command FOR go_alv_po_waiting,
                 lcl_event_handler=>handle_user_command FOR go_alv_po_items,
                 lcl_event_handler=>handle_user_command FOR go_alv_po_confirm,
                 lcl_event_handler=>handle_toolbar FOR go_alv_po_items,
                 lcl_event_handler=>handle_data_changed FOR go_alv_po_items,
                 lcl_event_handler=>handle_double_click FOR go_alv_po_waiting.

*
  CALL METHOD go_alv_po_items->register_edit_event
    EXPORTING
      i_event_id = cl_gui_alv_grid=>mc_evt_modified.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_EXCLUDE_BTN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_exclude_btn .

  CLEAR gt_exclude.

  DATA : ls_excl TYPE ui_func,
         lt_excl TYPE ui_functions.

  ls_excl = cl_gui_alv_grid=>mc_fc_excl_all.
  APPEND ls_excl TO gt_exclude.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALVS_0102
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_alvs_0102 .

  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0212' gs_layo gt_exclude CHANGING gt_podata gt_fcat gt_sort_polist go_alv_po_waiting.
  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0213' gs_layo2 gt_exclude CHANGING gt_item gt_fcat2 gt_sort go_alv_po_items.
*  go_alv_po_items->set_table_for_first_display(
*     EXPORTING
*       i_structure_name = 'ZSSSMM0213'
*       is_layout = gs_layo2
*       it_toolbar_excluding = gt_exclude
*     CHANGING
*       it_outtab = gt_item
*       it_fieldcatalog = gt_fcat2
**       it_sort = gt_sort
*     EXCEPTIONS
*       invalid_parameter_combination = 1
*       program_error = 23
*       too_many_lines = 3
*       OTHERS = 4
*   ).
*  IF sy-subrc <> 0.
*    MESSAGE a100(zmcss) WITH sy-uname. " 시스템 오류입니다. 담당자 &에게 문의해주세요!
*  ENDIF.

  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0213' gs_layo3 gt_exclude CHANGING gt_confirm gt_fcat3 gt_sort go_alv_po_confirm.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_TAB_FDP_WITH_EXCLUDE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0399   text
*      -->P_GS_LAYO  text
*      -->P_GT_EXCLUDE  text
*      <--P_GT_PODATA  text
*      <--P_GT_FCAT  text
*      <--P_GT_SORT  text
*      <--P_GO_ALV_WAITPO  text
*----------------------------------------------------------------------*
FORM set_tab_fdp_with_exclude  USING    VALUE(p_structure) TYPE dd02l-tabname
                                        VALUE(ps_layout) TYPE lvc_s_layo
                                        VALUE(pt_exclude) TYPE ui_functions
                               CHANGING ct_outtab TYPE STANDARD TABLE
                                        ct_fcat TYPE lvc_t_fcat
                                        ct_sort TYPE lvc_t_sort
                                        co_alv TYPE REF TO cl_gui_alv_grid.

  co_alv->set_table_for_first_display(
     EXPORTING
       i_structure_name = p_structure
       is_layout = ps_layout
       it_toolbar_excluding = pt_exclude
     CHANGING
       it_outtab = ct_outtab
       it_fieldcatalog = ct_fcat
       it_sort = ct_sort
     EXCEPTIONS
       invalid_parameter_combination = 1
       program_error = 23
       too_many_lines = 3
       OTHERS = 4
   ).
  IF sy-subrc <> 0.
    MESSAGE a100(zmcss) WITH sy-uname. " 시스템 오류입니다. 담당자 &에게 문의해주세요!
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV_0102
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_alv_0102 .

  PERFORM refresh_table_display CHANGING go_alv_po_waiting.
  PERFORM refresh_table_display CHANGING go_alv_po_items.
  PERFORM refresh_table_display CHANGING go_alv_po_confirm.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_TABLE_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GO_ALV_PO_WAITING  text
*----------------------------------------------------------------------*
FORM refresh_table_display  CHANGING co_alv TYPE REF TO cl_gui_alv_grid.

  co_alv->refresh_table_display(
    i_soft_refresh = 'X'
*  is_stable = 'X'
    ).
  IF sy-subrc <> 0.
    MESSAGE a100(zmcss) WITH sy-uname. " 시스템 오류 : 담당자 &에게 문의하세요!
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ROW_HEIGHT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_1      text
*      -->P_30     text
*      <--P_GO_SPLIT_POMAIN  text
*----------------------------------------------------------------------*
FORM set_row_height  USING VALUE(p_id)
                           VALUE(p_ratio)
                     CHANGING co_split TYPE REF TO cl_gui_splitter_container.


  CALL METHOD co_split->set_row_height
    EXPORTING
      id     = p_id        " 첫 번째 행
      height = p_ratio.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_COL_WIDTH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_1      text
*      -->P_40     text
*      <--P_GO_SPLIT_POMAIN  text
*----------------------------------------------------------------------*
FORM set_col_width  USING VALUE(p_id)
                          VALUE(p_ratio)
                     CHANGING co_split TYPE REF TO cl_gui_splitter_container.

  CALL METHOD co_split->set_column_width
    EXPORTING
      id    = p_id        " 첫 번째 행
      width = p_ratio.      " 50%

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ALV_0101
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_alv_0101 .


  IF go_cust_gr IS INITIAL.
    PERFORM init_alv_0101.
  ELSE.
    PERFORM set_fcat5_change.
    CALL METHOD go_alv_gr_list->set_frontend_fieldcatalog
      EXPORTING
        it_fieldcatalog = gt_fcat5.

    CALL METHOD go_alv_gr_list->refresh_table_display
      EXPORTING
        is_stable      = VALUE #( row = 'X' col = 'X' )
        i_soft_refresh = 'X'
      EXCEPTIONS
        finished       = 1
        OTHERS         = 2.
*    PERFORM refresh_alv_0101.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0101
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0101 .

  PERFORM create_container_0101.
  PERFORM create_alvs_0101.
  PERFORM display_alvs_0101.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_CONTAINER_0101
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_container_0101 .


  PERFORM create_cust_obj  USING 'CON_101' CHANGING go_cust_gr.
  PERFORM create_split_obj_cust USING go_cust_gr 1 1 CHANGING go_split_gr_main.
  PERFORM get_split_container USING 1 1 CHANGING go_split_gr_main go_con_gr_top.
*  PERFORM get_split_container USING 2 1 CHANGING go_split_gr_main go_con_gr_bottom.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALVS_0101
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_alvs_0101 .
  PERFORM create_alv USING go_con_gr_top CHANGING go_alv_gr_list.
*  PERFORM create_alv USING go_con_gr_bottom CHANGING go_alv_gr_item.
  PERFORM req_event_for_alv_0101.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALVS_0101
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_alvs_0101 .

  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0211' gs_layo5 gt_exclude CHANGING gt_grdata gt_fcat5 gt_sort_grlist go_alv_gr_list.
*  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0216' gs_layo6 gt_exclude CHANGING gt_gritem gt_fcat6 gt_sort go_alv_gr_item.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV_0101
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_alv_0101 .
  PERFORM refresh_table_display CHANGING go_alv_gr_list.
*  PERFORM refresh_table_display CHANGING go_alv_gr_item.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_TEXT_EDIT_0110
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0070   text
*      -->P_GO_MOD  text
*      -->P_GO_EDIT  text
*----------------------------------------------------------------------*
FORM set_text_edit_0110  USING VALUE(p_con_name)
                              po_con TYPE REF TO cl_gui_custom_container
                              po_edit TYPE REF TO cl_gui_textedit  .
  IF po_con IS INITIAL.
    CREATE OBJECT po_con
      EXPORTING
        container_name = p_con_name.
  ENDIF.

  IF po_edit IS INITIAL.
    CREATE OBJECT po_edit
      EXPORTING
        max_number_chars = 60
        parent           = po_con.

  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CLEAR_TEXT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_EDIT  text
*----------------------------------------------------------------------*
FORM clear_text  USING po_edit TYPE REF TO cl_gui_textedit.

  DATA: lt_empty TYPE soli_tab.

  IF po_edit IS BOUND.
    CALL METHOD po_edit->set_text_as_r3table
      EXPORTING
        table = lt_empty.
  ENDIF.

  LEAVE TO SCREEN 0.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CONFIRM_CONTENTS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM confirm_contents .

  DATA lv_answer TYPE c.

  PERFORM popup_to_confirm
    USING    '입고최종확인'                " 제목
             '정말 입고하시겠습니까?'       " 질문
             'Yes'                         " 버튼1 텍스트
             'ICON_CHECKED'                " 버튼1 아이콘
             'No'                          " 버튼2 텍스트
             'ICON_INCOMPLETE'             " 버튼2 아이콘
             '누르면 입고가 완료됩니다'     " 버튼1 퀵인포
             '누르면 입고가 취소됩니다'     " 버튼2 퀵인포
    CHANGING lv_answer.



  CASE lv_answer.
    WHEN '1'.
*      MESSAGE i999(zmcss) with '입고완료!'.
      PERFORM insert_grdatas.
    WHEN '2'.
    WHEN '3'.


  ENDCASE.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SET_TEXT_EDIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_EDIT  text
*      -->P_GO_EDIT  text
*----------------------------------------------------------------------*
FORM set_text_edit  TABLES pt_edit TYPE tt_text
                   USING po_edit TYPE REF TO cl_gui_textedit  .

  CALL METHOD po_edit->get_text_as_r3table
    IMPORTING
      table  = pt_edit[]
    EXCEPTIONS
      OTHERS = 1.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CLEAR_EDITOR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM clear_editor .

  CLEAR: gv_text,
       gt_edit,
       gt_item,
       gt_confirm.


  PERFORM refresh_alv_0102.
  PERFORM clear_text USING go_edit.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REQ_EVENT_FOR_ALV_0101
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM req_event_for_alv_0101 .

  SET HANDLER :    lcl_event_handler=>handle_double_click FOR go_alv_gr_list,
                   lcl_event_handler=>handle_toolbar FOR go_alv_gr_list,
                   lcl_event_handler=>handle_user_command FOR go_alv_gr_list,
                     lcl_event_handler=>handle_hotspot FOR go_alv_gr_list.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ALV_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_alv_0200 .

  IF go_dock_gr IS INITIAL.
    PERFORM init_alv_0200.
  ELSE.
*    PERFORM display_alv_grid_200.
    PERFORM display_alv_grid_200.
    PERFORM refresh_alv_0200.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0200 .
  PERFORM create_container_0200.
  PERFORM create_alvs_0200.
  PERFORM display_alv_grid_200.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_CONTAINER_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_container_0200 .

  PERFORM create_dock_bottom CHANGING go_dock_gr.
  PERFORM create_dock_split_obj USING go_dock_gr 1 2 CHANGING go_split_editgr.
  PERFORM set_row_height USING 1 30 CHANGING go_split_editgr.
  PERFORM set_col_width USING 1 40 CHANGING go_split_editgr.
  PERFORM get_split_container USING 1 1 CHANGING go_split_editgr go_con_left.
  PERFORM get_split_container USING 1 2 CHANGING go_split_editgr go_con_right.

  PERFORM set_col_width USING 2 58 CHANGING go_split_editgr.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_DOCK_BOTTOM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GO_DOCK_GR  text
*----------------------------------------------------------------------*
FORM create_dock_bottom  CHANGING co_dock TYPE REF TO cl_gui_docking_container.

  CREATE OBJECT co_dock
    EXPORTING
*     parent                      =
      repid                       = sy-repid
      dynnr                       = sy-dynnr
      side                        = cl_gui_docking_container=>dock_at_bottom
      extension                   = 300
*     style                       =
*     lifetime                    = lifetime_default
*     caption                     =
*     metric                      = 0
*     ratio                       =
*     no_autodef_progid_dynnr     =
*     name                        =
    EXCEPTIONS
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5
      OTHERS                      = 6.
  IF sy-subrc <> 0.
    MESSAGE a100(zmss) WITH sy-uname. " 시스템 오류입니다 &에게 문의하세요!
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_DOCK_SPLIT_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_DOCK_GR  text
*      -->P_1      text
*      -->P_2      text
*      <--P_GO_SPLIT_EDITGR  text
*----------------------------------------------------------------------*
FORM create_dock_split_obj  USING    VALUE(po_obj) TYPE REF TO cl_gui_docking_container
                                VALUE(p_1) TYPE i
                                VALUE(p_2) TYPE i
                              CHANGING co_split TYPE REF TO cl_gui_splitter_container.

  CREATE OBJECT co_split
    EXPORTING
      parent  = po_obj
      rows    = p_1
*     WIDTH   = 2000
      columns = p_2.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALVS_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_alvs_0200 .
  PERFORM create_alv USING go_con_left CHANGING go_alv_editgr.
  PERFORM create_alv USING go_con_right CHANGING go_alv_polist.

  PERFORM req_event_for_alv_0200.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REQ_EVENT_FOR_ALV_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM req_event_for_alv_0200 .

  SET HANDLER :   lcl_event_handler=>handle_user_command FOR go_alv_editgr,
                  lcl_event_handler=>handle_toolbar FOR go_alv_editgr,
                  lcl_event_handler=>handle_hotspot FOR go_alv_editgr,
                  lcl_event_handler=>handle_data_changed FOR go_alv_editgr.

  CALL METHOD go_alv_editgr->register_edit_event
    EXPORTING
      i_event_id = cl_gui_alv_grid=>mc_evt_modified.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_GRID_200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_alv_grid_200 .

  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0215' gs_layo7 gt_exclude CHANGING gt_edit_item gt_fcat7 gt_sort go_alv_editgr.
  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0213' gs_layo8 gt_exclude CHANGING gt_confirm gt_fcat8 gt_sort go_alv_polist.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_alv_0200 .


  PERFORM refresh_table_display CHANGING go_alv_editgr.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SET_ALV_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_alv_0300 .

  IF go_con_detail IS INITIAL.
    PERFORM init_alv_0300.
  ELSE.
    PERFORM refresh_alv_0300.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0300 .
  PERFORM create_container_0300.
  PERFORM create_alvs_0300.
  PERFORM display_alv_grid_0300.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_CONTAINER_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_container_0300 .
*  PERFORM create_cust_obj  USING 'CON_DETAIL' CHANGING go_con_detail.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALVS_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_alvs_0300 .
  PERFORM create_alv_custom USING 'CON_DETAIL'  CHANGING go_con_detail go_alv_detail.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_GRID_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_alv_grid_0300 .
  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0216' gs_layo12 gt_exclude CHANGING gt_gritem2 gt_fcat12 gt_sort go_alv_detail.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_alv_0300 .
  PERFORM refresh_table_display CHANGING go_alv_detail.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV_CUSTOM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_CON_DETAIL  text
*      <--P_GO_ALV_DETAIL  text
*----------------------------------------------------------------------*
FORM create_alv_custom USING VALUE(p_con) TYPE c
                 CHANGING  co_con TYPE REF TO cl_gui_custom_container
                           co_alv TYPE REF TO cl_gui_alv_grid.

  IF co_con IS NOT INITIAL. RETURN. ENDIF.

  CREATE OBJECT co_con
    EXPORTING
*     parent                      =
      container_name              = p_con
*     style                       =
*     lifetime                    = lifetime_default
*     repid                       =
*     dynnr                       =
*     no_autodef_progid_dynnr     =
    EXCEPTIONS
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5
      OTHERS                      = 6.
  IF sy-subrc <> 0.
    MESSAGE a100(zmss) WITH sy-uname. " 시스템 오류입니다 &에게 문의하세요!
  ENDIF.

  CREATE OBJECT co_alv
    EXPORTING
*     i_shellstyle      = 0
*     i_lifetime        =
      i_parent          = co_con
*     i_appl_events     = space
*     i_parentdbg       =
*     i_applogparent    =
*     i_graphicsparent  =
*     i_name            =
*     i_fcat_complete   = SPACE
    EXCEPTIONS
      error_cntl_create = 1
      error_cntl_init   = 2
      error_cntl_link   = 3
      error_dp_create   = 4
      OTHERS            = 5.

  IF sy-subrc <> 0.
    MESSAGE a100(zmss) WITH sy-uname. " 시스템 오류입니다 &에게 문의하세요!
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ALV_0302
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_alv_0302 .

  IF go_con_vnprc IS INITIAL.

    PERFORM init_alv_0302.
  ELSE.
    PERFORM refresh_alv_0302.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0302
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0302 .
  PERFORM create_alvs_0302.
  PERFORM display_alv_grid_0302.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALVS_0302
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_alvs_0302 .
  PERFORM create_alv_custom USING 'CON_VNPRC'  CHANGING go_con_vnprc go_alv_vnprc.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_GRID_0302
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_alv_grid_0302 .
  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0219' gs_layo9 gt_exclude CHANGING gt_vnprc gt_fcat9 gt_sort go_alv_vnprc.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV_0302
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_alv_0302 .
  PERFORM refresh_table_display CHANGING go_alv_vnprc.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ALV_0109
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_alv_0109 .

  IF go_cust_exp IS INITIAL.
    PERFORM init_alv_0109.
  ELSE.
    PERFORM refresh_alv_0109.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0109
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0109 .

  PERFORM create_container_0109.
  PERFORM create_alvs_0109.
  PERFORM display_alvs_0109.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_CONTAINER_0109
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_container_0109 .

  PERFORM create_cust_obj  USING 'CON_EXP' CHANGING go_cust_exp.


  PERFORM create_split_obj_cust USING go_cust_exp 1 2 CHANGING go_split_exp.
  PERFORM set_row_height USING 1 30 CHANGING go_split_exp.
  PERFORM set_col_width USING 1 40 CHANGING go_split_exp.


  PERFORM get_split_container USING 1 1 CHANGING go_split_exp go_con_exp_left.
  PERFORM get_split_container USING 1 2 CHANGING go_split_exp go_con_exp_right.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALVS_0109
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_alvs_0109 .

  PERFORM create_alv USING go_con_exp_left CHANGING go_alv_exp_list.
  PERFORM create_alv USING go_con_exp_right CHANGING go_alv_exp_item.

  PERFORM req_event_for_alv_0109.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALVS_0109
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_alvs_0109 .
  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0221' gs_layo10 gt_exclude CHANGING gt_expdata gt_fcat10 gt_sort go_alv_exp_list.
  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0222' gs_layo11 gt_exclude CHANGING gt_expitem gt_fcat11 gt_sort go_alv_exp_item.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV_0109
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_alv_0109 .
  PERFORM refresh_table_display CHANGING go_alv_exp_list.
  PERFORM refresh_table_display CHANGING go_alv_exp_item.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REQ_EVENT_FOR_ALV_0109
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM req_event_for_alv_0109 .
  SET HANDLER :    lcl_event_handler=>handle_hotspot FOR go_alv_exp_list,
   lcl_event_handler=>handle_double_click FOR go_alv_exp_list.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_0102
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat_0102 .
  PERFORM set_fcat_change.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_CHANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat_change .
  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  IF gv_flag = 1.  " 또는 검색 조건 체크
    lt_field_conf = VALUE #(
      ( fieldname = 'LIGHT' coltext = TEXT-t01  outputlen = 15 fix_column = 'X' col_pos = 1 )
      ( fieldname = 'VNAME' col_pos = 2 )  " 순서 변경
      ( fieldname = 'DUDAT' col_pos = 3 )  " 순서 변경
      ( fieldname = 'PODAT' col_pos = 4 )
      ( fieldname = 'ENAME' col_pos = 5 coltext = '담당자 이름' )
      ( fieldname = 'STEXT' col_pos = 6 )
      ( fieldname = 'PONUM' col_pos = 7 )
      ( fieldname = 'VENID' no_out = 'X' )
      ( fieldname = 'RGTOR' no_out = 'X' )
    ).
  ELSE.
    " 기본 순서
    lt_field_conf = VALUE #(
      ( fieldname = 'LIGHT' coltext = TEXT-t01  outputlen = 15 fix_column = 'X' col_pos = 1 )
      ( fieldname = 'DUDAT' col_pos = 2 )
      ( fieldname = 'VNAME' col_pos = 3 )
      ( fieldname = 'PODAT' col_pos = 4 )
      ( fieldname = 'ENAME' col_pos = 5 coltext = '담당자 이름' )
      ( fieldname = 'STEXT' col_pos = 6 )
      ( fieldname = 'PONUM' col_pos = 7 )
      ( fieldname = 'VENID' no_out = 'X' )
      ( fieldname = 'RGTOR' no_out = 'X' )
    ).
  ENDIF.

  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0400  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0400 OUTPUT.
  SET PF-STATUS 'S400'.
  SET TITLEBAR 'T400'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV_CUSTOM_TREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0223   text
*      <--P_GO_CON_TREE  text
*      <--P_GO_ALV_TREE  text
*----------------------------------------------------------------------*
FORM create_alv_custom_tree  USING VALUE(p_con) TYPE c
                 CHANGING  co_con TYPE REF TO cl_gui_custom_container
                           co_tree TYPE REF TO cl_gui_simple_tree.

  IF co_con IS NOT INITIAL. RETURN. ENDIF.

  CREATE OBJECT co_con
    EXPORTING
*     parent                      =
      container_name              = p_con
*     style                       =
*     lifetime                    = lifetime_default
*     repid                       =
*     dynnr                       =
*     no_autodef_progid_dynnr     =
    EXCEPTIONS
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5
      OTHERS                      = 6.
  IF sy-subrc <> 0.
    MESSAGE a100(zmss) WITH sy-uname. " 시스템 오류입니다 &에게 문의하세요!
  ENDIF.


  IF co_tree IS NOT INITIAL. RETURN. ENDIF.
  CREATE OBJECT co_tree
    EXPORTING
*     lifetime            =
      parent              = co_con
*     shellstyle          =
      node_selection_mode = cl_gui_simple_tree=>node_sel_mode_single
*     hide_selection      =
*     name                =
    EXCEPTIONS
      OTHERS              = 6.

  IF sy-subrc <> 0.
    MESSAGE a100(zmss) WITH sy-uname. " 시스템 오류입니다 &에게 문의하세요!
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REQ_EVENT_FOR_ALV_0400
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM req_event_for_alv_0400 .

  DATA: ls_event TYPE cntl_simple_event,
        lt_event LIKE TABLE OF ls_event.

  ls_event-eventid = cl_gui_simple_tree=>eventid_node_double_click.
*  ls_event-appl_event = 'X'. " PAI Event
  APPEND ls_event TO lt_event.
  CALL METHOD go_alv_tree->set_registered_events
    EXPORTING
      events = lt_event.

  SET HANDLER lcl_handler_tree=>on_node_double_click FOR go_alv_tree.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_TREE_0400
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GO_ALV_TREE  text
*----------------------------------------------------------------------*
FORM display_tree_0400  CHANGING co_tree TYPE REF TO cl_gui_simple_tree.

  PERFORM get_tree_data.

  CALL METHOD co_tree->add_nodes
    EXPORTING
      table_structure_name = 'MTREESNODE'
      node_table           = gt_tree
*  EXCEPTIONS
*     error_in_node_table  = 1
*     failed               = 2
*     dp_error             = 3
*     table_structure_name_not_found = 4
*     others               = 5
    .
  CALL METHOD co_tree->expand_node
    EXPORTING
      node_key = 'ROOT'.

  CALL METHOD co_tree->expand_node
    EXPORTING
      node_key = '1000'.

  CALL METHOD co_tree->expand_node
    EXPORTING
      node_key = '2000'.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

* Expand Level
*  CALL METHOD go_tree->expand_root_nodes
*    EXPORTING
*      level_count    = 1
*      expand_subtree = ''.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_TREE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_tree_data .

  IF gt_tree IS NOT INITIAL. RETURN. ENDIF.
  DATA: lt_vendor_2024 LIKE gt_vendor,
        lt_vendor_2025 LIKE gt_vendor,
        ls_vendor      LIKE LINE OF lt_vendor_2024,
        lv_venid       TYPE ztssvend-venid,
        lv_vname       TYPE ztssvend-vname.

  " 2024년, 2025년 PO가 있는 업체 목록 가져오기
  SELECT DISTINCT venid
    INTO CORRESPONDING FIELDS OF TABLE lt_vendor_2024
    FROM ztsspoh
    WHERE dudat >= '20240101' AND dudat <= '20241231'.

  SELECT DISTINCT venid
    INTO CORRESPONDING FIELDS OF  TABLE lt_vendor_2025
    FROM ztsspoh
    WHERE dudat >= '20250101' AND dudat <= '20251231'.

  " Root 노드
  CLEAR gs_tree.
  gs_tree-node_key = 'ROOT'.
  gs_tree-relatkey = ''.
  gs_tree-isfolder = 'X'.
  gs_tree-text = '납기지연 현황'.
  APPEND gs_tree TO gt_tree.

*  CLEAR gs_tree.
*  gs_tree-node_key = 'ALL'.
*  gs_tree-relatkey = 'ROOT'.
*  gs_tree-isfolder = 'X'.
*  gs_tree-text = '전체 보기'.
*  APPEND gs_tree TO gt_tree.

  " 2024년 폴더
  CLEAR gs_tree.
  gs_tree-node_key = '1000'.
  gs_tree-relatkey = 'ROOT'.
  gs_tree-isfolder = 'X'.
  gs_tree-text = '2024년'.
  APPEND gs_tree TO gt_tree.

  " 2024년 하위 업체들
  LOOP AT lt_vendor_2024 INTO ls_vendor.
    PERFORM get_vendor_name USING ls_vendor-venid CHANGING lv_vname.
    IF sy-subrc = 0.
      CLEAR gs_tree.
      gs_tree-node_key = |2024{ ls_vendor-venid }|.
      gs_tree-relatkey = '1000'.
      gs_tree-isfolder = ''.
      gs_tree-text = lv_vname.
      APPEND gs_tree TO gt_tree.
    ENDIF.
    CLEAR ls_vendor.
  ENDLOOP.

  " 2025년 폴더
  CLEAR gs_tree.
  gs_tree-node_key = '2000'.
  gs_tree-relatkey = 'ROOT'.
  gs_tree-isfolder = 'X'.
  gs_tree-text = '2025년'.
  APPEND gs_tree TO gt_tree.

  " 2025년 하위 업체들
  LOOP AT lt_vendor_2025 INTO ls_vendor.
    PERFORM get_vendor_name USING ls_vendor-venid CHANGING lv_vname.
    IF sy-subrc = 0.
      CLEAR gs_tree.
      gs_tree-node_key = |2025{ ls_vendor-venid }|.  " ← 2025V001
      gs_tree-relatkey = '2000'.
      gs_tree-isfolder = ''.
      gs_tree-text = lv_vname.
      APPEND gs_tree TO gt_tree.
    ENDIF.
    CLEAR ls_vendor.
  ENDLOOP.
*  DATA: lv_node_key  TYPE tm_nodekey VALUE 1000,
*        lv_node_key2 TYPE tm_nodekey VALUE 2000.
*  " 연도 폴더
*  gs_tree-node_key = '1000'.
*  gs_tree-relatkey = ''.
*  gs_tree-isfolder = 'X'.
*  gs_tree-text = '2024'.
*  APPEND gs_tree TO gt_tree.
*
*  LOOP AT gt_vendor INTO DATA(ls_vendor).
*    lv_node_key = lv_node_key + 1.
*
*    CLEAR gs_tree.
*    gs_tree-node_key = ls_vendor-venid.  " 'V1000001'
*    gs_tree-relatkey = '1000'.
*    gs_tree-isfolder = ''.
*    gs_tree-text = ls_vendor-vname.
*    APPEND gs_tree TO gt_tree.
*  ENDLOOP.
*
*  gs_tree-node_key = '2000'.
*  gs_tree-relatkey = ''.
*  gs_tree-isfolder = 'X'.
*  gs_tree-text = '2025'.
*  APPEND gs_tree TO gt_tree.
*  LOOP AT gt_vendor INTO DATA(ls_vendor2).
*    lv_node_key2 = lv_node_key2 + 1.
*
*    CLEAR gs_tree.
*    gs_tree-node_key = ls_vendor-venid.  " 'V1000001'
*    gs_tree-relatkey = '2000'.
*    gs_tree-isfolder = ''.
*    gs_tree-text = ls_vendor-vname.
*    APPEND gs_tree TO gt_tree.
*  ENDLOOP.
  " 연도 폴더
  " 2024년 폴더
*  CLEAR gs_tree.
*  gs_tree-node_key = '1000'.
*  gs_tree-relatkey = ''.
*  gs_tree-isfolder = 'X'.
*  gs_tree-text = '2024년'.
*  APPEND gs_tree TO gt_tree.
*
*  " 2024년 하위 업체들
*  LOOP AT gt_vendor INTO DATA(ls_vendor).
*    lv_node_key = lv_node_key + 1.
*
*    CLEAR gs_tree.
*    gs_tree-node_key = ls_vendor-venid.  " 'V1000001'
*    gs_tree-relatkey = '1000'.
*    gs_tree-isfolder = ''.
*    gs_tree-text = ls_vendor-vname.
*    APPEND gs_tree TO gt_tree.
*  ENDLOOP.
*
*  " 2025년 폴더
*  CLEAR gs_tree.
*  gs_tree-node_key = '2000'.
*  gs_tree-relatkey = ''.
*  gs_tree-isfolder = 'X'.
*  gs_tree-text = '2025년'.
*  APPEND gs_tree TO gt_tree.
*
*  " 2025년 하위 업체들
*  lv_node_key = '2000'.
*  LOOP AT gt_vendor INTO DATA(ls_vendor2).
*    lv_node_key = lv_node_key + 1.
*
*    CLEAR gs_tree.
*    gs_tree-node_key = ls_vendor2-venid.  " 'V1000001'
*    gs_tree-relatkey = '2000'.
*    gs_tree-isfolder = ''.
*    gs_tree-text = ls_vendor2-vname.
*    APPEND gs_tree TO gt_tree.
*  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FREE_TREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM free_tree .

  FREE: go_alv_tree, go_con_tree.
  CLEAR : go_alv_tree, go_con_tree.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ALV_0400
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_alv_0400 .

  IF go_con_exp_tree IS INITIAL.
    PERFORM init_alv_0400.
  ELSE.
    PERFORM refresh_alv_0400.
  ENDIF.

  IF go_con_vinfo IS INITIAL.
    PERFORM init_alv_0400_vinfo.
  ELSE.
    PERFORM refresh_alv_0400.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0400
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0400 .
  PERFORM create_alv_custom USING 'CON_TDATA'  CHANGING go_con_exp_tree   go_alv_exp_tree.
  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0223' gs_layo13 gt_exclude CHANGING gt_vdudat gt_fcat13 gt_sort go_alv_exp_tree.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV_0400
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_alv_0400 .
  PERFORM refresh_table_display CHANGING go_alv_exp_tree.
  PERFORM refresh_table_display CHANGING go_alv_vinfo.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT5_CHANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat5_change .


  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.
  IF gv_flag2 = 0.

    lt_field_conf = VALUE #(
    " == 입고 완료 리스트
     ( fieldname = 'RSTAT' no_out = 'X' )
     ( fieldname = 'VENID' no_out = 'X' )
     ( fieldname = 'RGTOR' no_out = 'X' )
     ( fieldname = 'JENUM' no_out = 'X' )
     ( fieldname = 'FYEAR' no_out = 'X' )
     ( fieldname = 'RSTAT_T' col_pos = 1 )
     ( fieldname = 'GRDAT' col_pos = 2 )
     ( fieldname = 'VNAME' col_pos = 3 )
     ( fieldname = 'ENAME' col_pos = 4 )
     ( fieldname = 'STEXT' col_pos = 5 )
     ( fieldname = 'RGDAT' col_pos = 6 )
     ( fieldname = 'GRNUM' col_pos = 7 hotspot = 'X' )
     ( fieldname = 'LTEXT' coltext = '문서 수정' just = 'C' outputlen = 10 col_pos = 8 )
   ).
    PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat5.
  ELSEIF gv_flag2 = 1.
    lt_field_conf = VALUE #(
 " == 입고 완료 리스트
  ( fieldname = 'RSTAT' no_out = 'X' )
  ( fieldname = 'VENID' no_out = 'X' )
  ( fieldname = 'RGTOR' no_out = 'X' )
  ( fieldname = 'JENUM' no_out = 'X' )
  ( fieldname = 'FYEAR' no_out = 'X' )
  ( fieldname = 'GRNUM' hotspot = 'X' )
  ( fieldname = 'RSTAT_T' col_pos = 1 )
  ( fieldname = 'VNAME' col_pos = 2 )
  ( fieldname = 'GRDAT' col_pos = 3 )
  ( fieldname = 'ENAME' col_pos = 4 )
  ( fieldname = 'STEXT' col_pos = 5 )
  ( fieldname = 'RGDAT' col_pos = 6 )
  ( fieldname = 'GRNUM' col_pos = 7  hotspot = 'X' )
  ( fieldname = 'LTEXT' coltext = '문서 수정' just = 'C' outputlen = 10 col_pos = 8 )
).
    PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat5.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEARCH_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM search_0100 .
  CLEAR gt_item.
  IF zsssmm0210-grnum IS NOT INITIAL.
    CLEAR gt_grdata.
    DATA : lv_grnum  TYPE ztssgrh-grnum,
           ls_grdata LIKE LINE OF gt_grdata.

    SELECT SINGLE  grnum rstat grdat jenum fyear stext rgdat rgtor
    INTO CORRESPONDING FIELDS OF ls_grdata
    FROM ztssgrh
     WHERE grnum = zsssmm0210-grnum.
    APPEND ls_grdata TO gt_grdata.
    PERFORM modify_grdatas TABLES gt_grdata.
    RETURN .
  ENDIF.

  IF zsssmm0210-venid IS INITIAL.
    CLEAR zsssmm0210-vsnme.
  ENDIF.
  IF gv_screen = 0.
    PERFORM get_po_datas USING zsssmm0210.
    IF gt_podata IS INITIAL.
      MESSAGE i999(zmcss) WITH '조건과 일치하는 정보가 존재하지 않습니다.'.
    ENDIF.
    CLEAR gr_ponum.
  ELSEIF gv_screen = 1.
    IF gv_chk1 IS INITIAL AND gv_chk2 = 'X'..
      PERFORM get_gr_complete USING zsssmm0210.
    ELSEIF gv_chk1 = 'X' AND gv_chk2 IS INITIAL.
      PERFORM get_iv_complete USING zsssmm0210.
    ELSEIF gv_chk1 IS NOT INITIAL AND gv_chk2 IS NOT INITIAL.
      PERFORM get_gr_datas USING zsssmm0210.
    ELSE.
      CLEAR gt_grdata.
    ENDIF.
    IF gt_grdata IS INITIAL.
      MESSAGE i999(zmcss) WITH '조건과 일치하는 정보가 존재하지 않습니다.'.
    ENDIF.
  ELSEIF gv_screen = 2.
    PERFORM get_exp_datas USING zsssmm0210.
    IF gt_expdata IS INITIAL.
      MESSAGE i999(zmcss) WITH '조건과 일치하는 정보가 존재하지 않습니다.'.
    ENDIF.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ALV_0310
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_alv_0310 .

  IF go_con_simple IS INITIAL.
    PERFORM init_alv_0310.
  ELSE.
    PERFORM refresh_alv_0310.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0310
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0310 .
  PERFORM create_alvs_0310.
  PERFORM display_alv_grid_0310.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALVS_0310
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_alvs_0310 .
  PERFORM create_alv_custom USING 'CON_DETAIL'  CHANGING go_con_simple go_alv_simple.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_GRID_0310
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_alv_grid_0310 .
  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0216' gs_layo12 gt_exclude CHANGING gt_gritem gt_fcat12 gt_sort go_alv_simple.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV_0310
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_alv_0310 .
  PERFORM refresh_table_display CHANGING go_alv_simple.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CALCULATE_DELAY_STATISTICS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_VDUDAT  text
*----------------------------------------------------------------------*
FORM calculate_delay_statistics USING pt_data LIKE gt_vdudat.

  DATA: ls_data  LIKE LINE OF pt_data,
        ls_stat  LIKE gs_vendor_stat,
        lv_year  TYPE numc4,
        lv_count TYPE i,
        lv_tabix TYPE sy-tabix.

  DATA: BEGIN OF lt_sum OCCURS 0,
          venid       TYPE ztssvend-venid,
          year        TYPE numc4,
          total_days  TYPE i,
          delay_count TYPE i,
        END OF lt_sum.

  DATA: BEGIN OF lt_po_all OCCURS 0,
          venid TYPE ztssvend-venid,
          dudat TYPE ztsspoh-dudat,
        END OF lt_po_all.

  DATA: BEGIN OF lt_po_count OCCURS 0,
          venid TYPE ztssvend-venid,
          year  TYPE numc4,
          total TYPE i,
        END OF lt_po_count.

  REFRESH: gt_vendor_stat, lt_sum[], lt_po_all[], lt_po_count[].

  " 입력 데이터 체크
  DESCRIBE TABLE pt_data LINES lv_count.
  IF lv_count = 0.
    RETURN.
  ENDIF.

  " 1단계: 전체 PO 조회
  SELECT h~venid h~dudat
    INTO CORRESPONDING FIELDS OF TABLE lt_po_all
    FROM ztsspoh AS h
    INNER JOIN ztsspoi AS i ON h~ponum = i~ponum
    WHERE ( h~dudat BETWEEN '20240101' AND '20241231' )
       OR ( h~dudat BETWEEN '20250101' AND '20251231' ).

  " 업체별, 년도별 카운트
  LOOP AT lt_po_all.
    CHECK lt_po_all-dudat IS NOT INITIAL.

    lv_year = lt_po_all-dudat(4).
    CHECK lv_year = '2024' OR lv_year = '2025'.

    READ TABLE lt_po_count WITH KEY venid = lt_po_all-venid
                                    year = lv_year.
    IF sy-subrc = 0.
      lv_tabix = sy-tabix.
      lt_po_count-total = lt_po_count-total + 1.
      MODIFY lt_po_count INDEX lv_tabix.  " ★ 저장된 값 사용
    ELSE.
      CLEAR lt_po_count.
      lt_po_count-venid = lt_po_all-venid.
      lt_po_count-year = lv_year.
      lt_po_count-total = 1.
      APPEND lt_po_count.
    ENDIF.
  ENDLOOP.

  " 2단계: 지연 데이터 집계
  LOOP AT pt_data INTO ls_data.

    CHECK ls_data-dudat IS NOT INITIAL.
    CHECK ls_data-venid IS NOT INITIAL.
    CHECK ls_data-ludat > 0.

    lv_year = ls_data-dudat(4).
    CHECK lv_year = '2024' OR lv_year = '2025'.

    " 업체 통계 찾기/생성
    READ TABLE gt_vendor_stat INTO ls_stat WITH KEY venid = ls_data-venid.

    IF sy-subrc <> 0.
      CLEAR ls_stat.
      ls_stat-venid = ls_data-venid.
      PERFORM get_vendor_name USING ls_stat-venid CHANGING ls_stat-vname.
*      ls_stat-vname = ls_data-vname.
    ENDIF.

    " 년도별 지연 건수 집계
    IF lv_year = '2024'.
      ls_stat-delay_2024 = ls_stat-delay_2024 + 1.

      READ TABLE lt_sum WITH KEY venid = ls_data-venid year = '2024'.
      IF sy-subrc = 0.
        lv_tabix = sy-tabix.
        lt_sum-total_days = lt_sum-total_days + ls_data-ludat.
        lt_sum-delay_count = lt_sum-delay_count + 1.
        MODIFY lt_sum INDEX lv_tabix.
      ELSE.
        CLEAR lt_sum.
        lt_sum-venid = ls_data-venid.
        lt_sum-year = '2024'.
        lt_sum-total_days = ls_data-ludat.
        lt_sum-delay_count = 1.
        APPEND lt_sum.
      ENDIF.

    ELSEIF lv_year = '2025'.
      ls_stat-delay_2025 = ls_stat-delay_2025 + 1.

      READ TABLE lt_sum WITH KEY venid = ls_data-venid year = '2025'.
      IF sy-subrc = 0.
        lv_tabix = sy-tabix.
        lt_sum-total_days = lt_sum-total_days + ls_data-ludat.
        lt_sum-delay_count = lt_sum-delay_count + 1.
        MODIFY lt_sum INDEX lv_tabix.
      ELSE.
        CLEAR lt_sum.
        lt_sum-venid = ls_data-venid.
        lt_sum-year = '2025'.
        lt_sum-total_days = ls_data-ludat.
        lt_sum-delay_count = 1.
        APPEND lt_sum.
      ENDIF.
    ENDIF.


    READ TABLE gt_vendor_stat TRANSPORTING NO FIELDS
         WITH KEY venid = ls_data-venid.
    IF sy-subrc = 0.
      lv_tabix = sy-tabix.
      MODIFY gt_vendor_stat FROM ls_stat INDEX lv_tabix.
    ELSE.
      APPEND ls_stat TO gt_vendor_stat.
    ENDIF.

  ENDLOOP.

  " 3단계: 지연율 계산
  LOOP AT gt_vendor_stat INTO ls_stat.

    lv_tabix = sy-tabix.

    " 2024년 전체 건수
    READ TABLE lt_po_count WITH KEY venid = ls_stat-venid year = '2024'.
    IF sy-subrc = 0.
      ls_stat-total_2024 = lt_po_count-total.
    ENDIF.

    " 2025년 전체 건수
    READ TABLE lt_po_count WITH KEY venid = ls_stat-venid year = '2025'.
    IF sy-subrc = 0.
      ls_stat-total_2025 = lt_po_count-total.
    ENDIF.

    " 2024년 지연율 계산
    IF ls_stat-total_2024 > 0.
      DATA: lv_rate_temp TYPE p DECIMALS 2.
      lv_rate_temp = ls_stat-delay_2024 * 100.
      ls_stat-rate_2024 = lv_rate_temp / ls_stat-total_2024.

      IF ls_stat-delay_2024 > 0.
        READ TABLE lt_sum WITH KEY venid = ls_stat-venid year = '2024'.
        IF sy-subrc = 0 AND lt_sum-delay_count > 0.
          ls_stat-avg_days_2024 = lt_sum-total_days / lt_sum-delay_count.
        ENDIF.
      ENDIF.
    ENDIF.

    " 2025년 지연율 계산
    IF ls_stat-total_2025 > 0.
      lv_rate_temp = ls_stat-delay_2025 * 100.
      ls_stat-rate_2025 = lv_rate_temp / ls_stat-total_2025.

      IF ls_stat-delay_2025 > 0.
        READ TABLE lt_sum WITH KEY venid = ls_stat-venid year = '2025'.
        IF sy-subrc = 0 AND lt_sum-delay_count > 0.
          ls_stat-avg_days_2025 = lt_sum-total_days / lt_sum-delay_count.
        ENDIF.
      ENDIF.
    ENDIF.

    " 전체 합산
    ls_stat-total_all = ls_stat-total_2024 + ls_stat-total_2025.
    ls_stat-delay_all = ls_stat-delay_2024 + ls_stat-delay_2025.

    IF ls_stat-total_all > 0.
      lv_rate_temp = ls_stat-delay_all * 100.
      ls_stat-rate_all = lv_rate_temp / ls_stat-total_all.

      IF ls_stat-delay_all > 0.
        DATA: lv_total_days_all TYPE i.
        CLEAR lv_total_days_all.

        READ TABLE lt_sum WITH KEY venid = ls_stat-venid year = '2024'.
        IF sy-subrc = 0.
          lv_total_days_all = lv_total_days_all + lt_sum-total_days.
        ENDIF.

        READ TABLE lt_sum WITH KEY venid = ls_stat-venid year = '2025'.
        IF sy-subrc = 0.
          lv_total_days_all = lv_total_days_all + lt_sum-total_days.
        ENDIF.

        IF ls_stat-delay_all > 0.
          ls_stat-avg_days_all = lv_total_days_all / ls_stat-delay_all.
        ENDIF.
      ENDIF.
    ENDIF.

    " ★ LOOP의 인덱스로 MODIFY
    MODIFY gt_vendor_stat FROM ls_stat INDEX lv_tabix.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_TOP3_DELAYED_VENDORS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_top3_delayed_vendors.

  DATA: lt_sorted LIKE gt_vendor_stat,
        ls_stat   LIKE gs_vendor_stat.

  " 초기화
  CLEAR: gv_top1_venid, gv_top1_vname, gv_top1_rate, gv_top1_days,
         gv_top2_venid, gv_top2_vname, gv_top2_rate, gv_top2_days,
         gv_top3_venid, gv_top3_vname, gv_top3_rate, gv_top3_days.

  lt_sorted[] = gt_vendor_stat[].

  " 전체 지연율 내림차순  순우ㅣ내려보자
  SORT lt_sorted BY rate_all DESCENDING
                    avg_days_all DESCENDING.

  " 1위
  READ TABLE lt_sorted INTO ls_stat INDEX 1.
  IF sy-subrc = 0.
    gv_top1_venid = ls_stat-venid.
    gv_top1_vname = ls_stat-vname.
    gv_top1_rate = ls_stat-rate_all.
    gv_top1_days = ls_stat-avg_days_all.
  ENDIF.

  " 2위
  READ TABLE lt_sorted INTO ls_stat INDEX 2.
  IF sy-subrc = 0.
    gv_top2_venid = ls_stat-venid.
    gv_top2_vname = ls_stat-vname.
    gv_top2_rate = ls_stat-rate_all.
    gv_top2_days = ls_stat-avg_days_all.
  ENDIF.

  " 3위
  READ TABLE lt_sorted INTO ls_stat INDEX 3.
  IF sy-subrc = 0.
    gv_top3_venid = ls_stat-venid.
    gv_top3_vname = ls_stat-vname.
    gv_top3_rate = ls_stat-rate_all.
    gv_top3_days = ls_stat-avg_days_all.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CALCULATE_ALL_VENDOR_TOP3
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM calculate_all_vendor_top3 .
  DATA: lt_po_sum      LIKE TABLE OF gs_itamt,
        lt_gr_sum      LIKE TABLE OF gs_itamt,
        lt_temp_vdudat LIKE gt_vdudat,
        ls_vendor      LIKE LINE OF gt_vendor.

  REFRESH gt_vdudat_all.

  "
  LOOP AT gt_vendor INTO ls_vendor.

    " ===== 2024년 데이터 =====
    PERFORM get_posum_by_venid USING ls_vendor-venid
                                     '2024'
                               CHANGING lt_po_sum.

    PERFORM get_grsum_by_venid USING ls_vendor-venid
                                     '2024'
                               CHANGING lt_gr_sum.

    REFRESH lt_temp_vdudat.
    PERFORM create_expdudat USING lt_po_sum
                                  lt_gr_sum
                                  ls_vendor-venid
                            CHANGING lt_temp_vdudat.

    APPEND LINES OF lt_temp_vdudat TO gt_vdudat_all.

    " ===== 2025년 데이터 =====
    PERFORM get_posum_by_venid USING ls_vendor-venid
                                     '2025'
                               CHANGING lt_po_sum.

    PERFORM get_grsum_by_venid USING ls_vendor-venid
                                     '2025'
                               CHANGING lt_gr_sum.

    REFRESH lt_temp_vdudat.
    PERFORM create_expdudat USING lt_po_sum
                                  lt_gr_sum
                                  ls_vendor-venid
                            CHANGING lt_temp_vdudat.

    APPEND LINES OF lt_temp_vdudat TO gt_vdudat_all.

  ENDLOOP.

  " 통계 계산
  IF gt_vdudat_all[] IS NOT INITIAL.
    PERFORM calculate_delay_statistics USING gt_vdudat_all.
    PERFORM get_top3_delayed_vendors.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0400_VINFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0400_vinfo .
  PERFORM create_alv_custom USING 'CON_VINFO'  CHANGING go_con_vinfo   go_alv_vinfo.
  PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0224' gs_layo14 gt_exclude CHANGING gt_avgven gt_fcat14 gt_sort go_alv_vinfo.
ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
