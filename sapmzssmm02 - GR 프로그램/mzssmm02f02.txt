*&---------------------------------------------------------------------*
*&  Include           MZSSMM02F02
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_DEFAULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_default .

  " 공통변수 기본 값 설정
  PERFORM init_variables.

  " screen 기본 값 설정
  PERFORM set_default_values.

  " layout, fcat, sort 설정
  PERFORM set_screen_element.

  " 기본 데이터 가져오기 - search시에도 쓰임
  PERFORM get_datas.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_VARIABLES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_variables .

  CLEAR : ok_code,
          gv_subrc,
          gv_msg.

  gv_radio_vname = 'X'.
  gv_radio_venid = ''.
  gv_radio_screen = 0.
  gv_screen = 0.
  gv_chk1 = 'X'.
  gv_chk2 = 'X'.

  " fixed value 가져오기
  PERFORM get_domain_values USING 'ZDSSPERSG' CHANGING gt_dd07v.
  PERFORM get_domain_values USING 'ZDSSESTAT' CHANGING gt_dd07v.

  PERFORM get_rgtors USING sy-uname 'WM' CHANGING gv_rgtor.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DEFAULT_VALUES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_default_values .

  PERFORM set_date CHANGING zsssmm0210-grdat_s zsssmm0210-grdat_e zsssmm0210-dudat_s zsssmm0210-dudat_e zsssmm0214-grdat.
  zsssmm0210-dudat_y = '2024'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0210_GRDAT_S  text
*      <--P_ZSSSMM0210_DUDAT_S  text
*      <--P_ZSSSMM0214_GRDAT  text
*----------------------------------------------------------------------*
FORM set_date  CHANGING cv_grdat_s TYPE sy-datum
                        cv_grdat_e TYPE sy-datum
                        cv_dudat_s TYPE sy-datum
                        cv_dudat_e TYPE sy-datum
                        cv_grdoc TYPE sy-datum.

  " 입고일자 : 이번달 첫째일 ~ 이번달 말일
  cv_grdat_s = sy-datum+0(6) && '01'.
  PERFORM cal_last_day_month USING sy-datum CHANGING cv_grdat_e.

  " 납기일자 설정 : 오늘 기준 7일전 ~ 오늘 기준 30일 후
  PERFORM cal_date_in_interval USING sy-datum  7 0 0 '-' CHANGING cv_dudat_s.
  PERFORM cal_date_in_interval USING sy-datum  30 0 0 '+' CHANGING cv_dudat_e.

  " 입고시점 날짜 설정
  cv_grdoc = sy-datum.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SCREEN_ELEMENT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_screen_element .

  PERFORM set_exclude_btn.
  PERFORM set_layouts.
  PERFORM set_field_catalogs.
  PERFORM set_sorts.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUTS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layouts .

  gs_layo = lcl_layout_builder=>create(
    iv_title      = '입고 대기 구매오더 리스트'
    iv_info_fname = 'COLOR'
    iv_zebra      = abap_true
    iv_excp_fname = 'LIGHT'
    iv_excp_led   = abap_true
    iv_ctab_fname = 'IT_COL' ).


  gs_layo2 = lcl_layout_builder=>create(
      iv_title     = '입고 가능 구매오더 아이템'
      iv_no_rowins = abap_true
      iv_ctab_fname = 'IT_COL' ).

  gs_layo2-stylefname = 'STYLE'.



  gs_layo3 = lcl_layout_builder=>create(
      iv_title     = '입고 확정 구매오더 아이템'
      iv_no_rowins = abap_true
      iv_ctab_fname = 'IT_COL' ).


  gs_layo5 = lcl_layout_builder=>create(
     iv_title     = '입고 완료 리스트'
     iv_info_fname = 'COLOR'
*       iv_excp_fname = 'LIGHT'
     iv_ctab_fname = 'IT_COL'
     iv_no_rowins = abap_true ).
*  gs_layo-cwidth_opt =

  gs_layo6 = lcl_layout_builder=>create(
     iv_title     = '입고 아이템 리스트'
     iv_info_fname = 'COLOR'
     iv_zebra = abap_true
     iv_ctab_fname = 'IT_COL'
     iv_no_rowins = abap_true ).

  gs_layo7 = lcl_layout_builder=>create(
       iv_title     = '편집 가능 입고아이템 리스트'
       iv_info_fname = 'COLOR'
       iv_zebra = abap_true
       iv_no_rowins = abap_true ).

  gs_layo8 = lcl_layout_builder=>create(
       iv_title     = '구매오더 아이템 리스트'
       iv_info_fname = 'COLOR'
       iv_zebra = abap_true
       iv_no_rowins = abap_true ).

  gs_layo9 = lcl_layout_builder=>create(
     iv_title     = '벤더-원자재 가격 상세 조회'
     iv_info_fname = 'COLOR'
     iv_zebra = abap_true
     iv_no_rowins = abap_true ).

  gs_layo10 = lcl_layout_builder=>create(
   iv_title     = '납기일만료리스트'
   iv_info_fname = 'COLOR'
   iv_zebra = abap_true
   iv_no_rowins = abap_true
   iv_ctab_fname = 'IT_COL' ).

  gs_layo11 = lcl_layout_builder=>create(
   iv_title     = '납기일만료아이템'
   iv_info_fname = 'COLOR'
   iv_zebra = abap_true
   iv_no_rowins = abap_true
   iv_ctab_fname = 'IT_COL'
*   iv_lights_fname = 'LIGHT'
   iv_excp_fname = 'LIGHT'
*   iv_excp_led   = abap_true
    ).


  gs_layo12 = lcl_layout_builder=>create(
   iv_title     = '입고 아이템 상세 리스트'
    iv_info_fname = 'COLOR'
     iv_zebra = abap_true
     iv_ctab_fname = 'IT_COL'
     iv_no_rowins = abap_true ).

  gs_layo13 = lcl_layout_builder=>create(
   iv_title     = '납기일 만료 리스트'
    iv_info_fname = 'COLOR'
     iv_zebra = abap_true
     iv_ctab_fname = 'IT_COL'
     iv_no_rowins = abap_true ).



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0107   text
*      -->P_0108   text
*      -->P_ABAP_TRUE  text
*      -->P_ABAP_FALSE  text
*      -->P_0111   text
*      -->P_ABAP_FALSE  text
*      -->P_0113   text
*      -->P_ABAP_FALSE  text
*      <--P_GS_LAYO  text
*----------------------------------------------------------------------*
FORM set_layout  USING    pv_title      TYPE lvc_title
                          pv_info_fname TYPE lvc_fname
                          pv_zebra      TYPE abap_bool
                          pv_no_rowins  TYPE abap_bool
                          pv_excp_fname TYPE lvc_fname
                          pv_excp_led   TYPE abap_bool
                          pv_ctab_fname TYPE lvc_fname
                          pv_edit       TYPE abap_bool
                        CHANGING
                          cs_layo       TYPE lvc_s_layo.


  CLEAR cs_layo.

  " 기본 설정
  cs_layo-cwidth_opt = 'X'.
  cs_layo-sel_mode   = 'A'.
  cs_layo-col_opt    = 'X'.
  cs_layo-grid_title = pv_title.

  " 선택적 설정
  cs_layo-zebra     = COND #( WHEN pv_zebra = abap_true THEN 'X' ).
  cs_layo-no_rowins = COND #( WHEN pv_no_rowins = abap_true THEN 'X' ).
  cs_layo-edit      = COND #( WHEN pv_edit = abap_true THEN 'X' ).
  cs_layo-excp_led  = COND #( WHEN pv_excp_led = abap_true THEN 'X' ).

  IF pv_info_fname IS NOT INITIAL.
    cs_layo-info_fname = pv_info_fname.
  ENDIF.

  IF pv_ctab_fname IS NOT INITIAL.
    cs_layo-ctab_fname = pv_ctab_fname.
  ENDIF.

  IF pv_excp_fname IS NOT INITIAL.
    cs_layo-excp_fname = pv_excp_fname.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_CATALOGS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_field_catalogs .

  PERFORM set_fcat.
  PERFORM set_fcat02.
  PERFORM set_fcat03.
  PERFORM set_fcat05.
  PERFORM set_fcat07.
  PERFORM set_fcat08.
  PERFORM set_fcat10.
  PERFORM set_fcat11.
  PERFORM set_fcat12.
  PERFORM set_fcat13.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_PRIORITY_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GT_FCAT  text
*----------------------------------------------------------------------*
FORM set_priority_fcat  CHANGING ct_fcat TYPE lvc_t_fcat.

  DATA : ls_fcat_dudat TYPE lvc_s_fcat,
         ls_fcat_ven   TYPE lvc_s_fcat,
         lv_pos        TYPE i VALUE 1,
         lv_has_dudat  TYPE abap_bool,
         lv_has_ven    TYPE abap_bool.

  DATA : ls_cond TYPE zsssmm0210.

  MOVE-CORRESPONDING zsssmm0210 TO ls_cond.

  IF ls_cond-dudat_s IS NOT INITIAL AND ls_cond-venid IS INITIAL.
    lv_has_dudat = abap_true.

  ELSEIF ls_cond-dudat_s IS INITIAL AND ls_cond-venid IS NOT INITIAL.
    lv_has_ven = abap_true.
  ELSE.
    lv_has_dudat = abap_true.
  ENDIF.

  " 필드 카탈로그에서 대상 컬럼 찾기
  READ TABLE ct_fcat INTO ls_fcat_dudat WITH KEY fieldname = 'DUDAT'.
  READ TABLE ct_fcat INTO ls_fcat_ven   WITH KEY fieldname = 'VNAME'.

  " 우선순위 결정
  IF lv_has_dudat = abap_true AND lv_has_ven = abap_false.
    ls_fcat_dudat-col_pos = 1.
    ls_fcat_ven-col_pos   = 2.

  ELSEIF lv_has_dudat = abap_false AND lv_has_ven = abap_true.
    ls_fcat_ven-col_pos   = 1.
    ls_fcat_dudat-col_pos = 2.

  ELSE.
    ls_fcat_dudat-col_pos = 1.
    ls_fcat_ven-col_pos   = 2.
  ENDIF.

  " 변경사항 반영
  MODIFY ct_fcat FROM ls_fcat_dudat TRANSPORTING col_pos WHERE fieldname = 'DUDAT'.
  MODIFY ct_fcat FROM ls_fcat_ven   TRANSPORTING col_pos WHERE fieldname = 'VNAME'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_datas .


  " 입고대기리스트 - 입고가능 구매오더 리스트보여주기
  PERFORM get_po_datas USING zsssmm0210.

  " 입고완료리스트 - 입고 리스트 보여주기
  PERFORM get_gr_datas USING zsssmm0210.

  " 납기일만료리스트
  PERFORM get_exp_datas USING zsssmm0210.

  PERFORM get_vend_datas.




ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_DATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_po_datas USING VALUE(p_cond) TYPE zsssmm0210.


  IF p_cond-ponum IS NOT INITIAL.
    PERFORM get_datas_by_ponum USING p_cond.
  ELSEIF  gr_ponum IS NOT INITIAL.
    PERFORM get_datas_by_grponum.
  ELSE.
    PERFORM set_range_dudat USING p_cond-dudat_s p_cond-dudat_e CHANGING  gr_dudat gv_subrc.
    IF gv_subrc <> 0. CLEAR gt_podata. RETURN. ENDIF.
    PERFORM calulate_data USING p_cond.
    PERFORM modify_po_datas TABLES gt_podata.
    SORT gt_podata BY dudat ASCENDING.
  ENDIF.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_RANGE_DUDAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND_DUDAT_S  text
*      -->P_P_COND_DUDAT_E  text
*      <--P_GR_DUDAT  text
*----------------------------------------------------------------------*
FORM set_range_dudat  USING    VALUE(pv_start) TYPE sy-datum
                               VALUE(pv_end) TYPE sy-datum
                      CHANGING cv_range LIKE gr_grdat
                               cv_subrc TYPE sy-subrc.

  CLEAR : cv_range,
          cv_subrc.

  IF pv_start IS NOT INITIAL AND pv_end IS NOT INITIAL.
    cv_range = VALUE #( ( sign = 'I' option = 'BT' low = pv_start high = pv_end ) ).
  ELSEIF pv_start IS NOT INITIAL.
    cv_range = VALUE #( ( sign = 'I' option = 'EQ' low = pv_start  ) ).
  ELSEIF pv_start IS INITIAL AND pv_end IS NOT INITIAL.
    MESSAGE i999(zmcss) WITH '납기일 시작날짜를 지정해주세요!'.
    cv_subrc = 4.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CALULATE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM calulate_data USING VALUE(p_cond) TYPE zsssmm0210.

  DATA : lt_po_sum LIKE TABLE OF gs_itamt,
         lt_gr_sum LIKE TABLE OF gs_itamt.


  CLEAR gt_podata.

  PERFORM get_po_sum CHANGING lt_po_sum.
  PERFORM get_gr_sum CHANGING lt_gr_sum.

  " 성능최적화를 위한 연산
*  PERFORM cal_po_sum USING p_cond CHANGING lt_po_sum.
*  PERFORM cal_gr_sum USING lt_po_sum CHANGING lt_gr_sum.
  PERFORM create_po_list USING  lt_po_sum lt_gr_sum CHANGING gt_podata.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CAL_PO_SUM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LT_PO_SUM  text
*----------------------------------------------------------------------*
*FORM cal_po_sum   USING VALUE(p_cond) TYPE zsssmm0210
*                  CHANGING ct_psum LIKE gt_itamt.
*
*  DATA : lt_po_raw TYPE STANDARD TABLE OF ztsspoi,
*         ls_po_raw LIKE LINE OF lt_po_raw,
*         ls_po_sum LIKE gs_itamt,
*         lv_where  TYPE string,
*         lv_venid  TYPE ztssvend-venid.
*
*  PERFORM set_where_cond USING p_cond CHANGING lv_venid lv_where.
*
*  SELECT i~ponum i~itnum i~amount
*    INTO CORRESPONDING FIELDS OF TABLE lt_po_raw
*    FROM ztsspoi AS i
*    INNER JOIN ztsspoh AS h
*    ON i~ponum = h~ponum
*    WHERE (lv_where)
*    AND dudat IN gr_dudat.
*
*  IF sy-subrc <> 0. RETURN. ENDIF.
*
*  LOOP AT lt_po_raw INTO ls_po_raw.
*    ls_po_sum-ponum  = ls_po_raw-ponum.
*    ls_po_sum-itnum  = ls_po_raw-itnum.
*    ls_po_sum-amount = ls_po_raw-amount.
*    COLLECT ls_po_sum INTO ct_psum.
*  ENDLOOP.
*
*ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_WHERE_COND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND  text
*      <--P_LV_WHERE  text
*----------------------------------------------------------------------*
FORM set_where_cond  USING VALUE(p_cond) TYPE zsssmm0210
                     CHANGING cv_venid TYPE ztssvend-venid
                              cv_where TYPE string.

  DATA : lv_venid TYPE ztssvend-venid.

  CLEAR : cv_where,
          lv_venid.

  IF p_cond-venid IS NOT INITIAL.
    lv_venid = p_cond-venid.
    CLEAR p_cond-vname.
    cv_where = 'VENID eq LV_VENID'.
  ELSEIF p_cond-vname IS NOT INITIAL.
    PERFORM get_vendor_id USING p_cond-vname CHANGING lv_venid.
    cv_where = 'VENID eq LV_VENID'.
  ENDIF.
  cv_venid = lv_venid.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CAL_GR_SUM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND  text
*      -->P_LT_PO_SUM  text
*      <--P_LT_GR_SUM  text
*----------------------------------------------------------------------*
*FORM cal_gr_sum  USING pt_psum LIKE gt_itamt
*                 CHANGING ct_gsum LIKE gt_itamt.
*
*  DATA : lt_gr_raw TYPE STANDARD TABLE OF ztssgri,
*         ls_gr_raw LIKE LINE OF lt_gr_raw,
*         ls_gr_sum LIKE gs_itamt.
*
*  IF pt_psum IS NOT INITIAL.
*    SELECT ponum itnum amount
*      INTO CORRESPONDING FIELDS OF TABLE lt_gr_raw
*      FROM ztssgri
*      FOR ALL ENTRIES IN pt_psum
*      WHERE ponum = pt_psum-ponum
*      AND itnum = pt_psum-itnum.
*    IF sy-subrc = 0.
*      LOOP AT lt_gr_raw INTO ls_gr_raw.
*        ls_gr_sum-ponum  = ls_gr_raw-ponum.
*        ls_gr_sum-itnum  = ls_gr_raw-itnum.
*        ls_gr_sum-amount = ls_gr_raw-amount.
*        COLLECT ls_gr_sum INTO ct_gsum.
*      ENDLOOP.
*    ENDIF.
*  ENDIF.
*
*
*ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_PO_LIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_PO_SUM  text
*      -->P_LT_GR_SUM  text
*      <--P_GT_PODATA  text
*----------------------------------------------------------------------*
FORM create_po_list  USING    pt_po_sum LIKE gt_itamt
                              pt_gr_sum LIKE gt_itamt
                     CHANGING ct_podata LIKE gt_podata.

  DATA: ls_po_sum LIKE gs_itamt,
        ls_gr_sum LIKE gs_itamt,
        ls_po     LIKE LINE OF gt_podata,
        lv_where  TYPE string,
        lv_venid  TYPE ztssvend-venid.

  CLEAR : lv_where, lv_venid.

  PERFORM set_where_cond USING zsssmm0210 CHANGING lv_venid lv_where.
  IF lv_where IS NOT INITIAL. gv_flag = 1. ELSE. gv_flag = 0. ENDIF.

  LOOP AT pt_po_sum INTO ls_po_sum.

    " PO 헤더정보
    CLEAR ls_po.

    SELECT SINGLE ponum podat venid dudat stext rgtor
      INTO CORRESPONDING FIELDS OF ls_po
      FROM ztsspoh
      WHERE ponum = ls_po_sum-ponum
      AND dudat IN gr_dudat
      AND (lv_where).

    CHECK sy-subrc = 0.

    READ TABLE pt_gr_sum INTO ls_gr_sum WITH KEY ponum = ls_po_sum-ponum
                                                 itnum = ls_po_sum-itnum.
*
*    IF sy-subrc <> 0.
*      IF ls_po-light <> '2'.
*      ls_po-light = '3'.
*      ENDIF.
*    ELSEIF ls_gr_sum-amount = ls_po_sum-amount.
*      ls_po-light = '2'.
*    ELSEIF ls_gr_sum-amount >= ls_po_sum-amount.
*      ls_po-light = '1'.
*    ENDIF.



    IF sy-subrc <> 0.
      " 입고대기
      READ TABLE ct_podata TRANSPORTING NO FIELDS
        WITH KEY ponum = ls_po_sum-ponum.
      IF sy-subrc <> 0.
        APPEND ls_po TO ct_podata.
      ENDIF.
    ELSEIF ls_gr_sum-amount < ls_po_sum-amount.
      " 부분입고
*      ls_po-light = '2'.

      " 데이터를 찾기만하는 로직 - 데이터를 찾기만함!** 여쭤볼것  (기존에는 필드를 찾아서 모두 스트럭쳐에 담아뒀음)
      READ TABLE ct_podata TRANSPORTING NO FIELDS
        WITH KEY ponum = ls_po_sum-ponum.
      IF sy-subrc <> 0.
        APPEND ls_po TO ct_podata.
      ENDIF.
    ENDIF.
  ENDLOOP.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_HEADERS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_PT_PO_SUM  text
*      <--P_LT_PO_HEADER  text
*----------------------------------------------------------------------*
*FORM get_po_headers  USING    pt_po_sum        LIKE gt_itamt
*                     CHANGING ct_po_header LIKE gt_po_header.
*
*  DATA: lt_unique_po LIKE pt_po_sum.
*
*  lt_unique_po = pt_po_sum.
*  SORT lt_unique_po BY ponum.
*  DELETE ADJACENT DUPLICATES FROM lt_unique_po COMPARING ponum.
*
*  SELECT ponum podat venid dudat stext rgtor
*    INTO CORRESPONDING FIELDS OF TABLE ct_po_header
*    FROM ztsspoh
*    FOR ALL ENTRIES IN lt_unique_po
*    WHERE ponum = lt_unique_po-ponum
*      AND dudat IN gr_dudat.
*
*
*ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_ITEMS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_PT_PO_SUM  text
*      -->P_PT_GR_SUM  text
*      -->P_LT_PO_HEADER  text
*      <--P_CT_PODATA  text
*----------------------------------------------------------------------*
*FORM get_po_items  USING    pt_po_sum    LIKE gt_itamt
*                            pt_gr_sum    LIKE gt_itamt
*                            pt_po_header LIKE gt_po_header
*                  CHANGING  ct_podata    LIKE gt_podata.
*
*  DATA : ls_po_sum LIKE gs_itamt.
*
*  LOOP AT pt_po_sum INTO ls_po_sum.
*    PERFORM get_read_po_items USING  ls_po_sum
*                                     pt_gr_sum
*                                     pt_po_header
*                            CHANGING ct_podata.
*  ENDLOOP.
*
*ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_READ_PO_ITEMS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_PO_SUM  text
*      -->P_PT_GR_SUM  text
*      -->P_PT_PO_HEADER  text
*      <--P_CT_PODATA  text
*----------------------------------------------------------------------*
*FORM get_read_po_items  USING ps_po_sum    LIKE gs_itamt
*                              pt_gr_sum    LIKE gt_itamt
*                              pt_po_header LIKE gt_po_header
*                     CHANGING ct_podata    LIKE gt_podata.
*
*  DATA: ls_po_header TYPE ztsspoh,
*        ls_gr_sum    LIKE gs_itamt,
*        ls_po_sum    LIKE gs_itamt,
*        ls_podata    LIKE LINE OF gt_podata.
*
*  " 1. 헤더정보 찾기
*  READ TABLE pt_po_header INTO ls_po_header WITH KEY ponum = ps_po_sum-ponum.
*  IF sy-subrc <> 0. RETURN. ENDIF.
*
*  " 2. 헤더 정보 복사
*  MOVE-CORRESPONDING ls_po_header TO ls_podata.
*
*  " 3. GR 조회
*  READ TABLE pt_gr_sum INTO ls_gr_sum WITH KEY ponum = ps_po_sum-ponum
*                                               itnum = ps_po_sum-itnum.
*
*  " 4. 입고대기 / 부분입고 처리해주기
*  IF sy-subrc <> 0.
*    ls_podata-light = '1'.  " 입고대기
*    READ TABLE ct_podata TRANSPORTING NO FIELDS
*        WITH KEY ponum = ps_po_sum-ponum.
*    IF sy-subrc <> 0.
*      APPEND ls_podata TO ct_podata.
*    ENDIF.
*  ELSEIF ls_gr_sum-amount < ps_po_sum-amount.
*    ls_podata-light = '2'.  " 부분입고
*    READ TABLE ct_podata TRANSPORTING NO FIELDS WITH KEY ponum = ps_po_sum-ponum.
*    IF sy-subrc <> 0.
*      APPEND ls_podata TO ct_podata.
*    ENDIF.
*  ELSE.
*    RETURN.
*  ENDIF.
*
*  " 5. 중복 체크 & 추가2
*
*
*
*ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_PO_DATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_PODATA  text
*----------------------------------------------------------------------*
FORM modify_po_datas  TABLES t_data STRUCTURE gs_podata.

  LOOP AT t_data.
    PERFORM set_po_status CHANGING t_data.
    PERFORM set_display_dudat_status USING t_data-dudat CHANGING t_data-light t_data.
    PERFORM get_vendor_name USING t_data-venid CHANGING t_data-vname.
    PERFORM get_emp_name USING t_data-rgtor CHANGING t_data-ename.

    MODIFY t_data.
    CLEAR t_data.
  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DISPLAY_DUDAT_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DATA_DUDAT  text
*      <--P_T_DATA_LIGHT  text
*      <--P_T_DATA  text
*----------------------------------------------------------------------*
FORM set_display_dudat_status  USING VALUE(pv_dudat) TYPE ztsspoh-dudat
                               CHANGING cv_light
                                          cs_data LIKE gs_podata.
  " 당일이라면 빨간색, 10일 이내라면 511색

  DATA : lv_dudat     TYPE ztsspoh-dudat,
         lv_dudat_ten TYPE sy-datum.
  DATA ls_col TYPE lvc_s_scol.

  lv_dudat = sy-datum.
  lv_dudat_ten = sy-datum + 10.

  IF pv_dudat < lv_dudat.
*    cv_light = '1'.
    ls_col-fname = 'DUDAT'.
    ls_col-color-col = '6'.
    ls_col-color-int = '1'.
    ls_col-color-inv = '0'.
    APPEND ls_col TO cs_data-it_col.
    CLEAR ls_col.
  ELSEIF pv_dudat < lv_dudat_ten.
*    cv_light = '2'.
    ls_col-fname = 'DUDAT'.
    ls_col-color-col = '5'.
    ls_col-color-int = '1'.
    ls_col-color-inv = '1'.
    APPEND ls_col TO cs_data-it_col.
    CLEAR ls_col.
  ELSE.
*    cv_light = '3'.
  ENDIF.





ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_GR_DATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0210  text
*----------------------------------------------------------------------*
FORM get_gr_datas  USING VALUE(p_cond) TYPE zsssmm0210.


  PERFORM set_range_grdat USING p_cond-grdat_s p_cond-grdat_e CHANGING gr_grdat gv_subrc.
  IF gv_subrc <> 0. CLEAR gt_grdata. RETURN. ENDIF.

  PERFORM get_grdatas USING p_cond.

  PERFORM modify_grdatas TABLES gt_grdata.

  PERFORM search_vendor_cond USING p_cond.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_RANGE_GRDAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND_GRDAT_S  text
*      -->P_P_COND_GRDAT_E  text
*      <--P_GR_GRDAT  text
*----------------------------------------------------------------------*
FORM set_range_grdat   USING    VALUE(pv_start) TYPE sy-datum
                                VALUE(pv_end) TYPE sy-datum
                       CHANGING cv_range LIKE gr_grdat
                                cv_subrc TYPE sy-subrc.


  CLEAR : cv_range,
          cv_subrc.

  IF pv_start IS NOT INITIAL AND pv_end IS NOT INITIAL.
    cv_range = VALUE #( ( sign = 'I' option = 'BT' low = pv_start high = pv_end ) ).
  ELSEIF pv_start IS NOT INITIAL.
    cv_range = VALUE #( ( sign = 'I' option = 'EQ' low = pv_start  ) ).
  ELSEIF pv_start IS INITIAL AND pv_end IS NOT INITIAL.
    MESSAGE i999(zmcss) WITH '입고 시작일을 지정해주세요!'.
    cv_subrc = 4.
    RETURN.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_GRDATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND  text
*----------------------------------------------------------------------*
FORM get_grdatas  USING VALUE(p_cond) TYPE zsssmm0210.

  SELECT grnum rstat grdat jenum fyear stext rgdat rgtor
   INTO CORRESPONDING FIELDS OF TABLE gt_grdata
   FROM ztssgrh
    WHERE grdat IN gr_grdat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_GRDATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_GRDATA  text
*----------------------------------------------------------------------*
FORM modify_grdatas  TABLES t_data STRUCTURE gs_grdata.

  LOOP AT t_data.
    PERFORM set_curr_status USING t_data-rstat CHANGING t_data t_data-rstat_t.
    PERFORM get_vendor_info USING t_data-grnum CHANGING t_data-venid.
    PERFORM get_vendor_name USING t_data-venid CHANGING t_data-vname.
    PERFORM get_emp_name USING t_data-rgtor CHANGING  t_data-ename.

    MODIFY t_data.
    CLEAR t_data.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_CURR_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DATA_RSTAT  text
*      <--P_T_DATA  text
*      <--P_T_DATA_RSTAT_T  text
*----------------------------------------------------------------------*
FORM set_curr_status  USING pv_status TYPE ztssgrh-rstat
                     CHANGING cs_data LIKE gs_grdata
                              cv_status TYPE zsssmm0211-rstat_t.

  DATA : lv_check.

  PERFORM check_iv_status USING cs_data-grnum CHANGING cs_data lv_check.

  IF lv_check = '1'.
    cv_status = '송장검증완료'.
    cs_data-color = 'C501'.
    cs_data-ltext = icon_print.
  ELSEIF pv_status = 'A'.
    cv_status = '입고완료'.
    cs_data-ltext = icon_display_text.
  ELSEIF pv_status IS INITIAL.
    cv_status = '입고중'.
    cs_data-color = 'C601'.
    cs_data-ltext = icon_display_text.
  ELSE.
    cv_status = '알 수 없음'.
    cs_data-color = 'C201'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VENDOR_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DATA_GRNUM  text
*      <--P_T_DATA_VENID  text
*----------------------------------------------------------------------*
FORM get_vendor_info  USING p_grnum TYPE ztssgrh-grnum
                      CHANGING c_venid TYPE ztssvend-venid.

  DATA : lv_ponum TYPE ztssgri-ponum.

  SELECT SINGLE ponum
  INTO lv_ponum
    FROM ztssgri
    WHERE grnum = p_grnum.


  SELECT SINGLE venid
    INTO c_venid
    FROM ztsspoh
    WHERE ponum = lv_ponum.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_IV_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_CS_DATA_GRNUM  text
*      <--P_CS_DATA  text
*      <--P_LV_CHECK  text
*----------------------------------------------------------------------*
FORM check_iv_status  USING    VALUE(p_grnum) TYPE ztssgrh-grnum
                      CHANGING cs_data LIKE gs_grdata
                               cv_check TYPE c.

  DATA : lv_ivnum TYPE ztssmivh-ivnum.

  CLEAR cv_check.

  SELECT SINGLE ivnum
      INTO lv_ivnum
      FROM ztssmivi
      WHERE grnum = p_grnum.

  IF sy-subrc = 0.
    cv_check = '1'.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  GET_PO_SUM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LT_PO_SUM  text
*----------------------------------------------------------------------*
FORM get_po_sum  CHANGING ct_po_sum LIKE gt_itamt.

  DATA: lt_po_raw TYPE STANDARD TABLE OF ztsspoi,
        ls_po_raw LIKE LINE OF lt_po_raw,
        ls_po_sum LIKE gs_itamt.

  SELECT ponum itnum amount
    INTO CORRESPONDING FIELDS OF TABLE lt_po_raw
    FROM ztsspoi.

  IF sy-subrc <> 0. RETURN. ENDIF.

  LOOP AT lt_po_raw INTO ls_po_raw.
    ls_po_sum-ponum  = ls_po_raw-ponum.
    ls_po_sum-itnum  = ls_po_raw-itnum.
    ls_po_sum-amount = ls_po_raw-amount.
    COLLECT ls_po_sum INTO ct_po_sum.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_GRDATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_grdatas .

  DATA : lv_total_price TYPE ztsspoi-poprc.

  CLEAR gv_subrc.

  " 입고 헤더 -> item -> 전표 -> 창고 순 insert

  PERFORM insert_gr_header CHANGING gv_subrc.
  IF gv_subrc <> 0.
    ROLLBACK WORK.
    MESSAGE e121(zmcss). " INSERT 실패 : 입고헤더
    RETURN.
  ENDIF.

  " 1번 rollback work . 10군데 있음
  " 2번 rollback work. 가 한군데 있음


  PERFORM insert_gr_item CHANGING lv_total_price gv_subrc.
  IF gv_subrc <> 0.
    ROLLBACK WORK.
    MESSAGE e122(zmcss). " INSERT 실패 : 입고 아이템
    RETURN.
  ENDIF.

  " FI 전표 생성 후 INSERT
  PERFORM insert_fi_journal USING lv_total_price CHANGING gv_subrc.
  IF gv_subrc <> 0.
    ROLLBACK WORK.
    MESSAGE e123(zmcss). " INSERT 실패 : 전표 생성
    RETURN.
  ENDIF.

  " 창고 아이템 INSERT
  PERFORM insert_warehouse_entries CHANGING gv_subrc.
  IF gv_subrc <> 0.
    ROLLBACK WORK.
    MESSAGE e124(zmcss). " INSERT 실패 : 창고 이동
    RETURN.
  ENDIF.

  COMMIT WORK.
  MESSAGE s104(zmcss). " '입고가 완료되었습니다!'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_GR_HEADER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM insert_gr_header CHANGING cv_subrc TYPE sy-subrc.

  DATA : ls_grdata LIKE ztssgrh.

  PERFORM get_number_range USING 'ZNRSSMM02' '01' 'G' CHANGING gv_gr_num.
  PERFORM get_number_range USING 'ZNRSSFI01' '01' 'J' CHANGING gv_fi_num.

  ls_grdata-grnum = gv_gr_num.
  ls_grdata-jenum = gv_fi_num.
  ls_grdata-rstat = 'A'.
  ls_grdata-fyear = sy-datum+0(4).
  ls_grdata-grdat = zsssmm0214-grdat.
  ls_grdata-stext = gv_text.
  ls_grdata-rgdat = sy-datum.
  ls_grdata-rgtor = gv_rgtor.

  INSERT ztssgrh FROM ls_grdata.
  cv_subrc = sy-subrc.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_FI_JOURNAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LV_TOTAL_PRICE  text
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM insert_fi_journal  USING  VALUE(pv_val) TYPE ztsspoi-poprc
                        CHANGING cv_subrc TYPE sy-subrc.

  DATA : ls_fidata TYPE ztssjeh.
  ls_fidata-jenum = gv_fi_num.
  ls_fidata-fyear = sy-datum+0(4).
  ls_fidata-jtype = 'WE'.
  ls_fidata-stext = |{ gv_gr_num }의 자동전표|.
  ls_fidata-curky = 'KRW'.
  ls_fidata-rgdat = sy-datum.

  INSERT ztssjeh FROM ls_fidata.
  IF sy-subrc <> 0. cv_subrc = sy-subrc. RETURN. ENDIF.


  PERFORM insert_fi_journal_item USING '001' pv_val '' '310000' CHANGING cv_subrc.
  IF sy-subrc <> 0. cv_subrc = sy-subrc. RETURN. ENDIF.
  PERFORM insert_fi_journal_item USING '002' '' pv_val '910000' CHANGING cv_subrc.
  IF sy-subrc <> 0. cv_subrc = sy-subrc. RETURN. ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_WAREHOUSE_ENTRIES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM insert_warehouse_entries CHANGING cv_subrc TYPE sy-subrc.

  DATA: ls_ware TYPE ztssware.

  FIELD-SYMBOLS: <fs_confirm> LIKE LINE OF gt_confirm.

  LOOP AT gt_confirm ASSIGNING <fs_confirm>.

    PERFORM get_number_range USING 'ZNRSSMD06' '01' 'W' CHANGING gv_wh_num.

    ls_ware-warid  = gv_wh_num.
    ls_ware-stoid  = <fs_confirm>-stoid.
    ls_ware-matnr  = <fs_confirm>-pomnr.
    ls_ware-amount = <fs_confirm>-orqty.
    ls_ware-wtype  = 'I'.
    ls_ware-wdate  = sy-datum.
    ls_ware-grnum  = gv_gr_num.
    ls_ware-rgdat  = sy-datum.
    ls_ware-rgtor  = 'E0000012'.
    ls_ware-meins  = <fs_confirm>-meins.

    INSERT ztssware FROM ls_ware.
    IF sy-subrc <> 0. cv_subrc = sy-subrc. EXIT. ENDIF.

  ENDLOOP.

  UNASSIGN <fs_confirm>.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_FI_JOURNAL_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_2359   text
*      -->P_PV_VAL  text
*      -->P_2361   text
*      -->P_2362   text
*      <--P_CV_SUBRC  text
*----------------------------------------------------------------------*
FORM insert_fi_journal_item  USING    VALUE(p_seq) TYPE ztssjei-jeseq
                                      VALUE(p_debit) TYPE ztssjei-debit
                                      VALUE(p_credit) TYPE ztssjei-credit
                                      VALUE(p_acc) TYPE ztssjei-glacc
                             CHANGING cv_subrc TYPE sy-subrc.


  DATA: ls_fiitem TYPE ztssjei.

  ls_fiitem-jenum  = gv_fi_num.
  ls_fiitem-fyear  = sy-datum+0(4).
  ls_fiitem-jeseq  = p_seq.
  ls_fiitem-debit  = p_debit.
  ls_fiitem-credit = p_credit.
  ls_fiitem-curky  = 'KRW'.
  ls_fiitem-glacc  = p_acc.

  INSERT ztssjei FROM ls_fiitem.
  cv_subrc = sy-subrc.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_GR_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LV_TOTAL_PRICE  text
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM insert_gr_item CHANGING  cv_total_price TYPE ztsspoi-poprc
                              cv_subrc TYPE sy-subrc.


  " 입고 아이템 insert & 총 금액 계산하기
  PERFORM insert_gr_items CHANGING cv_total_price cv_subrc.

  IF cv_subrc <> 0.
    ROLLBACK WORK.
    MESSAGE e122(zmcss). " 입고실패! : 입고아이템
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_GR_ITEMS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_CV_TOTAL_PRICE  text
*      <--P_CV_SUBRC  text
*----------------------------------------------------------------------*
FORM insert_gr_items  CHANGING cv_total_price TYPE ztsspoi-poprc
                               cv_subrc TYPE sy-subrc.

  DATA: ls_gritem     TYPE ztssgri,
        lv_item_price TYPE ztssprcat-vnprc.

  CLEAR : cv_total_price.

  LOOP AT gt_confirm ASSIGNING FIELD-SYMBOL(<fs_confirm>).

    ls_gritem-grnum = gv_gr_num.
    ls_gritem-grseq  = <fs_confirm>-grseq.
    ls_gritem-ponum  = <fs_confirm>-ponum.
    ls_gritem-itnum  = <fs_confirm>-itnum.
    ls_gritem-amount = <fs_confirm>-orqty.
    ls_gritem-meins  = <fs_confirm>-meins.
    ls_gritem-stoid  = <fs_confirm>-stoid.

    PERFORM get_venmat USING <fs_confirm>-venid <fs_confirm>-pomnr CHANGING lv_item_price.
    cv_total_price = cv_total_price + ( lv_item_price * <fs_confirm>-orqty ).

    INSERT ztssgri FROM ls_gritem.
    IF sy-subrc <> 0. cv_subrc = sy-subrc. EXIT. ENDIF.

  ENDLOOP.

  UNASSIGN <fs_confirm>.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FS_FIELD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_2120   text
*      -->P_2121   text
*      -->P_2122   text
*      <--P_GS_FCAT5  text
*      <--P_GT_FCAT5  text
*----------------------------------------------------------------------*
FORM set_fs_field USING     VALUE(p_input)
                            VALUE(p_val)
                            VALUE(p_flag)
                   CHANGING cs_fcat TYPE lvc_s_fcat
                            ct_fcat TYPE lvc_t_fcat.
  DATA : lv_field(40).
  FIELD-SYMBOLS <fs>.

  lv_field = 'CS_FCAT-' && p_input.
  ASSIGN (lv_field) TO <fs>.

  IF <fs> IS ASSIGNED.
    IF p_val = 'N'.
      READ TABLE ct_fcat INTO cs_fcat WITH KEY fieldname = p_input.
      <fs> = sy-tabix + 1.
    ELSE.
      <fs> = p_val.
    ENDIF.
    UNASSIGN <fs>.
  ENDIF.

  IF p_flag = 'X'.
    APPEND cs_fcat TO ct_fcat.
    CLEAR cs_fcat.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EDIT_GRDOC
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM edit_grdoc .


  DATA : lv_answer.

  PERFORM popup_to_confirm
  USING    '입고최종수정'                " 제목
           '정말 입고를 수정하시겠습니까?'       " 질문
           'Yes'                         " 버튼1 텍스트
           'ICON_CHECKED'                " 버튼1 아이콘
           'No'                          " 버튼2 텍스트
           'ICON_INCOMPLETE'             " 버튼2 아이콘
           '누르면 입고수정이 완료됩니다'     " 버튼1 퀵인포
           '누르면 입고수정이 취소됩니다'     " 버튼2 퀵인포
  CHANGING lv_answer.

  CASE lv_answer.
    WHEN '1'.
      PERFORM update_gr_docs CHANGING gv_subrc.
      LEAVE TO SCREEN 0.
    WHEN '2'.
    WHEN '3'.
  ENDCASE.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  UPDATE_GR_DOCS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM update_gr_docs CHANGING cv_subrc TYPE sy-subrc .


  DATA: ls_grh   TYPE ztssgrh,
        ls_money TYPE ty_money,
        lv_valid TYPE abap_bool.

  " item valid 한지 체크 -> 모두 삭제됐다면, 입고되지 않음
  PERFORM validate_edit_items CHANGING lv_valid.
  IF lv_valid = abap_false.
    RETURN.
  ENDIF.

  " 정보 찾아서 입고 헤더->아이템-> 전표 -> 창고 순으로 update
  PERFORM get_gr_header USING zsssmm0211-grnum
                        CHANGING ls_grh.
  PERFORM get_journal_amounts USING ls_grh-jenum
                                    ls_grh-fyear
                              CHANGING ls_money.

  PERFORM create_reversal_journal USING ls_grh ls_money cv_subrc.


  PERFORM update_gr_header CHANGING cv_subrc.
  IF cv_subrc <> 0. ROLLBACK WORK. RETURN. ENDIF.

  PERFORM update_gr_items USING ls_grh-grnum CHANGING cv_subrc.
  IF cv_subrc <> 0. ROLLBACK WORK. RETURN. ENDIF.
  PERFORM process_warehouse_movements CHANGING cv_subrc.
  IF cv_subrc <> 0. ROLLBACK WORK. RETURN. ENDIF.

  COMMIT WORK.
  MESSAGE s106(zmcss). " '입고 수정이 완료되었습니다!'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  VALIDATE_EDIT_ITEMS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LV_VALID  text
*----------------------------------------------------------------------*
FORM validate_edit_items  CHANGING cv_valid TYPE abap_bool.

  DATA : ls_edit_item LIKE LINE OF gt_edit_item.

  cv_valid = abap_false.

  LOOP AT gt_edit_item INTO ls_edit_item WHERE del IS INITIAL.
    cv_valid = abap_true.
    EXIT.
  ENDLOOP.

  IF cv_valid = abap_false.
    MESSAGE e105(zmcss). " '입고 수정 시 아이템은 1개 이상 필수입니다!'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_GR_HEADER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0211_GRNUM  text
*      <--P_LS_GRH  text
*----------------------------------------------------------------------*
FORM get_gr_header  USING VALUE(pv_grnum) TYPE ztssgrh-grnum
                   CHANGING cs_grh TYPE ztssgrh.

  SELECT SINGLE grnum rstat grdat jenum fyear stext rgdat rgtor
    INTO CORRESPONDING FIELDS OF cs_grh
    FROM ztssgrh
    WHERE grnum = pv_grnum.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_JOURNAL_AMOUNTS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_GRH_JENUM  text
*      -->P_LS_GRH_FYEAR  text
*      <--P_LS_MONEY  text
*----------------------------------------------------------------------*
FORM get_journal_amounts  USING VALUE(pv_jenum) TYPE ztssjei-jenum
                               VALUE(pv_fyear) TYPE ztssjei-fyear
                         CHANGING cs_money TYPE ty_money.

  SELECT SINGLE debit
    INTO cs_money-debit
    FROM ztssjei
    WHERE jenum = pv_jenum
      AND fyear = pv_fyear
      AND jeseq = '001'.

  SELECT SINGLE credit
    INTO cs_money-credit
    FROM ztssjei
    WHERE jenum = pv_jenum
      AND fyear = pv_fyear
      AND jeseq = '002'.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_REVERSAL_JOURNAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_GRH  text
*      -->P_LS_MONEY  text
*      -->P_CV_SUBRC  text
*----------------------------------------------------------------------*
FORM create_reversal_journal  USING VALUE(ps_grh) TYPE ztssgrh
                                    VALUE(ps_money) TYPE ty_money
                              CHANGING cv_subrc TYPE sy-subrc.
  " 추후 서브루틴 예정
  DATA: ls_jeh   TYPE ztssjeh,
        ls_jei   TYPE ztssjei,
        lv_price TYPE ztssjei-debit,
        lv_stext TYPE ztssjeh-stext.

  cv_subrc = 0.


  PERFORM get_number_range USING 'ZNRSSFI01' '01' 'J' CHANGING gv_fi_num.


  " 전표 헤더 생성
  ls_jeh-jenum = gv_fi_num.
  ls_jeh-fyear = sy-datum+0(4).
  ls_jeh-jtype = 'WE'.
  ls_jeh-stext = |{ ps_grh-grnum }의 자동전표의 역분개|.
  ls_jeh-curky = 'KRW'.
  ls_jeh-rgdat = sy-datum.
  INSERT ztssjeh FROM ls_jeh.
  cv_subrc = sy-subrc.
  IF cv_subrc <> 0. ROLLBACK WORK. RETURN. ENDIF.


  " 전표 아이템 생성 (차변)
  lv_price = ps_money-debit * -1.

  PERFORM insert_journal_item USING gv_fi_num
                                    sy-datum+0(4)
                                    '001'
                                    lv_price
                                    space
                                    '310000'
                                    cv_subrc.
  CLEAR lv_price.

  " 대변 금액
  lv_price = ps_money-credit * -1.
  IF cv_subrc <> 0. ROLLBACK WORK. RETURN. ENDIF.



  " 전표 아이템 생성 (대변)
  PERFORM insert_journal_item USING gv_fi_num
                                    sy-datum+0(4)
                                    '002'
                                    space
                                    lv_price
                                    '910000'
                                    cv_subrc.
  IF cv_subrc <> 0. ROLLBACK WORK. RETURN. ENDIF.

  CONCATENATE ps_grh-grnum '의 자동전표의 역분개' INTO lv_stext.


  " 원본 전표 역분개 표시
  UPDATE ztssjeh
    SET rev   = 'X'
        rrson = lv_stext
        rjnum = gv_fi_num
    WHERE jenum = ps_grh-jenum
      AND fyear = ps_grh-fyear.
  cv_subrc = sy-subrc.
  IF cv_subrc <> 0. ROLLBACK WORK. RETURN. ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_JOURNAL_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GV_FI_NUM  text
*      -->P_SY_DATUM+0(4)  text
*      -->P_3708   text
*      -->P_LV_PRICE  text
*      -->P_SPACE  text
*      -->P_3711   text
*      -->P_CV_SUBRC  text
*----------------------------------------------------------------------*
FORM insert_journal_item  USING VALUE(pv_jenum) TYPE ztssjei-jenum
                               VALUE(pv_fyear) TYPE ztssjei-fyear
                               VALUE(pv_jeseq) TYPE ztssjei-jeseq
                               VALUE(pv_debit) TYPE ztssjei-debit
                               VALUE(pv_credit) TYPE ztssjei-credit
                               VALUE(pv_glacc) TYPE ztssjei-glacc
                          CHANGING cv_subrc TYPE sy-subrc.

  DATA: ls_jei TYPE ztssjei.

  ls_jei-jenum  = pv_jenum.
  ls_jei-fyear  = pv_fyear.
  ls_jei-jeseq  = pv_jeseq.
  ls_jei-debit  = pv_debit.
  ls_jei-credit = pv_credit.
  ls_jei-curky  = 'KRW'.
  ls_jei-glacc  = pv_glacc.

  INSERT ztssjei FROM ls_jei.
  cv_subrc = sy-subrc.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  UPDATE_GR_HEADER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_CV_SUBRC  text
*----------------------------------------------------------------------*
FORM update_gr_header CHANGING cv_subrc TYPE sy-subrc.

  UPDATE ztssgrh
   SET grdat = zsssmm0211-grdat
       stext = zsssmm0211-stext
       rgdat = zsssmm0211-rgdat
       rgtor = zsssmm0211-rgtor
   WHERE grnum = zsssmm0211-grnum.

  cv_subrc = sy-subrc.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  UPDATE_GR_ITEMS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_GRH_GRNUM  text
*      <--P_CV_SUBRC  text
*----------------------------------------------------------------------*
FORM update_gr_items USING VALUE(pv_grnum) TYPE ztssgrh-grnum
                     CHANGING cv_subrc TYPE sy-subrc.

  DATA : lv_canc_qty TYPE ztssgri-amount,
         lv_tabix    TYPE sy-tabix.



  LOOP AT gt_edit_item INTO gs_edit_item.
    lv_tabix = sy-tabix.
    IF gs_edit_item-del = 'X'.
      gs_edit_item-amount  = 0 .
*      lv_canc_qty = gs_edit_item-amount * -1.
      MODIFY gt_edit_item FROM gs_edit_item INDEX lv_tabix.
      UPDATE ztssgri
      SET stoid  = gs_edit_item-stoid
          amount = 0
          del    = gs_edit_item-del
      WHERE grnum = pv_grnum
        AND grseq = gs_edit_item-grseq.
      cv_subrc = sy-subrc.
      IF cv_subrc <> 0.
        ROLLBACK WORK.
        RETURN.
      ENDIF.
    ELSE.
      UPDATE ztssgri
        SET stoid  = gs_edit_item-stoid
            amount = gs_edit_item-amount
            del    = gs_edit_item-del
        WHERE grnum = pv_grnum
          AND grseq = gs_edit_item-grseq.
      cv_subrc = sy-subrc.
      IF cv_subrc <> 0.
        ROLLBACK WORK.
        RETURN.
      ENDIF.
    ENDIF.
  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  PROCESS_WAREHOUSE_MOVEMENTS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_CV_SUBRC  text
*----------------------------------------------------------------------*
FORM process_warehouse_movements CHANGING cv_subrc TYPE sy-subrc.

  DATA: ls_ware TYPE ztssware,
        lv_diff TYPE i.

  LOOP AT gt_edit_item INTO gs_edit_item.

    " 기존 수량과 비교
    READ TABLE gt_temp INTO gs_temp
      WITH KEY ponum = gs_edit_item-ponum
               itnum = gs_edit_item-itnum.

    CHECK sy-subrc = 0.

    lv_diff = gs_temp-amount - gs_edit_item-amount.
    CHECK lv_diff <> 0.
*    IF lv_diff = 0.
*      return.
*    ENDIF.

    " 창고 입출고 레코드
    PERFORM get_number_range USING 'ZNRSSMD06' '01' 'W' CHANGING gv_wh_num.
    PERFORM create_warehouse_record USING gs_edit_item
                                          lv_diff
                                          gv_wh_num
                                    CHANGING cv_subrc.
    IF cv_subrc <> 0.
      ROLLBACK WORK.
      RETURN.
    ENDIF.

  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_WAREHOUSE_RECORD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GS_EDIT_ITEM  text
*      -->P_LV_DIFF  text
*      -->P_GV_WH_NUM  text
*      <--P_CV_SUBRC  text
*----------------------------------------------------------------------*
FORM create_warehouse_record  USING VALUE(ps_item) LIKE gs_edit_item
                                   VALUE(pv_diff) TYPE i
                                   VALUE(pv_warid) TYPE ztssware-warid
                              CHANGING cv_subrc TYPE sy-subrc.

  DATA: ls_ware TYPE ztssware.

  ls_ware-warid  = pv_warid.
  ls_ware-stoid  = ps_item-stoid.
  ls_ware-matnr  = ps_item-pomnr.
*  ls_ware-amount = ps_item-amount.
  ls_ware-amount = abs( pv_diff ).
*  ls_ware-amount = ps_item-amount.

  " if - elseif - else 문과 비슷함 (삼항연산자)
  ls_ware-wtype  = COND #( WHEN pv_diff > 0 THEN 'O'  " 출고
                           WHEN pv_diff < 0 THEN 'I'  " 입고
                           ELSE space ).
  ls_ware-wdate  = sy-datum.
  ls_ware-grnum  = gv_gr_num.
  ls_ware-rgdat  = sy-datum.
  ls_ware-rgtor  = 'E0000012'.
  ls_ware-meins  = ps_item-meins.

  CHECK ls_ware-wtype IS NOT INITIAL.
  INSERT ztssware FROM ls_ware.

  cv_subrc = sy-subrc.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VENDOR_DETAILS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_vendor_details USING VALUE(p_venid) TYPE ztssvend-venid
                        CHANGING p_vinfo TYPE zsssmm0218.

  DATA : lt_vinfo LIKE TABLE OF zsssmm0218,
         ls_vinfo LIKE LINE OF lt_vinfo.
*  DATA : ls_vinfo like l
  DATA : lv_ednme TYPE ztssdom-ednme,
         lv_ename TYPE zsssmm0218-ename.
  DATA : lv_depid TYPE ztssdept-depid.

  DATA : BEGIN OF ls_dept,
           dptel TYPE ztssdept-dptel,
           dname TYPE ztssdept_t-dname,
         END OF ls_dept.

  SELECT SINGLE venid vname begda endda postc addre eid edom vpnme penid
    FROM ztssvend
    INTO CORRESPONDING FIELDS OF ls_vinfo
    WHERE venid = p_venid.

  SELECT SINGLE ednme
    INTO lv_ednme
    FROM ztssdom
    WHERE edom = ls_vinfo-edom.

  PERFORM get_emp_name USING ls_vinfo-penid CHANGING lv_ename.

  SELECT SINGLE depid
    INTO lv_depid
    FROM ztssemp
    WHERE pernr = ls_vinfo-penid.

  SELECT SINGLE dname dptel
    INTO CORRESPONDING FIELDS OF ls_dept
    FROM zvssdept
    WHERE depid = lv_depid.


  MOVE-CORRESPONDING ls_vinfo TO zsssmm0218.

  zsssmm0218-ednme = lv_ednme.
  zsssmm0218-ename = lv_ename.
  zsssmm0218-dname = ls_dept-dname.
  zsssmm0218-depid = lv_depid.
  zsssmm0218-dptel = ls_dept-dptel.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DOMAIN_VALUES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_domain_values
                        USING    VALUE(pv_domname)
                        CHANGING pt_dd07v LIKE gt_dd07v.
  DATA : lt_dd07v TYPE TABLE OF dd07v.

  CALL FUNCTION 'GET_DOMAIN_VALUES'
    EXPORTING
      domname         = pv_domname
    TABLES
      values_tab      = lt_dd07v
    EXCEPTIONS
      no_values_found = 1
      OTHERS          = 2.
  IF sy-subrc <> 0.
  ENDIF.

  APPEND LINES OF lt_dd07v TO pt_dd07v.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VENDOR_PRICE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_DATA_VENID  text
*      <--P_ZSSSMM0219  text
*----------------------------------------------------------------------*
FORM get_vendor_price  USING    VALUE(p_venid) TYPE ztssvend-venid
                       CHANGING pt_price LIKE gt_vnprc.

  SELECT rawnr vnprc curky del
    INTO CORRESPONDING FIELDS OF TABLE pt_price
    FROM ztssprcat
    WHERE venid = p_venid.

  LOOP AT pt_price ASSIGNING FIELD-SYMBOL(<fs_price>).
    PERFORM get_mat_name USING  <fs_price>-rawnr CHANGING <fs_price>-matnm.
  ENDLOOP.

  UNASSIGN <fs_price>.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_EMP_DETAILS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_DATA_RGTOR  text
*      <--P_ZSSSMM0220  text
*----------------------------------------------------------------------*
FORM get_emp_details  USING    p_pernr TYPE ztssemp-pernr
                      CHANGING ps_emp TYPE zsssmm0220.

  DATA : ls_emp TYPE ztssemp.

  DATA : lv_ednme TYPE ztssdom-ednme,
         lv_ename TYPE zsssmm0218-ename.
  DATA : lv_depid TYPE ztssdept-depid,
         lv_text  TYPE ddtext,
         lv_etext TYPE ddtext.

  DATA : BEGIN OF ls_dept,
           dptel TYPE ztssdept-dptel,
           dname TYPE ztssdept_t-dname,
         END OF ls_dept.

  SELECT SINGLE pernr depid persg lname fname entdt gesch gbdat postc addre telnr eid edom estat
    INTO CORRESPONDING FIELDS OF ls_emp
    FROM ztssemp
    WHERE pernr = p_pernr.

  SELECT SINGLE ednme
    INTO lv_ednme
    FROM ztssdom
    WHERE edom = ls_emp-edom.

  PERFORM get_emp_name USING ls_emp-pernr CHANGING lv_ename.

  SELECT SINGLE depid
    INTO lv_depid
    FROM ztssemp
    WHERE pernr = ls_emp-pernr.

  SELECT SINGLE dname dptel
    INTO CORRESPONDING FIELDS OF ls_dept
    FROM zvssdept
    WHERE depid = ls_emp-depid.


  READ TABLE gt_dd07v INTO DATA(ls_dd07v)
WITH KEY domvalue_l = ls_emp-persg
         domname = 'ZDSSPERSG'.

  IF sy-subrc = 0.
    lv_text = ls_dd07v-ddtext.
  ENDIF.

  READ TABLE gt_dd07v INTO DATA(ls_dd07v2)
  WITH KEY domvalue_l = ls_emp-estat
           domname = 'ZDSSESTAT'.

  IF sy-subrc = 0.
    lv_etext = ls_dd07v2-ddtext.
  ENDIF.



  MOVE-CORRESPONDING ls_emp TO ps_emp.

  ps_emp-ednme = lv_ednme.
  ps_emp-ename = lv_ename.
  ps_emp-dname = ls_dept-dname.
  ps_emp-dptel = ls_dept-dptel.
  ps_emp-persg_t = lv_text.
  ps_emp-estat_t = lv_etext.






ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat .

  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0212' 'GT_PODATA' CHANGING gt_fcat.

  IF gv_flag = 1.  " 또는 검색 조건 체크
    lt_field_conf = VALUE #(
      ( fieldname = 'LIGHT' coltext = TEXT-t01  outputlen = 15 fix_column = 'X' col_pos = 1 )
      ( fieldname = 'VNAME' col_pos = 2 )  " 순서 변경
      ( fieldname = 'DUDAT' col_pos = 3 )  " 순서 변경
      ( fieldname = 'PODAT' col_pos = 4 )
      ( fieldname = 'ENAME' col_pos = 5 coltext = '담당자 이름' )
      ( fieldname = 'STEXT' col_pos = 6 )
      ( fieldname = 'PONUM' col_pos = 7 )
      ( fieldname = 'VENID' no_out = 'X' )
      ( fieldname = 'RGTOR' no_out = 'X' )
    ).
  ELSE.
    " 기본 순서
    lt_field_conf = VALUE #(
      ( fieldname = 'LIGHT' coltext = TEXT-t01  outputlen = 15 fix_column = 'X' col_pos = 1 )
      ( fieldname = 'DUDAT' col_pos = 2 )
      ( fieldname = 'VNAME' col_pos = 3 )
      ( fieldname = 'PODAT' col_pos = 4 )
      ( fieldname = 'ENAME' col_pos = 5 coltext = '담당자 이름' )
      ( fieldname = 'STEXT' col_pos = 6 )
      ( fieldname = 'PONUM' col_pos = 7 )
      ( fieldname = 'VENID' no_out = 'X' )
      ( fieldname = 'RGTOR' no_out = 'X' )
    ).
  ENDIF.

  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELD_CATATLOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_FIELD_CONF  text
*      <--P_GT_FCAT  text
*----------------------------------------------------------------------*
FORM build_field_catatlog  USING    pt_field_conf TYPE ty_t_field_conf
                           CHANGING ct_fcat       TYPE lvc_t_fcat.


  DATA: ls_conf TYPE ty_field_conf,
        ls_fcat TYPE lvc_s_fcat.
  FIELD-SYMBOLS: <fs_fcat> TYPE lvc_s_fcat.

  LOOP AT pt_field_conf INTO ls_conf.

    " 기존 필드 찾기
    READ TABLE ct_fcat ASSIGNING <fs_fcat> WITH KEY fieldname = ls_conf-fieldname.
    IF sy-subrc = 0.
      " 찾으면 수정하기
      MOVE-CORRESPONDING ls_conf TO <fs_fcat>.
      IF ls_conf-col_pos > 0.
        <fs_fcat>-col_pos = ls_conf-col_pos.
      ENDIF.
*      IF ls_conf-fieldname = 'TOPRC'.
*        ls_conf-do_sum = 'X'.
*      ENDIF.
    ELSE.
      " 존재하지않으면 새로 추가하기
      CLEAR ls_fcat.
*      IF ls_conf-fieldname = 'TOPRC'.
*        ls_conf-do_sum = 'X'.
*      ENDIF.
      MOVE-CORRESPONDING ls_conf TO ls_fcat.
      IF ls_conf-col_pos > 0.
        ls_fcat-col_pos = ls_conf-col_pos.
      ENDIF.
      APPEND ls_fcat TO ct_fcat.
    ENDIF.

  ENDLOOP.
  UNASSIGN <fs_fcat>.


  LOOP AT ct_fcat INTO DATA(ls_fcat2).

    IF ls_fcat2-fieldname = 'TOPRC'.

      ls_fcat2-do_sum = 'X'.

      MODIFY ct_fcat FROM ls_fcat2 TRANSPORTING do_sum.

    ENDIF.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT01
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat01 .

  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0213' 'GT_ITEM' CHANGING gt_fcat2..

  lt_field_conf = VALUE #(
  " === gt_fcat: 입고 대기 구매오더 리스트 ===
  ( fieldname = 'LIGHT' coltext = TEXT-t01  outputlen = 8 fix_column = 'X')
  ).

  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT02
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat02 .

  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0213' 'GT_ITEM' CHANGING gt_fcat2.
  APPEND VALUE #(
  fieldname = 'STYLE'
  tech      = 'X'  " 화면에 표시 안 함
) TO gt_fcat2.
  APPEND VALUE #(
  fieldname = 'IT_COL'
  tech      = 'X'
) TO gt_fcat2.


  lt_field_conf = VALUE #(
  " === gt_fcat2: 입고 가능 구매오더 리스트 ===
  ( grid_id = '02' fieldname = 'GRSEQ' coltext = '번호' lzero = 'X' intlen = 3 outputlen = 3 )
  ( grid_id = '02' fieldname = 'ITNUM' lzero = 'X' intlen = 3 outputlen = 3 )
  ( grid_id = '02' fieldname = 'POMNR' no_out = 'X' )
  ( grid_id = '02' fieldname = 'MATNM' coltext = '자재이름' outputlen = 20 )
  ( grid_id = '02' fieldname = 'VENID' no_out = 'X' )
  ( grid_id = '02' fieldname = 'DEL' no_out = 'X' )
  ( grid_id = '02' fieldname = 'AMOUNT' coltext = '구매오더 수량' )
  ( grid_id = '02' fieldname = 'GRQTY'  coltext = '입고수량' )
  ( grid_id = '02' fieldname = 'REQTY'  coltext = '주문가능수량' )
  ( grid_id = '02' fieldname = 'ORQTY'  coltext = '주문수량' edit = 'X' style = cl_gui_alv_grid=>mc_style_enabled )
*  style = 'cl_gui_alv_grid=>mc_style_enabled' )
  ( grid_id = '02' fieldname = 'STOID'  coltext = '창고'  )
  ).
  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat2.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT03
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat03 .

  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0213' 'GT_CONFIRM' CHANGING gt_fcat3.

  lt_field_conf = VALUE #(
" === gt_fcat03 입고확정 구매오더 아이템
  ( fieldname = 'GRSEQ' coltext = '번호' lzero = 'X' intlen = 3 outputlen = 3 )
  ( fieldname = 'POMNR' no_out = 'X' )
  ( fieldname = 'VENID' no_out = 'X' )
  ( fieldname = 'DEL' no_out = 'X' )
  ( fieldname = 'AMOUNT' coltext = '구매오더 수량' )
  ( fieldname = 'GRQTY'  coltext = '입고수량' intlen = 4 outputlen = 5 )
  ( fieldname = 'REQTY'  coltext = '주문가능수량' )
  ( fieldname = 'ORQTY'  coltext = '주문수량' )
  ( fieldname = 'STOID'  coltext = '창고' )
  ( fieldname = 'ITNUM' lzero = 'X' intlen = 3 outputlen = 3 )
  ).

  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat3.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT05
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat05 .

  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0211' 'GT_GRDATA' CHANGING gt_fcat5.

  lt_field_conf = VALUE #(
  " == 입고 완료 리스트

   ( fieldname = 'RSTAT' no_out = 'X' )
   ( fieldname = 'VENID' no_out = 'X' )
   ( fieldname = 'RGTOR' no_out = 'X' )
   ( fieldname = 'JENUM' no_out = 'X' )
   ( fieldname = 'FYEAR' no_out = 'X' )
   ( fieldname = 'RSTAT_T' col_pos = 1 )
   ( fieldname = 'GRDAT' col_pos = 2 )
   ( fieldname = 'VNAME' col_pos = 3 )
   ( fieldname = 'ENAME' col_pos = 4 )
   ( fieldname = 'STEXT' col_pos = 5 )
   ( fieldname = 'RGDAT' col_pos = 6 )
   ( fieldname = 'GRNUM'  col_pos = 7 hotspot = 'X' )
   ( fieldname = 'LTEXT' coltext = '문서 수정' just = 'C' outputlen = 20 col_pos = 8 )
 ).
  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat5.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT06
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat06 .

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT07
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat07 .
  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0215' 'GT_EDIT_ITEM' CHANGING gt_fcat7.

  lt_field_conf = VALUE #(
  " === gt_fcat7: 입고 확정이지만 수정가능한 리스트 ===
  ( fieldname = 'GRSEQ' coltext = '번호' lzero = 'X' intlen = 3 outputlen = 3 col_pos = 1 )
  (  fieldname = 'PONUM' hotspot = 'X' col_pos = 2 )
  ( fieldname = 'ITNUM' lzero = 'X' intlen = 3 outputlen = 3 col_pos = 3 )
  (  fieldname = 'VNAME' col_pos = 4 )
  (  fieldname = 'MATNM' col_pos = 5 )
  (  fieldname = 'AMOUNT' coltext = '입고수량' col_pos = 6 )
  (  fieldname = 'MEINS' col_pos = 7 )
  (  fieldname = 'STONM'  col_pos = 8 )
  (  fieldname = 'LTEXT'   coltext = '삭제여부' col_pos = 9 )
  (  fieldname = 'DEL'   coltext = '삭제여부' col_pos = 9 no_out = 'X' )
  (  fieldname = 'VENID' no_out = 'X'  )
  ( fieldname = 'POMNR' no_out = 'X'  )
  (  fieldname = 'GRQTY'  no_out  = 'X'  )
  (  fieldname = 'REQTY'  no_out  = 'X' )
  (  fieldname = 'STOID'  no_out = 'X' )
  (  fieldname = 'ORQTY'  no_out  = 'X' )

).
  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat7.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT08
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat08 .
  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0213' 'GT_CONFIRM' CHANGING gt_fcat8.

  lt_field_conf = VALUE #(
       " === gt_fcat8: 입고수정 시 구매오더 아이템 확인하기
  ( grid_id = '08' fieldname = 'GRSEQ' no_out = 'X'  )
  ( grid_id = '08' fieldname = 'POMNR' no_out = 'X'  )
  ( grid_id = '08' fieldname = 'VENID' no_out = 'X'  )
  ( grid_id = '08' fieldname = 'DEL'   no_out = 'X'  )
  ( grid_id = '08' fieldname = 'MATNM' )
  ( grid_id = '02' fieldname = 'ITNUM' lzero = 'X' intlen = 3 outputlen = 3 )

  ( grid_id = '08' fieldname = 'AMOUNT' coltext = 'PO수량'   )
  ( grid_id = '08' fieldname = 'GRQTY'  coltext = '입고수량'     )
  ( grid_id = '08' fieldname = 'REQTY'  no_out  = 'X'    )
  ( grid_id = '08' fieldname = 'ORQTY'  no_out = 'X' )
  ( grid_id = '08' fieldname = 'STOID'  no_out = 'X'  )
  ( grid_id = '08' fieldname = 'STONM'  no_out = 'X'  )
  ( grid_id = '08' fieldname = 'VNAME'  )


).
  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat8.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATAS_BY_PONUM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND  text
*----------------------------------------------------------------------*
FORM get_datas_by_ponum  USING    p_cond TYPE zsssmm0210.
  CLEAR gt_podata.

  SELECT SINGLE ponum podat venid dudat stext rgtor
    INTO CORRESPONDING FIELDS OF gs_podata
    FROM ztsspoh
    WHERE ponum = p_cond-ponum.

  APPEND gs_podata TO gt_podata.

  PERFORM modify_po_datas TABLES gt_podata.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEARCH_VENDOR_COND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND  text
*----------------------------------------------------------------------*
FORM search_vendor_cond  USING    p_cond TYPE zsssmm0210.

  DATA : lv_venid TYPE ztssvend-venid.

  IF p_cond-venid IS NOT INITIAL OR p_cond-vname IS NOT INITIAL .
    gv_flag2 = 1.
    IF p_cond-vname IS NOT INITIAL.
      PERFORM get_vendor_id USING p_cond-vname CHANGING lv_venid.
    ELSE.
      lv_venid = p_cond-venid.
    ENDIF.
    DELETE gt_grdata WHERE venid <> lv_venid.
  ELSE.
    gv_flag2 = 0.
  ENDIF.
  SORT gt_grdata BY grnum  DESCENDING.
*  SORT gt_grdata BY grdat DESCENDING.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  OPEN_EDIT_TO_CLOSE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM open_edit_to_close .


  FIELD-SYMBOLS: <fs_fcat> TYPE lvc_s_fcat.

*  IF gv_temp_edit IS INITIAL.

  READ TABLE gt_fcat7 ASSIGNING <fs_fcat> WITH KEY fieldname = 'AMOUNT'.

  IF sy-subrc = 0.
    IF <fs_fcat>-edit = 'X'. <fs_fcat>-edit = ''. ENDIF.
*   ELSE.
*    APPEND VALUE #( fieldname = 'AMOUNT' edit = '' ) TO gt_fcat7.
  ENDIF.

  READ TABLE gt_fcat7 ASSIGNING <fs_fcat>
    WITH KEY fieldname = 'STOID'.

  IF sy-subrc = 0.
    IF <fs_fcat>-edit = 'X'. <fs_fcat>-edit = ''. ENDIF.
*  ELSE.
*    APPEND VALUE #( fieldname = 'STOID' edit = '' ) TO gt_fcat7.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_IV_COMPLETE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0210  text
*----------------------------------------------------------------------*
FORM get_iv_complete  USING    p_cond TYPE zsssmm0210.

  PERFORM set_range_grdat USING p_cond-grdat_s p_cond-grdat_e CHANGING gr_grdat gv_subrc.
  IF gv_subrc <> 0. CLEAR gt_grdata. RETURN. ENDIF.

  PERFORM get_grdatas USING p_cond.

  PERFORM modify_iv_grdatas TABLES gt_grdata.

  PERFORM search_vendor_cond USING p_cond.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_GR_COMPLETE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0210  text
*----------------------------------------------------------------------*
FORM get_gr_complete  USING    p_cond TYPE zsssmm0210.

  PERFORM set_range_grdat USING p_cond-grdat_s p_cond-grdat_e CHANGING gr_grdat gv_subrc.
  IF gv_subrc <> 0. CLEAR gt_grdata. RETURN. ENDIF.

  PERFORM get_grdatas USING p_cond.

  PERFORM modify_gr_grdats TABLES gt_grdata.

  PERFORM search_vendor_cond USING p_cond.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_GR_GRDATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND  text
*----------------------------------------------------------------------*
FORM get_gr_grdatas  USING    p_cond TYPE zsssmm0210.

  SELECT grnum rstat grdat jenum fyear stext rgdat rgtor
 INTO CORRESPONDING FIELDS OF TABLE gt_grdata
 FROM ztssgrh
  WHERE grdat IN gr_grdat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_GR_GRDATS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_GRDATA  text
*----------------------------------------------------------------------*
FORM modify_gr_grdats  TABLES t_data STRUCTURE gs_grdata.

  DATA : lt_gr_temp LIKE TABLE OF gs_grdata.

  LOOP AT t_data.
*    PERFORM set_curr_status USING t_data-rstat CHANGING t_data t_data-rstat_t.
    PERFORM set_curr_status_gr USING t_data-rstat CHANGING lt_gr_temp t_data t_data-rstat_t.
*    PERFORM get_vendor_info USING t_data-grnum CHANGING t_data-venid.
*    PERFORM get_vendor_name USING t_data-venid CHANGING t_data-vname.
*    PERFORM get_emp_name USING t_data-rgtor CHANGING  t_data-ename.

    MODIFY t_data.
    CLEAR t_data.
  ENDLOOP.


  PERFORM modify_gr_cond TABLES lt_gr_temp CHANGING t_data[].

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_CURR_STATUS_GR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DATA_RSTAT  text
*      <--P_T_DATA  text
*      <--P_T_DATA_RSTAT_T  text
*----------------------------------------------------------------------*
FORM set_curr_status_gr  USING pv_status TYPE ztssgrh-rstat
                         CHANGING lt_grtemp LIKE gt_grdata
                                  cs_data LIKE gs_grdata
                                  cv_status TYPE zsssmm0211-rstat_t.

  DATA : lv_check.

  PERFORM check_iv_status USING cs_data-grnum CHANGING cs_data lv_check.

  IF lv_check = '1'.
    cv_status = '송장검증완료'.
    cs_data-color = 'C501'.
    cs_data-ltext = icon_print.
    APPEND cs_data TO lt_grtemp.
  ELSEIF pv_status = 'A'.
    cv_status = '입고완료'.
    cs_data-ltext = icon_display_text.
  ELSEIF pv_status IS INITIAL.
    cv_status = '입고중'.
    cs_data-color = 'C601'.
    cs_data-ltext = icon_display_text.
  ELSE.
    cv_status = '알 수 없음'.
    cs_data-color = 'C201'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_GR_COND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_GR_TEMP  text
*      <--P_T_DATA  text
*----------------------------------------------------------------------*
FORM modify_gr_cond  TABLES   t_temp STRUCTURE gs_grdata
                     CHANGING ct_grdata LIKE gt_grdata.

  CLEAR ct_grdata.

  LOOP AT t_temp.
    PERFORM get_vendor_info USING t_temp-grnum CHANGING t_temp-venid.
    PERFORM get_vendor_name USING t_temp-venid CHANGING t_temp-vname.
    PERFORM get_emp_name USING t_temp-rgtor CHANGING  t_temp-ename.

    MODIFY t_temp.
    CLEAR t_temp.
  ENDLOOP.

  ct_grdata = t_temp[].

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_IV_GRDATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_GRDATA  text
*----------------------------------------------------------------------*
FORM modify_iv_grdatas  TABLES t_data STRUCTURE gs_grdata.


  DATA : lt_iv_temp LIKE TABLE OF gs_grdata.

  LOOP AT t_data.
    PERFORM set_curr_status_iv USING t_data-rstat CHANGING lt_iv_temp t_data t_data-rstat_t.
    MODIFY t_data.
    CLEAR t_data.
  ENDLOOP.

  PERFORM modify_gr_cond TABLES lt_iv_temp CHANGING t_data[].
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_CURR_STATUS_IV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DATA_RSTAT  text
*      <--P_LT_IV_TEMP  text
*      <--P_T_DATA  text
*      <--P_T_DATA_RSTAT_T  text
*----------------------------------------------------------------------*
FORM set_curr_status_iv  USING pv_status TYPE ztssgrh-rstat
                         CHANGING lt_ivtemp LIKE gt_grdata
                                  cs_data LIKE gs_grdata
                                  cv_status TYPE zsssmm0211-rstat_t.

  DATA : lv_check.

  PERFORM check_iv_status USING cs_data-grnum CHANGING cs_data lv_check.

  IF lv_check = '1'.
    cv_status = '송장검증완료'.
    cs_data-color = 'C501'.
    cs_data-ltext = icon_print.
  ELSEIF pv_status = 'A'.
    cv_status = '입고완료'.
    cs_data-ltext = icon_display_text.
    APPEND cs_data TO lt_ivtemp.
  ELSEIF pv_status IS INITIAL.
    cv_status = '입고중'.
    cs_data-color = 'C601'.
    cs_data-ltext = icon_display_text.
  ELSE.
    cv_status = '알 수 없음'.
    cs_data-color = 'C201'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT10
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat10 .
  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0221' 'GT_EXPDATA' CHANGING gt_fcat10.

  lt_field_conf = VALUE #(
       " === gt_fcat10: 납기일 만료 리스트
  ( fieldname = 'VENID' no_out = 'X'  )
  ( fieldname = 'RGTOR' no_out = 'X'  )
  ( fieldname = 'LUDAT' coltext = '납기경과일수'  )
  ( fieldname = 'ENAME' coltext = '담당자이름'  )
  ( fieldname = 'PONUM' hotspot = 'X'  )


).
  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat10.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_EXP_DATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0210  text
*----------------------------------------------------------------------*
FORM get_exp_datas  USING    p_cond TYPE zsssmm0210.

  PERFORM set_range_expdate USING p_cond-dudat_y CHANGING gr_dudat.
  PERFORM calulat_pick_expdata USING p_cond.
  PERFORM modify_exp_datas TABLES gt_expdata.
  SORT gt_expdata BY dudat ASCENDING.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CALULAT_PICK_EXPDATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND  text
*----------------------------------------------------------------------*
FORM calulat_pick_expdata  USING   p_cond TYPE zsssmm0210.


  DATA : lt_po_sum LIKE TABLE OF gs_itamt,
         lt_gr_sum LIKE TABLE OF gs_itamt.

  CLEAR gt_expdata.

  PERFORM get_po_sum CHANGING lt_po_sum.
  PERFORM get_gr_sum CHANGING lt_gr_sum.

  PERFORM create_exp_list USING  lt_po_sum lt_gr_sum CHANGING gt_expdata.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_EXP_LIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_PO_SUM  text
*      -->P_LT_GR_SUM  text
*      <--P_GT_EXPDATA  text
*----------------------------------------------------------------------*
FORM create_exp_list  USING    pt_po_sum LIKE gt_itamt
                              pt_gr_sum LIKE gt_itamt
                     CHANGING ct_expdata LIKE gt_expdata.


  DATA: ls_po_sum LIKE gs_itamt,
        ls_gr_sum LIKE gs_itamt,
        ls_po     LIKE LINE OF gt_expdata,
        lv_where  TYPE string,
        lv_venid  TYPE ztssvend-venid.

  CLEAR : lv_where, lv_venid.

  PERFORM set_where_cond USING zsssmm0210 CHANGING lv_venid lv_where.

  LOOP AT pt_po_sum INTO ls_po_sum.

    " PO 헤더정보
    CLEAR ls_po.

    SELECT SINGLE ponum podat venid dudat stext rgtor
      INTO CORRESPONDING FIELDS OF ls_po
      FROM ztsspoh
      WHERE ponum = ls_po_sum-ponum
      AND dudat IN gr_dudat
      AND dudat <= sy-datum
      AND (lv_where).

    CHECK sy-subrc = 0.

    READ TABLE pt_gr_sum INTO ls_gr_sum WITH KEY ponum = ls_po_sum-ponum
                                                 itnum = ls_po_sum-itnum.
    IF sy-subrc <> 0.
      APPEND ls_po TO ct_expdata.
    ELSEIF ls_gr_sum-amount < ls_po_sum-amount.
      APPEND ls_po TO ct_expdata.
    ENDIF.
  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_RANGE_EXPDATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND_DUDAT_Y  text
*      <--P_GR_DUDAT  text
*----------------------------------------------------------------------*
FORM set_range_expdate USING VALUE(pv_date)
                      CHANGING cv_range LIKE gr_grdat.

  CLEAR cv_range.
  DATA : lv_start TYPE sy-datum,
         lv_end   TYPE sy-datum.

  lv_start = pv_date && '0101'.
  lv_end = pv_date && '1231'.

*  cv_range = VALUE
  IF lv_start IS NOT INITIAL AND lv_end IS NOT INITIAL.
    cv_range = VALUE #( ( sign = 'I' option = 'BT' low = lv_start high = lv_end ) ).
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_EXP_DATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_EXPDATA  text
*----------------------------------------------------------------------*
FORM modify_exp_datas  TABLES   t_data STRUCTURE gs_expdata.


  LOOP AT t_data.
    PERFORM set_expired_date USING t_data-dudat CHANGING t_data-ludat.
    PERFORM set_expired_status USING t_data-dudat CHANGING t_data.
    PERFORM get_vendor_name USING t_data-venid CHANGING t_data-vname.
    PERFORM get_emp_name USING t_data-rgtor CHANGING t_data-ename.

    MODIFY t_data.
    CLEAR t_data.
  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_EXPIRED_DATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DATA_DUDAT  text
*----------------------------------------------------------------------*
FORM set_expired_date  USING  pv_dat TYPE sy-datum
                       CHANGING cv_dat.

  cv_dat = sy-datum - pv_dat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_EXPIRED_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DATA_DUDAT  text
*      <--P_T_DATA_LIGHT  text
*      <--P_T_DATA  text
*----------------------------------------------------------------------*
FORM set_expired_status     USING VALUE(pv_dudat) TYPE ztsspoh-dudat
                            CHANGING cs_data LIKE gs_expdata.



  DATA ls_col TYPE lvc_s_scol.


  ls_col-fname = 'LUDAT'.
  ls_col-color-col = '6'.
  ls_col-color-int = '1'.
  ls_col-color-inv = '0'.
  APPEND ls_col TO cs_data-it_col.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT11
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat11 .

  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0222' 'GT_EXPITEM' CHANGING gt_fcat11.


  lt_field_conf = VALUE #(
 " === gt_fcat11: 납기만료 아이템 리스트 ===
 ( fieldname = 'LIGHT' coltext = TEXT-t01  outputlen = '30' intlen = 30 just = 'C'  )
 (  fieldname = 'RSTAT_T' coltext = '상태정보' no_out = 'X' )
 (  fieldname = 'MATNM' coltext = '자재이름' outputlen = 20 )
 (  fieldname = 'ITNUM' lzero = 'X' intlen = 3 outputlen = 3 )
 (  fieldname = 'POMNR' no_out = 'X' )
 (  fieldname = 'VENID' no_out = 'X' )
 (  fieldname = 'DEL' no_out = 'X' )
 (  fieldname = 'AMOUNT' coltext = '구매오더 수량' )
 (  fieldname = 'GRQTY'  coltext = '입고 수량' )
 (  fieldname = 'REQTY'  coltext = '미입고 수량' )
 (  fieldname = 'STOID'  no_out = 'X' )
  ).

*  DELETE gt_fcat11 WHERE fieldname = 'LIGHT'.
  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat11.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEARCH_BY_PO_NUUM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM search_by_po_nuum .
  CALL FUNCTION 'COMPLEX_SELECTIONS_DIALOG'
    EXPORTING
      title     = 'PO번호 선택'
      text      = '조회할 구매오더번호를 입력하세요'
      signed    = 'X'
    TABLES
      range     = gr_ponum
    EXCEPTIONS
      cancelled = 2
      OTHERS    = 1.

  IF sy-subrc = 0.
    MESSAGE |{ lines( gr_ponum ) }개 PO번호 선택됨| TYPE 'S'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATAS_BY_GRPONUM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_datas_by_grponum .

  SELECT ponum podat venid dudat stext rgtor
    INTO CORRESPONDING FIELDS OF TABLE gt_podata
    FROM ztsspoh
    WHERE ponum IN gr_ponum.

  PERFORM modify_po_datas TABLES gt_podata.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT12
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat12 .

  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0216' 'GT_GRITEM' CHANGING gt_fcat12.


  lt_field_conf = VALUE #(
 " === gt_fcat12: 입고아이템 리스트 ===
* ( fieldname = 'LIGHT' coltext = TEXT-t01  outputlen = '30' intlen = 30 just = 'C'  )
* (  fieldname = 'RSTAT_T' coltext = '상태정보' no_out = 'X' )
 (  fieldname = 'GRNUM' no_out = 'X' )
 ( fieldname = 'GRSEQ' lzero = 'X' intlen = 3 outputlen = 3 col_pos = 1 )
  (  fieldname = 'MATNM' coltext = '자재이름' outputlen = 20 col_pos = 2 )
  ( fieldname = 'VNAME' col_pos = 3 )
  ( fieldname = 'STONM' col_pos = 4 )
  (  fieldname = 'AMOUNT' coltext = '입고수량' col_pos = 5 )
  (  fieldname = 'MEINS'  col_pos = 6 )
  (  fieldname = 'TOPRC'  col_pos = 7 )
  (  fieldname = 'CURKY'  col_pos = 8 )
  (  fieldname = 'PONUM' col_pos = 9 )
  (  fieldname = 'DEL' coltext = '삭제여부' col_pos = 10 )

  (  fieldname = 'POMNR' no_out = 'X' )
  (  fieldname = 'VENID' no_out = 'X' )
  (  fieldname = 'STOID'  no_out = 'X' )
   ).


*  DELETE gt_fcat11 WHERE fieldname = 'LIGHT'.
  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat12.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT13
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat13 .

  DATA : lt_field_conf TYPE TABLE OF ty_field_conf,
         ls_conf       TYPE ty_field_conf,
         ls_fcat       TYPE lvc_s_fcat.

  PERFORM create_fcat USING 'ZSSSMM0223' 'GT_VDUDAT' CHANGING gt_fcat13.

  lt_field_conf = VALUE #(
 " === gt_fcat13: 벤더별 납기 현황 ===
  (  fieldname = 'VNAME' col_pos = 1 )
  (  fieldname = 'MATNM' coltext = '자재이름' outputlen = 20 col_pos = 2 )
  ( fieldname = 'STONM' col_pos = 3 )
  (  fieldname = 'AMOUNT' coltext = '주문수량' col_pos = 4 )
  (  fieldname = 'REQTY' coltext = '미입고수량' col_pos = 5 )
  (  fieldname = 'MEINS'  col_pos = 6 )
  (  fieldname = 'STONM'  col_pos = 7 )
  (  fieldname = 'PNAME'  col_pos = 8 )
  (  fieldname = 'DUDAT'  coltext = '납기일' col_pos = 9 )
  (  fieldname = 'LUDAT'  coltext = '납기경과일' col_pos = 10 )
  (  fieldname = 'DUOKD'  coltext = '납기준수율' col_pos = 11 )
  (  fieldname = 'DUDED'  coltext = '납기지연율' col_pos = 11 )

  (  fieldname = 'POMNR' no_out = 'X' )
  (  fieldname = 'PONUM' no_out = 'X' )
  (  fieldname = 'ITNUM' no_out = 'X' )
  (  fieldname = 'PLANT' no_out = 'X' )
*  (  fieldname = 'VENID' no_out = 'X' )
  (  fieldname = 'STOID'  no_out = 'X' )
   ).

  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat13.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VEND_DATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_vend_datas .


  SELECT venid vname
    INTO CORRESPONDING FIELDS OF TABLE gt_vendor
    FROM ztssvend.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORTS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_sorts .

  DATA : ls_sort TYPE lvc_s_sort.


  CLEAR ls_sort.
  ls_sort-fieldname = 'DUDAT'.
  ls_sort-spos      = 1.
  ls_sort-up        = 'X'.
  APPEND ls_sort TO gt_sort_polist.



  CLEAR ls_sort.
  ls_sort-fieldname = 'GRDAT'.
  ls_sort-spos      = 1.
  ls_sort-up        = ''.
  ls_sort-down        = 'X'.
  ls_sort-subtot    = 'X'.
  APPEND ls_sort TO gt_sort_grlist.

*  CLEAR ls_sort.
*  ls_sort-fieldname = 'VNAME'.
*  ls_sort-spos      = 2.
*  ls_sort-up        = 'X'.
*  ls_sort-subtot    = 'X'.
*  APPEND ls_sort TO gt_sort_grlist.

*  CLEAR ls_sort.
*  ls_sort-fieldname = 'RSTAT_T'.
*  ls_sort-spos      = 3.
*  ls_sort-up        = 'X'.
*  ls_sort-subtot    = 'X'.
*  APPEND ls_sort TO gt_sort_grlist.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_JENUM_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_jenum_detail .
*  DATA : lv_jenum type

  DATA : lv_jenum TYPE zsssmm0211-jenum.
  lv_jenum = zsssmm0211-jenum.

  SET PARAMETER ID 'ZMMJENUM' FIELD lv_jenum.
  CALL TRANSACTION 'ZSSFI01'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VEN_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0211_VENID  text
*      <--P_ZSSSMM0218  text
*----------------------------------------------------------------------*
FORM get_ven_info  USING    p_venid TYPE ztssvend-venid
                   CHANGING c_info TYPE zsssmm0218.


  PERFORM get_vendor_details USING p_venid CHANGING zsssmm0218.


  CALL SCREEN 0120 STARTING AT 10 10.
  CLEAR zsssmm0218.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_EMP_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0211_RGTOR  text
*      <--P_ZSSSMM0220  text
*----------------------------------------------------------------------*
FORM get_emp_info  USING p_pernr TYPE ztssemp-pernr
                   CHANGING c_info TYPE zsssmm0220.


  PERFORM get_emp_details USING p_pernr CHANGING c_info.

  CALL SCREEN 0140 STARTING AT 10 10.
  CLEAR zsssmm0220.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_JOURNAL_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0211_JENUM  text
*----------------------------------------------------------------------*
FORM get_journal_info  USING  p_jenum TYPE zsssmm0211-jenum.

  DATA : lv_jenum TYPE zsssmm0211-jenum.

  lv_jenum = p_jenum.

  SET PARAMETER ID 'ZMMJENUM' FIELD lv_jenum.
  CALL TRANSACTION 'ZSSFI01'.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
