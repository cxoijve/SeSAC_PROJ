*&---------------------------------------------------------------------*
*&  Include           MZSSMM02F00
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  CAL_LAST_DAY_MONTH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_SY_DATUM  text
*      <--P_CV_GRDAT_E  text
*----------------------------------------------------------------------*
FORM cal_last_day_month  USING    VALUE(p_day) TYPE sy-datum
                         CHANGING p_last.

  DATA lv_last_day TYPE sy-datum.

  CALL FUNCTION 'RP_LAST_DAY_OF_MONTHS'
    EXPORTING
      day_in            = p_day
    IMPORTING
      last_day_of_month = lv_last_day
    EXCEPTIONS
      day_in_no_date    = 1
      OTHERS            = 2.
  IF sy-subrc <> 0.
    MESSAGE a100(zmcss) WITH sy-uname. " 시스템 오류 : &에게 문의하세요!
  ENDIF.

  p_last = lv_last_day.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CAL_DATE_IN_INTERVAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_SY_DATUM  text
*      -->P_7      text
*      -->P_0      text
*      -->P_0      text
*      -->P_0076   text
*      <--P_CV_DUDAT  text
*----------------------------------------------------------------------*
FORM cal_date_in_interval  USING    VALUE(p_datum)
                                    VALUE(p_days)
                                    VALUE(p_years)
                                    VALUE(p_months)
                                    VALUE(p_signum)
                           CHANGING p_begda TYPE p0001-begda.

  DATA: lv_date   TYPE  p0001-begda,
        lv_days   TYPE  t5a4a-dlydy,
        lv_months TYPE  t5a4a-dlymo,
        lv_signum TYPE  t5a4a-split,
        lv_years  TYPE  t5a4a-dlyyr.


  IF p_signum IS INITIAL.
    lv_signum = '+'.
  ELSE.
    lv_signum = p_signum.
  ENDIF.

  lv_years = p_years.
  lv_months = p_months.
  lv_days = p_days.
  lv_date = p_datum.

  CALL FUNCTION 'RP_CALC_DATE_IN_INTERVAL'
    EXPORTING
      date      = lv_date
      days      = lv_days
      months    = lv_months
      signum    = lv_signum
      years     = lv_years
    IMPORTING
      calc_date = p_begda.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0246   text
*      <--P_GT_FCAT  text
*----------------------------------------------------------------------*
FORM create_fcat  USING    VALUE(pv_str) TYPE dd02l-tabname
                           VALUE(pv_itab) TYPE dd02l-tabname
                  CHANGING ct_fcat TYPE lvc_t_fcat.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name   = pv_str
      i_internal_tabname = pv_itab
    CHANGING
      ct_fieldcat        = ct_fcat
    EXCEPTIONS
      OTHERS             = 1.

  IF sy-subrc <> 0.
    MESSAGE a100(zmcss) WITH sy-uname. "시스템 오류 : &에게 문의하세요!
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  GET_EMP_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DATA_RGTOR  text
*      <--P_T_DATA_ENAME  text
*----------------------------------------------------------------------*
FORM get_emp_name  USING    VALUE(p_empid) TYPE zsssmm0211-rgtor
                   CHANGING p_ename TYPE zsssmm0211-ename.

  CALL FUNCTION 'Z_FMSS_GET_EMP_NAME'
    EXPORTING
      iv_empid = p_empid
    IMPORTING
      ev_ename = p_ename.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VENDOR_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_<FS_ITEM>_VENID  text
*      <--P_<FS_ITEM>_VNAME  text
*----------------------------------------------------------------------*
FORM get_vendor_name  USING VALUE(p_venid) TYPE zsssmm0210-venid
                      CHANGING p_vname TYPE zsssmm0210-vname.

  CALL FUNCTION 'Z_FMSS_GET_VEN_NAME'
    EXPORTING
      iv_venid = p_venid
    IMPORTING
      ev_vname = p_vname.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VENDOR_ID
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_COND_VNAME  text
*      <--P_LV_VENID  text
*----------------------------------------------------------------------*
FORM get_vendor_id  USING  VALUE(p_vname) TYPE zsssmm0210-vname
                    CHANGING p_venid TYPE zsssmm0210-venid.


  CALL FUNCTION 'Z_FMSS_GET_VEN_ID'
    EXPORTING
      iv_vname = p_vname
    IMPORTING
      ev_venid = p_venid.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_MAT_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_<FS_ITEM>_POMNR  text
*      <--P_<FS_ITEM>_MATNM  text
*----------------------------------------------------------------------*
FORM get_mat_name  USING    VALUE(p_matid) TYPE ztssmat-matnr
                   CHANGING p_matnm TYPE ztssmat_t-matnm.

  CALL FUNCTION 'Z_FMSS_GET_MAT_NAME'
    EXPORTING
      iv_matid = p_matid
    IMPORTING
      ev_mname = p_matnm.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_STORAGE_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_<FS_ITEM>_STOID  text
*      <--P_<FS_ITEM>_STONM  text
*----------------------------------------------------------------------*
FORM get_storage_name  USING    VALUE(p_stoid) TYPE ztssstrg-stoid
                       CHANGING p_stonm TYPE ztssstrg-stonm.


  CALL FUNCTION 'Z_FMSS_GET_STORAGE_NAME'
    EXPORTING
      iv_stoid = p_stoid
    IMPORTING
      ev_sname = p_stonm.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_NUMBER_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_2259   text
*      -->P_2260   text
*      -->P_2261   text
*      <--P_GV_GR_NUM  text
*----------------------------------------------------------------------*
FORM get_number_range       USING    iv_object   TYPE inri-object
                                     iv_nrnr     TYPE inri-nrrangenr
                                     iv_prefix   TYPE string
                            CHANGING cv_number   TYPE ztsspoh-ponum.

  DATA : lv_num  TYPE n LENGTH 6,
         lv_year TYPE n LENGTH 4.

  lv_year = sy-datum+0(4).

  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      nr_range_nr             = iv_nrnr
      object                  = iv_object
      toyear                  = lv_year
    IMPORTING
      number                  = lv_num
    EXCEPTIONS
      interval_not_found      = 1
      number_range_not_intern = 2
      object_not_found        = 3
      quantity_is_0           = 4
      quantity_is_not_1       = 5
      interval_overflow       = 6
      buffer_overflow         = 7
      OTHERS                  = 8.

  IF sy-subrc <> 0.
    " 넘버링이 실패하였습니다
    MESSAGE a120(zmcss).
  ENDIF.

  cv_number = iv_prefix && lv_year && lv_num.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VENMAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_<FS_CONFIRM>_VENID  text
*      -->P_<FS_CONFIRM>_POMNR  text
*      <--P_LV_ITEM_PRICE  text
*----------------------------------------------------------------------*
FORM get_venmat  USING    VALUE(pv_venid) TYPE ztssvend-venid
                          VALUE(pv_matnr) TYPE ztssmat-matnr
                 CHANGING cv_price TYPE ztssprcat-vnprc.


  SELECT SINGLE vnprc
    INTO cv_price
    FROM ztssprcat
    WHERE venid = pv_venid
    AND rawnr = pv_matnr.

  IF sy-subrc <> 0.
    MESSAGE s999(zmcss) WITH  |존재하지 않는 { pv_venid } 와 { pv_matnr }의 조합입니다!|.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  POPUP_TO_CONFIRM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0944   text
*      -->P_0945   text
*      -->P_0946   text
*      -->P_0947   text
*      -->P_0948   text
*      -->P_0949   text
*      -->P_0950   text
*      -->P_0951   text
*      <--P_LV_ANSWER  text
*----------------------------------------------------------------------*
FORM popup_to_confirm   USING     iv_title
                                  iv_question
                                  iv_btn1_text
                                  iv_btn1_icon
                                  iv_btn2_text
                                  iv_btn2_icon
                                  iv_info1
                                  iv_info2
                        CHANGING cv_answer    TYPE c.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar              = iv_title
      text_question         = iv_question
      text_button_1         = iv_btn1_text
      icon_button_1         = iv_btn1_icon
      text_button_2         = iv_btn2_text
      icon_button_2         = iv_btn2_icon
      default_button        = '1'
      display_cancel_button = 'X'
      iv_quickinfo_button_1 = iv_info1
      iv_quickinfo_button_2 = iv_info2
    IMPORTING
      answer                = cv_answer
    EXCEPTIONS
      text_not_found        = 1
      OTHERS                = 2.

  IF sy-subrc <> 0.
    cv_answer = 'A'.  " Cancel 처리
  ENDIF.


ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
