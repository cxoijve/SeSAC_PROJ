*&---------------------------------------------------------------------*
*&  Include           MZSSMM01F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0017   text
*      <--P_GO_CON  text
*      <--P_GO_ALV  text
*----------------------------------------------------------------------*
FORM create_alv USING VALUE(p_con) TYPE c
                 CHANGING  co_con TYPE REF TO cl_gui_custom_container
                           co_alv TYPE REF TO cl_gui_alv_grid.

  IF co_con IS NOT INITIAL. RETURN. ENDIF.

  CREATE OBJECT co_con
    EXPORTING
*     parent                      =
      container_name              = p_con
*     style                       =
*     lifetime                    = lifetime_default
*     repid                       =
*     dynnr                       =
*     no_autodef_progid_dynnr     =
    EXCEPTIONS
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5
      OTHERS                      = 6.
  IF sy-subrc <> 0.
    " &에 대한 시스템 오류입니다 담당자 &에게 문의하세요
    MESSAGE a004(zmcb06) WITH 'sesac-b-06'.
    RETURN.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT co_alv
    EXPORTING
*     i_shellstyle      = 0
*     i_lifetime        =
      i_parent          = co_con
*     i_appl_events     = space
*     i_parentdbg       =
*     i_applogparent    =
*     i_graphicsparent  =
*     i_name            =
*     i_fcat_complete   = SPACE
    EXCEPTIONS
      error_cntl_create = 1
      error_cntl_init   = 2
      error_cntl_link   = 3
      error_dp_create   = 4
      OTHERS            = 5.


  IF sy-subrc <> 0.
    " &에 대한 시스템 오류입니다 담당자 &에게 문의하세요
*    MESSAGE a004(zmcb06) WITH 'sesac-b-06'.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0024   text
*      <--P_GT_DATA_0100  text
*      <--P_GS_LAYO  text
*      <--P_GT_FCAT  text
*      <--P_GT_SORT  text
*      <--P_GO_ALV  text
*----------------------------------------------------------------------*
FORM display_alv USING VALUE(p_name) TYPE c
                  CHANGING ct_data
                           cs_layo TYPE lvc_s_layo
                           ct_fcat TYPE lvc_t_fcat
                           ct_sort TYPE lvc_t_sort
                           co_alv TYPE REF TO cl_gui_alv_grid.

  CALL METHOD co_alv->set_table_for_first_display
    EXPORTING
      i_structure_name              = p_name
*     is_variant                    =
*     i_save                        =
*     i_default                     = 'X'
      is_layout                     = cs_layo
    CHANGING
      it_outtab                     = ct_data
      it_fieldcatalog               = ct_fcat
      it_sort                       = ct_sort
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
    " ### #####. &# #####
*    MESSAGE a004(zmcb06) WITH 'sesac-b-06'.
    RETURN.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEARCH_PO_ALL_INFOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM search_po_all_infos .

  PERFORM set_ranges_ponum USING zsssmm0101-ponum_s zsssmm0101-ponum_e CHANGING gr_ponum.
  PERFORM set_ranges_podat USING zsssmm0101-podat_s zsssmm0101-podat_e CHANGING gr_podat.
  PERFORM get_po_data CHANGING zsssmm0101.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DEFAULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_default .

  PERFORM set_first_display CHANGING zsssmm0101.

  PERFORM set_layout_screen CHANGING gs_layo gt_fcat gt_sort.
  PERFORM set_ranges_ponum USING zsssmm0101-ponum_s zsssmm0101-ponum_e CHANGING gr_ponum.
  PERFORM set_ranges_podat USING zsssmm0101-podat_s zsssmm0101-podat_e CHANGING gr_podat.
  PERFORM get_po_data CHANGING zsssmm0101.
  PERFORM set_200_display CHANGING zsssmm0103.
*  PERFORM set_200_item_display CHANGING zsssmm0104.
  gv_item_num = gv_item_num + 1.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT_SCREEN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GS_LAYO  text
*      <--P_GT_FCAT  text
*      <--P_GT_SORT  text
*----------------------------------------------------------------------*
FORM set_layout_screen CHANGING  cs_layo TYPE lvc_s_layo
                              ct_fcat TYPE lvc_t_fcat
                              ct_sort TYPE lvc_t_sort.
  " layout ##
  PERFORM set_layout CHANGING cs_layo.


  gs_layo2-cwidth_opt = 'X'.
  gs_layo2-zebra = 'X'.
  gs_layo2-sel_mode = 'A'.
  gs_layo3-cwidth_opt = 'X'.
  gs_layo3-zebra = 'X'.
  gs_layo3-sel_mode = 'A'.
  gs_layo4-cwidth_opt = 'X'.
  gs_layo4-zebra = 'X'.
  gs_layo5-cwidth_opt = 'X'.
  gs_layo5-zebra = 'X'.



  "field-catalog ##
  PERFORM set_fcat TABLES ct_fcat.
  PERFORM set_fs_field : USING 'FIELDNAME' 'PONUM' '' CHANGING gs_fcat2 gt_fcat2,
                         USING 'NO_OUT' 'X' 'X' CHANGING gs_fcat2 gt_fcat2.

  PERFORM set_fs_field : USING 'FIELDNAME' 'POPRC' '' CHANGING gs_fcat2 gt_fcat2,
                         USING 'COLTEXT' '단가' 'X' CHANGING gs_fcat2 gt_fcat2.



  PERFORM set_fs_field : USING 'FIELDNAME' 'TOPRC' '' CHANGING gs_fcat2 gt_fcat2,
                         USING 'COLTEXT' '총 가격' 'X' CHANGING gs_fcat2 gt_fcat2.

  PERFORM set_fs_field : USING 'FIELDNAME' 'POPRC' '' CHANGING gs_fcat4 gt_fcat4,
                             USING 'COLTEXT' '원가' 'X' CHANGING gs_fcat4 gt_fcat4.
  PERFORM set_fs_field : USING 'FIELDNAME' 'TOPRC' '' CHANGING gs_fcat4 gt_fcat4,
                             USING 'COLTEXT' '총 가격' 'X' CHANGING gs_fcat4 gt_fcat4.


  PERFORM set_fs_field : USING 'FIELDNAME' 'VNPRC' '' CHANGING gs_fcat5 gt_fcat5,
                           USING 'COLTEXT' '자재원가' 'X' CHANGING gs_fcat5 gt_fcat5.
  PERFORM set_fs_field : USING 'FIELDNAME' 'DEL' '' CHANGING gs_fcat5 gt_fcat5,
                         USING 'COLTEXT' '삭제 여부' 'X' CHANGING gs_fcat5 gt_fcat5.

  "SORT ##
*  perform setting_sort tables ct_sort.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_CS_LAYO  text
*----------------------------------------------------------------------*
FORM set_layout  CHANGING cs_layo TYPE lvc_s_layo.

  CLEAR cs_layo.
  cs_layo-cwidth_opt = 'X'.
  cs_layo-zebra = 'X'.
  cs_layo-sel_mode = 'A'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_CT_FCAT  text
*----------------------------------------------------------------------*
FORM set_fcat  TABLES   t_fcat TYPE lvc_t_fcat.


  "고객번호
*  PERFORM set_fs_field :
*                      USING 'FIELDNAME' 'INDEX' '' CHANGING t_fcat t_fcat[],
*                         USING 'COL_POS' 'N' '' CHANGING t_fcat t_fcat[],
*                         USING 'COLTEXT' '번호'(f00) 'X' CHANGING t_fcat t_fcat[].



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FS_FIELD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0221   text
*      -->P_0222   text
*      -->P_0223   text
*      <--P_T_FCAT  text
*      <--P_T_FCAT[]  text
*----------------------------------------------------------------------*
FORM set_fs_field USING     VALUE(p_input)
                            VALUE(p_val)
                            VALUE(p_flag)
                   CHANGING cs_fcat TYPE lvc_s_fcat
                            ct_fcat TYPE lvc_t_fcat.
  DATA : lv_field(40).
  FIELD-SYMBOLS <fs>.

  lv_field = 'CS_FCAT-' && p_input.
  ASSIGN (lv_field) TO <fs>.
  IF p_val = 'N'.
    READ TABLE ct_fcat INTO cs_fcat WITH KEY fieldname = p_input.
    <fs> = sy-tabix + 1.
  ELSE.
    <fs> = p_val.
  ENDIF.

  UNASSIGN <fs>.
  IF p_flag = 'X'.
    APPEND cs_fcat TO ct_fcat.
    CLEAR cs_fcat.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_po_data CHANGING cv_inputs TYPE zsssmm0101.

  " 구매 조건에 따른 데이터 가져오기
  IF cv_inputs-podat_s IS NOT INITIAL AND cv_inputs-venid IS NOT INITIAL.
    PERFORM get_all_po_datas_by_cond USING gr_ponum gr_podat cv_inputs-venid.
  ELSEIF  cv_inputs-podat_s IS NOT INITIAL.
    PERFORM get_po_datas_excp_venid USING gr_ponum gr_podat.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_RANGES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0101_PONUM_S  text
*      -->P_ZSSSMM0101_PONUM_E  text
*      <--P_LR_PONUM  text
*----------------------------------------------------------------------*
FORM set_ranges_ponum  USING    VALUE(pv_start)
                          VALUE(pv_end)
                 CHANGING cv_range LIKE gr_ponum.

  DATA : ls_range LIKE LINE OF cv_range.

  IF pv_start IS NOT INITIAL AND pv_end IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign = 'I'.
    ls_range-option = 'BT'.
    ls_range-low = pv_start.
    ls_range-high = pv_end.
    APPEND ls_range TO cv_range.


  ELSEIF pv_start IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign   = 'I'.
    ls_range-option = 'EQ'.
    ls_range-low    = pv_start.
    APPEND ls_range TO cv_range.

  ELSEIF pv_end IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign   = 'I'.
    ls_range-option = 'EQ'.
    ls_range-low    = pv_end.
    APPEND ls_range TO cv_range.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_RANGES_PODAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0101_PODAT_S  text
*      -->P_ZSSSMM0101_PODAT_E  text
*      <--P_LR_PODAT  text
*----------------------------------------------------------------------*
FORM set_ranges_podat USING    VALUE(pv_start)
                          VALUE(pv_end)
                 CHANGING cv_range LIKE gr_podat.

  DATA : ls_range LIKE LINE OF cv_range.

  IF pv_start IS NOT INITIAL AND pv_end IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign = 'I'.
    ls_range-option = 'BT'.
    ls_range-low = pv_start.
    ls_range-high = pv_end.
    APPEND ls_range TO cv_range.

*  _append_range CV_RANGE 'I' 'BT' PV_START PV_END.

  ELSEIF pv_start IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign   = 'I'.
    ls_range-option = 'EQ'.
    ls_range-low    = pv_start.
    APPEND ls_range TO cv_range.

  ELSEIF pv_end IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign   = 'I'.
    ls_range-option = 'EQ'.
    ls_range-high    = pv_end.
    APPEND ls_range TO cv_range.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIRST_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0101  text
*----------------------------------------------------------------------*
FORM set_first_display  CHANGING c_inputs TYPE zsssmm0101.

  c_inputs-podat_s = '20240101'.
*   c_inputs-ponums = '20240101'.
*  c_inputs-ponum_s = 'P2024000001'.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_ALL_PO_DATAS_BY_COND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0321   text
*      -->P_0322   text
*      -->P_0323   text
*----------------------------------------------------------------------*
FORM get_all_po_datas_by_cond  USING    VALUE(pt_ponum) LIKE gr_ponum
                                        VALUE(pt_podat) LIKE gr_podat
                                        VALUE(p_venid).

  SELECT ponum podat venid dudat stext curky rgdat rgtor
    INTO CORRESPONDING FIELDS OF TABLE gt_data
    FROM ztsspoh
*    WHERE ponum IN pt_ponum
    WHERE podat IN pt_podat
    AND venid = p_venid.

  IF sy-subrc <> 0.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_DATAS_EXCP_VENID
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GR_PONUM  text
*      -->P_GR_PODAT  text
*----------------------------------------------------------------------*
FORM get_po_datas_excp_venid  USING    VALUE(pt_ponum) LIKE gr_ponum
                                       VALUE(pt_podat) LIKE gr_podat.

  SELECT ponum podat venid dudat stext curky rgdat rgtor
    INTO CORRESPONDING FIELDS OF TABLE gt_data
    FROM ztsspoh
    WHERE podat >= zsssmm0101-podat_s.

  IF sy-subrc <> 0.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_NUMBER_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_number_range .


  DATA : lv_num  TYPE n LENGTH 6,
         lv_year TYPE n LENGTH 4,
         lv_char TYPE c LENGTH 11.

  lv_year = sy-datum+0(4).

  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      nr_range_nr = '01'
      object      = 'ZNRSSMM01'
*     QUANTITY    = '1'
*     SUBOBJECT   = ' '
      toyear      = lv_year
*     IGNORE_BUFFER                 = ' '
    IMPORTING
      number      = lv_num
*     QUANTITY    =
*     RETURNCODE  =
* EXCEPTIONS
*     INTERVAL_NOT_FOUND            = 1
*     NUMBER_RANGE_NOT_INTERN       = 2
*     OBJECT_NOT_FOUND              = 3
*     QUANTITY_IS_0                 = 4
*     QUANTITY_IS_NOT_1             = 5
*     INTERVAL_OVERFLOW             = 6
*     BUFFER_OVERFLOW               = 7
*     OTHERS      = 8
    .
  IF sy-subrc <> 0.
* Implement suitable error handling here
*    gv_num = 'P' && lv_year && lv_num.
  ENDIF.
*  gv_num = lv_num.
  gv_po_num = 'P' && lv_year && lv_num.
*gv_num = lv_num.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_200_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*----------------------------------------------------------------------*
FORM set_200_display  CHANGING c_input_200 TYPE zsssmm0103.

  c_input_200-podat = sy-datum.
  c_input_200-curky = 'KRW'.
  zsssmm0104-curky = 'KRW'.
  zsssmm0104-plant = '1010'.
  zsssmm0104-meins = 'EA'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ITEMS_RECORD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_items_record .

  DATA : lv_price TYPE zsssmm0104-poprc.

  SELECT SINGLE vnprc
    INTO lv_price
    FROM ztssprcat
    WHERE rawnr = zsssmm0104-pomnr
    AND venid = zsssmm0103-venid.

*  MESSAGE i999(zmcss) WITH lv_price.
  zsssmm0104-poprc = lv_price.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_POP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_ALV2  text
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM check_pop          USING VALUE(co_alv) TYPE REF TO cl_gui_alv_grid
                        CHANGING cv_subrc TYPE sy-subrc
                                 cv_rowid TYPE i.

  DATA : lt_row_no TYPE lvc_t_roid,
         ls_row_no LIKE LINE OF lt_row_no,
         lv_cnt    TYPE i.

  CLEAR cv_subrc.

  CALL METHOD co_alv->get_selected_rows
    IMPORTING
      et_row_no = lt_row_no.

  DESCRIBE TABLE lt_row_no LINES lv_cnt.

  IF lv_cnt <> 1.
    cv_subrc = 4.
    IF lv_cnt = 0.
      MESSAGE i999(zmcb06) WITH '조회 조건을 만들어주세요'(i01).
    ELSE.
      MESSAGE i999(zmcb06) WITH '한 건만 조회하세요'(i02).
    ENDIF.
    RETURN.
  ELSE.

    READ TABLE lt_row_no INDEX 1 INTO ls_row_no.
    cv_rowid = ls_row_no-row_id.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_PURCHASE_ORDER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_purchase_order CHANGING cv_subrc TYPE sy-subrc.

  CLEAR cv_subrc.
  DATA : lv_cnt TYPE i.

  DESCRIBE TABLE gt_item LINES lv_cnt.
  IF lv_cnt = 0.
    MESSAGE i999(zmcss) WITH '구매오더 아이템이 있어야 발주 가능합니다!'.
    RETURN.
  ENDIF.

  PERFORM insert_po_header.
  PERFORM insert_po_item.

  IF sy-subrc = 0.
    COMMIT WORK.
    MESSAGE s999(zmcss) WITH '구매오더가 완료되었습니다!'.
    cv_subrc = sy-subrc.
  ELSE.
    ROLLBACK WORK.
    cv_subrc = sy-subrc.
    MESSAGE s999(zmcss) WITH '구매오더가 실패하였습니다. 다시 확인해주세요'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_PO_HEADER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_po_header .

  " 채번된 번호에 대한 소실 문제 생각해보기

  DATA : ls_data LIKE ztsspoh.

  PERFORM set_number_range.

  ls_data-ponum = gv_po_num.
  ls_data-podat = zsssmm0103-podat.
  ls_data-dudat = zsssmm0103-dudat.
  ls_data-rgtor = zsssmm0103-rgtor.
  ls_data-curky = zsssmm0103-curky.
  ls_data-rgdat = sy-datum.
  ls_data-stext = zsssmm0103-stext.
  ls_data-venid = zsssmm0103-venid.

  INSERT ztsspoh FROM ls_data.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_PO_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_po_item .

  DATA : ls_item_data LIKE ztsspoi,
         ls_item      LIKE LINE OF gt_item.

  LOOP AT gt_item INTO ls_item.

    ls_item_data-ponum = gv_po_num.
    ls_item_data-itnum = ls_item-itnum.
    ls_item_data-pomnr = ls_item-pomnr.
    ls_item_data-amount = ls_item-amount.
    ls_item_data-meins = ls_item-meins.
    ls_item_data-plant = ls_item-plant.
    ls_item_data-poprc = ls_item-poprc.
    ls_item_data-curky = ls_item-curky.
    INSERT ztsspoi FROM ls_item_data.

    CLEAR : ls_item_data,
            ls_item.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SAVE_PO_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM save_po_item CHANGING c_header TYPE zsssmm0103
                           c_item TYPE zsssmm0104.

  DATA : ls_item LIKE LINE OF gt_item,
         lv_sum  LIKE zsssmm0104-toprc.

  c_item-toprc = c_item-poprc * c_item-amount.
  gv_item_num = gv_item_num + 1.

  MOVE-CORRESPONDING c_item TO ls_item.
  APPEND ls_item TO gt_item.

  LOOP AT gt_item INTO ls_item.
    lv_sum = lv_sum + ls_item-toprc.
  ENDLOOP.

  c_header-toprc = lv_sum.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EDIT_PO_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*      <--P_ZSSSMM0104  text
*----------------------------------------------------------------------*
FORM edit_po_item  CHANGING c_header TYPE zsssmm0103
                            c_item TYPE zsssmm0104.

  DATA : ls_item    LIKE LINE OF gt_item,
         lv_temp_id TYPE n LENGTH 3,
         lv_sum     LIKE zsssmm0104-toprc.


  lv_temp_id = c_item-itnum.
  c_item-toprc = c_item-poprc * c_item-amount.
  MOVE-CORRESPONDING c_item TO ls_item.

  LOOP AT gt_item INTO ls_item.
    IF lv_temp_id = ls_item-itnum.
      MOVE-CORRESPONDING c_item TO ls_item.
      MODIFY gt_item FROM ls_item.
*      EXIT.
    ENDIF.
  ENDLOOP.

  LOOP AT gt_item INTO ls_item.
    lv_sum = lv_sum + ls_item-toprc.
  ENDLOOP.

  c_header-toprc = lv_sum.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  RENUMBER_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM renumber_item .

  DATA : lv_cnt(3) TYPE n.

  lv_cnt = 0.

  LOOP AT gt_item ASSIGNING FIELD-SYMBOL(<fs_item>).
    lv_cnt = lv_cnt + 1.
    <fs_item>-itnum = lv_cnt.
  ENDLOOP.

  gv_item_num = lv_cnt.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_REQUIRED_FIELDS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*----------------------------------------------------------------------*
FORM check_required_fields  CHANGING p_head_input TYPE zsssmm0103.

  IF p_head_input-podat IS INITIAL.
    MESSAGE e999(zmcss) WITH '구매오더일자를 입력해주세요.'.
  ENDIF.
  IF p_head_input-dudat IS INITIAL.
    MESSAGE e999(zmcss) WITH '납기일자를 입력해주세요.'.
  ENDIF.
  IF p_head_input-rgtor IS INITIAL.
    MESSAGE e999(zmcss) WITH '발주자를 입력해주세요.'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_PO_DATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103_PODAT  text
*----------------------------------------------------------------------*
FORM check_po_date  CHANGING p_date TYPE zsssmm0103-podat.

  DATA : lv_enddatum TYPE sy-datum.

  lv_enddatum = sy-datum + 3.

  IF p_date < sy-datum.
    MESSAGE e999(zmcss) WITH '구매오더일자를 확인해주세요!'.
  ELSEIF p_date > lv_enddatum.
    MESSAGE e999(zmcss) WITH '구매오더일자를 확인해주세요!'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_DUE_DATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103_DUDAT  text
*----------------------------------------------------------------------*
FORM check_due_date  CHANGING p_dudat TYPE zsssmm0103-dudat.

  DATA : lv_dudat TYPE sy-datum.

  lv_dudat = sy-datum + 60.


  IF p_dudat <= sy-datum.
    MESSAGE e999(zmcss) WITH '납기일은 오늘 이전 날짜를 설정할 수 없습니다'.
  ELSEIF p_dudat  > lv_dudat.
    MESSAGE e999(zmcss) WITH '납기일은 60일 이후로는 설정할 수 없습니다'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_RESGISTOR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103_RGTOR  text
*----------------------------------------------------------------------*
FORM check_resgistor  CHANGING p_emp TYPE zsssmm0103-rgtor.

  DATA lv_depid TYPE ztssemp-depid.

  SELECT SINGLE depid
    INTO lv_depid
    FROM ztssemp
    WHERE pernr = p_emp
    AND estat = 1.

  IF sy-subrc <> 0.
    MESSAGE e999(zmcss) WITH '직원 정보를 찾을 수 없습니다'.
  ELSEIF lv_depid <> 'D002'.
    MESSAGE e999(zmcss) WITH '구매오더는 구매부서에서만 가능합니다'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_MATERIAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0104  text
*----------------------------------------------------------------------*
FORM check_material USING VALUE(p_vend) TYPE  zsssmm0103-venid
                    CHANGING p_mat TYPE zsssmm0104-pomnr.

  DATA lv_mat TYPE ztssprcat-rawnr.

  DATA : BEGIN OF ls_mat,
           rawnr TYPE ztssprcat-rawnr,
           venid TYPE ztssprcat-venid,
         END OF ls_mat.

  SELECT SINGLE rawnr venid
    INTO ls_mat
    FROM ztssprcat
    WHERE rawnr = p_mat
    AND venid = p_vend.

  IF sy-subrc <> 0.
    MESSAGE e999(zmcss) WITH '구매오더할 벤더사의 취급 상품이 아닙니다'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_AMOUNT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0104_AMOUNT  text
*----------------------------------------------------------------------*
FORM check_amount  CHANGING p_amt TYPE zsssmm0104-amount.

  IF p_amt IS INITIAL.
    MESSAGE e999(zmcss) WITH '수량은 1개 이상부터 구매가능합니다.'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_MAT_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_mat_name .

  DATA : lv_mat_name TYPE ztssmat_t-matnm.

  SELECT SINGLE matnm
  INTO lv_mat_name
  FROM ztssmat_t
  WHERE matnr = zsssmm0104-pomnr
  AND langu = sy-langu.

  IF sy-subrc <> 0.
    MESSAGE e999(zmcss) WITH '해당하는 원자재가 존재하지않습니다'.
  ENDIF.

  zsssmm0104-pname = lv_mat_name.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_EMP_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_emp_name USING VALUE(p_pernr) TYPE ztssemp-pernr
                  CHANGING p_emp_name TYPE zsssmm0103-ename.

  DATA : BEGIN OF ls_emp_name,
           lname TYPE ztssemp-lname,
           fname TYPE ztssemp-fname,
         END OF ls_emp_name.

  SELECT SINGLE fname lname
    INTO CORRESPONDING FIELDS OF ls_emp_name
    FROM ztssemp
    WHERE pernr = p_pernr.
  IF sy-subrc <> 0.
    MESSAGE e999(zmcss) WITH '해당하는 사원이 존재하지 않습니다'.
    RETURN.
  ENDIF.

  p_emp_name = ls_emp_name-lname && ls_emp_name-fname.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VEN_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_ven_name .


  DATA : lv_vend_name TYPE ztssvend-vname.

  SELECT SINGLE vname
    INTO lv_vend_name
    FROM ztssvend
    WHERE venid = zsssmm0103-venid.

  IF sy-subrc <> 0.
    MESSAGE e999(zmcss) WITH '해당하는 벤더사가 존재하지 않습니다.'.
    RETURN.
  ENDIF.
  zsssmm0103-vname = lv_vend_name.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DELETE_PO_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*----------------------------------------------------------------------*
FORM delete_po_item  CHANGING p_zsssmm0103.


*  DATA : ls_item LIKE LINE OF gt_item,
*         lv_sum  LIKE zsssmm0104-toprc.
*
*  c_item-toprc = c_item-poprc * c_item-amount.
*  gv_item_num = gv_item_num + 1.
*
*  MOVE-CORRESPONDING c_item TO ls_item.
*  APPEND ls_item TO gt_item.
*
*  LOOP AT gt_item INTO ls_item.
*    lv_sum = lv_sum + ls_item-toprc.
*  ENDLOOP.
*
*  c_header-toprc = lv_sum.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_ITEM_IN_DETAILS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_po_item_in_details .

  SELECT ponum itnum pomnr amount meins plant poprc curky
  INTO CORRESPONDING FIELDS OF TABLE gt_item
  FROM ztsspoi
    WHERE ponum = zsssmm0103-ponum.


  IF sy-subrc <> 0.
    MESSAGE i999(zmcss) WITH '일치하는 구매오더의 아이템이 존재하지 않습니다!'.
    RETURN.
  ENDIF.

  PERFORM get_po_item_mat_name.

  DATA : ls_item LIKE LINE OF gt_item,
         lv_sum  TYPE i.

  LOOP AT gt_item INTO ls_item.
    lv_sum = lv_sum + ls_item-toprc.
    CLEAR ls_item.
  ENDLOOP.

  gs_cond_head-toprc = lv_sum.




ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_ITEM_MAT_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_po_item_mat_name .

  DATA : ls_item      LIKE LINE OF gt_item,
         lv_mat_name  TYPE ztssmat_t-matnm,
         lv_tot_price TYPE i.

  LOOP AT gt_item INTO ls_item.
    SELECT SINGLE matnm
      INTO lv_mat_name
      FROM ztssmat_t
      WHERE matnr = ls_item-pomnr
      AND langu = sy-langu.

    IF sy-subrc <> 0.
      MESSAGE i999(zmcss) WITH '일치하는 자재가 존재하지 않습니다!'.
      RETURN.
    ENDIF.

    ls_item-pname = lv_mat_name.
    ls_item-toprc = ls_item-amount * ls_item-poprc.
    lv_tot_price = lv_tot_price + ls_item-toprc.
    MODIFY gt_item FROM ls_item.
  ENDLOOP.

  zsssmm0103-toprc = lv_tot_price.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VENDER_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_vender_info USING VALUE(p_venid) TYPE ztssvend-venid
                     CHANGING cs_vend.

  DATA : lv_name TYPE zsssmm0103-ename.

  SELECT SINGLE  venid vname begda endda penid vpnme postc addre eid edom
   INTO CORRESPONDING FIELDS OF cs_vend
    FROM ztssvend
    WHERE venid = p_venid.
  IF sy-subrc <> 0.
    MESSAGE i999(zmcss) WITH '일치하는 벤더 정보가 존재하지 않습니다!'.
    RETURN.
  ENDIF.





*  MOVE-CORRESPONDING ls_vend TO zsssmm0103.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PRICE_INFO_BY_VENDER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_price_info_by_vender .

  SELECT rawnr vnprc curky
    INTO CORRESPONDING FIELDS OF TABLE gt_prcat
    FROM ztssprcat
    WHERE venid = zsssmm0103-venid.

  IF sy-subrc <> 0.
    MESSAGE s999(zmcss) WITH '일치하는 벤더-가격정보가 존재하지 않습니다!'.
*    RETURN.
  ENDIF.



  DATA : ls_prcat    LIKE LINE OF gt_prcat,
         lv_mat_name TYPE zsssmm0105-matnm.
  CLEAR lv_mat_name.


  LOOP AT gt_prcat INTO ls_prcat.
    SELECT SINGLE matnm
    INTO lv_mat_name
    FROM ztssmat_t
    WHERE matnr = ls_prcat-rawnr
    AND langu = sy-langu.

    ls_prcat-matnm = lv_mat_name.
    CLEAR lv_mat_name.
    MODIFY gt_prcat FROM ls_prcat.
  ENDLOOP.




ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  UPDATE_PO_INFOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM update_po_infos .

  DATA : ls_head_data TYPE ztsspoh,
         ls_item_data TYPE ztsspoi,
         ls_item      LIKE LINE OF gt_item,
         lv_item_cnt  TYPE i.

  DESCRIBE TABLE gt_item LINES lv_item_cnt.

  IF lv_item_cnt = 0.
    MESSAGE e999(zmcss) WITH '구매오더 수정 시 아이템은 1개이상 필수입니다!'.
    RETURN.
  ENDIF.

  UPDATE ztsspoh
  SET podat = zsssmm0103-podat
      dudat = zsssmm0103-dudat
      stext = zsssmm0103-stext
      rgdat = zsssmm0103-rgdat
      rgtor = zsssmm0103-rgtor
  WHERE ponum = zsssmm0103-ponum.

  LOOP AT gt_item INTO ls_item.

    UPDATE ztsspoi
    SET itnum = ls_item-itnum
        pomnr = ls_item-pomnr
        amount = ls_item-amount
    meins = ls_item-meins
    plant = ls_item-plant
    poprc = ls_item-poprc
    curky = ls_item-curky
    WHERE ponum = zsssmm0103-ponum
    AND itnum = ls_item-itnum.

    IF sy-subrc <> 0.
      ls_item-ponum = zsssmm0103-ponum.
      MOVE-CORRESPONDING ls_item TO ls_item_data.
      INSERT ztsspoi FROM ls_item_data.
    ENDIF.

  ENDLOOP.



  IF sy-subrc = 0.
    MESSAGE s999(zmcss) WITH '수정이 완료되었습니다!'.
    COMMIT WORK.

  ELSE.
    ROLLBACK WORK.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_EMAIL_DOMAIN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_VEND_EDOM  text
*      <--P_ZSSSMD0302_EDNME  text
*----------------------------------------------------------------------*
FORM get_email_domain  USING   VALUE(p_edom) TYPE ztssdom-edom
                       CHANGING c_domname TYPE ztssdom-ednme.

  SELECT SINGLE ednme
    INTO c_domname
    FROM ztssdom
    WHERE edom = p_edom.
  IF sy-subrc <> 0.
    MESSAGE i999(zmcss) WITH '일치하는 이메일 도메인이 존재하지 않습니다'.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_DISPLAY_0302
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_display_0302 .

  PERFORM create_alv USING 'CON3_1' CHANGING go_con32 go_alv32.
  PERFORM display_alv USING 'ZSSSMM0104' CHANGING gt_proto_item gs_layo3 gt_fcat3 gt_sort3 go_alv32.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_PO_RGTOR_UPDATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0103_RGDAT  text
*----------------------------------------------------------------------*
FORM check_po_rgtor_update  USING VALUE(p_dudat) TYPE zsssmm0103-dudat .

  DATA : lv_datum TYPE sy-datum.

  lv_datum = sy-datum + 60.

  IF p_dudat IS INITIAL.
    MESSAGE e999(zmcss) WITH '납기일은 필수 값입니다!'.
  ELSEIF p_dudat <= sy-datum.
    MESSAGE e999(zmcss) WITH '납기일은 오늘 이전으로 설정할 수 없습니다.'.
  ELSEIF p_dudat >= lv_datum.
    MESSAGE e999(zmcss) WITH '납기일은 60일이내로 설정할 수 있습니다!'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_OK_EDIT_BY_GR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_DATA_PONUM  text
*----------------------------------------------------------------------*
FORM check_ok_edit_by_gr  USING VALUE(p_ponum) TYPE ztsspoh-ponum
                          CHANGING cv_subrc TYPE sy-subrc.

  DATA : lv_ponum TYPE ztsspoh-ponum.

  SELECT SINGLE ponum
  INTO lv_ponum
  FROM ztssgri
  WHERE ponum = p_ponum.

  IF sy-subrc = 0.
    MESSAGE i999(zmcss) WITH 'GR이 수행된 PO입니다 수정불가입니다!'.
    cv_subrc = 1.
  ENDIF.


ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
