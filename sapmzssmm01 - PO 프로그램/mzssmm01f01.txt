*&---------------------------------------------------------------------*
*&  Include           MZSSMM01F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0017   text
*      <--P_GO_CON  text
*      <--P_GO_ALV  text
*----------------------------------------------------------------------*
FORM create_alv USING VALUE(p_con) TYPE c
                 CHANGING  co_con TYPE REF TO cl_gui_custom_container
                           co_alv TYPE REF TO cl_gui_alv_grid.

  IF co_con IS NOT INITIAL. RETURN. ENDIF.

  CREATE OBJECT co_con
    EXPORTING
*     parent                      =
      container_name              = p_con
*     style                       =
*     lifetime                    = lifetime_default
*     repid                       =
*     dynnr                       =
*     no_autodef_progid_dynnr     =
    EXCEPTIONS
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5
      OTHERS                      = 6.
  IF sy-subrc <> 0.
    " &에 대한 시스템 오류입니다 담당자 &에게 문의하세요
    MESSAGE a999(zmcss) WITH '시스템 오류입니다. 담당자에게 문의하세요'.
    RETURN.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT co_alv
    EXPORTING
*     i_shellstyle      = 0
*     i_lifetime        =
      i_parent          = co_con
*     i_appl_events     = space
*     i_parentdbg       =
*     i_applogparent    =
*     i_graphicsparent  =
*     i_name            =
*     i_fcat_complete   = SPACE
    EXCEPTIONS
      error_cntl_create = 1
      error_cntl_init   = 2
      error_cntl_link   = 3
      error_dp_create   = 4
      OTHERS            = 5.

  IF sy-subrc <> 0.
    MESSAGE a999(zmcss) WITH '시스템 오류입니다. 담당자에게 문의하세요'.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0024   text
*      <--P_GT_DATA_0100  text
*      <--P_GS_LAYO  text
*      <--P_GT_FCAT  text
*      <--P_GT_SORT  text
*      <--P_GO_ALV  text
*----------------------------------------------------------------------*
FORM display_alv USING VALUE(p_name) TYPE c
                  CHANGING ct_data
                           cs_layo TYPE lvc_s_layo
                           ct_fcat TYPE lvc_t_fcat
                           ct_sort TYPE lvc_t_sort
                           co_alv TYPE REF TO cl_gui_alv_grid.

  CALL METHOD co_alv->set_table_for_first_display
    EXPORTING
      i_structure_name              = p_name
*     is_variant                    =
*     i_save                        =
*     i_default                     = 'X'
      is_layout                     = cs_layo
    CHANGING
      it_outtab                     = ct_data
      it_fieldcatalog               = ct_fcat
      it_sort                       = ct_sort
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
    MESSAGE a999(zmcss) WITH '시스템 오류입니다. 담당자에게 문의하세요'.
    RETURN.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEARCH_PO_ALL_INFOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM search_po_all_infos .

  PERFORM set_ranges_ponum USING zsssmm0101-ponum_s zsssmm0101-ponum_e CHANGING gr_ponum.
  PERFORM set_ranges_podat USING zsssmm0101-podat_s zsssmm0101-podat_e CHANGING gr_podat.
  PERFORM get_po_data CHANGING zsssmm0101.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DEFAULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_default .
  zsssmm0103-rgtor = 'E0000015'.
  zsssmm0103-rgdat = sy-datum.
  " 첫 화면 구성하기
  PERFORM set_first_display CHANGING zsssmm0101.
  PERFORM set_ranges_podat USING zsssmm0101-podat_s zsssmm0101-podat_e CHANGING gr_podat.
  PERFORM set_exclude_btn.

  PERFORM set_200_display CHANGING zsssmm0103.

  PERFORM set_layout_screen.
  PERFORM set_field_catalog.
  PERFORM set_sort TABLES gt_sort9.

  PERFORM get_po_data CHANGING zsssmm0101.
  PERFORM modify_po_data.
  SORT gt_data BY podat DESCENDING.
  gv_item_num = gv_item_num + 1.

  gv_chk1 = 'X'.
  gv_chk2 = 'X'.
  gv_chk3 = 'X'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT_SCREEN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GS_LAYO  text
*      <--P_GT_FCAT  text
*      <--P_GT_SORT  text
*----------------------------------------------------------------------*
FORM set_layout_screen.

  PERFORM set_layout : CHANGING gs_layo,
                       CHANGING gs_layo2,
                       CHANGING gs_layo3,
                       CHANGING gs_layo7.

  gs_layo32-cwidth_opt = 'X'.
  gs_layo32-zebra = 'X'.


  gs_layo4-cwidth_opt = 'X'.
  gs_layo4-zebra = 'X'.
  gs_layo5-cwidth_opt = 'X'.
  gs_layo5-zebra = 'X'.

*  gs_layo2-cwidth_opt = 'A'.
*  gs_layo2-zebra = 'X'.

  gs_layo7-cwidth_opt = 'A'.
  gs_layo7-zebra = 'X'.




ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_CS_LAYO  text
*----------------------------------------------------------------------*
FORM set_layout  CHANGING cs_layo TYPE lvc_s_layo.

  CLEAR cs_layo.
  cs_layo-cwidth_opt = 'X'.
  cs_layo-zebra = 'X'.
  cs_layo-sel_mode = 'A'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FS_FIELD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0221   text
*      -->P_0222   text
*      -->P_0223   text
*      <--P_T_FCAT  text
*      <--P_T_FCAT[]  text
*----------------------------------------------------------------------*
FORM set_fs_field USING     VALUE(p_input)
                            VALUE(p_val)
                            VALUE(p_flag)
                   CHANGING cs_fcat TYPE lvc_s_fcat
                            ct_fcat TYPE lvc_t_fcat.
  DATA : lv_field(40).
  FIELD-SYMBOLS <fs>.

  lv_field = 'CS_FCAT-' && p_input.
  ASSIGN (lv_field) TO <fs>.
  IF p_val = 'N'.
    READ TABLE ct_fcat INTO cs_fcat WITH KEY fieldname = p_input.
    <fs> = sy-tabix + 1.
  ELSE.
    <fs> = p_val.
  ENDIF.

  UNASSIGN <fs>.
  IF p_flag = 'X'.
    APPEND cs_fcat TO ct_fcat.
    CLEAR cs_fcat.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_po_data CHANGING cv_inputs TYPE zsssmm0101.

  " 구매 조건에 따른 데이터 가져오기
  DATA : lv_where     TYPE string,
         lv_date_low  TYPE string,
         lv_date_high TYPE string,
         lv_venid     TYPE string.

  IF gr_ponum IS NOT INITIAL.
    CONCATENATE lv_where 'ponum IN gr_ponum' INTO lv_where SEPARATED BY space.
  ENDIF.

  IF gr_podat IS NOT INITIAL.
    IF lv_where IS NOT INITIAL.
      CONCATENATE lv_where 'AND' INTO lv_where SEPARATED BY space.
    ENDIF.
    CONCATENATE lv_where 'podat IN gr_podat' INTO lv_where SEPARATED BY space.
  ENDIF.

  IF cv_inputs-venid IS NOT INITIAL.
    IF lv_where IS NOT INITIAL.
      CONCATENATE lv_where 'AND' INTO lv_where SEPARATED BY space.
    ENDIF.
    CONCATENATE lv_where 'venid = cv_inputs-venid' INTO lv_where SEPARATED BY space.

  ENDIF.

  SELECT ponum podat venid dudat stext curky rgdat rgtor
  INTO CORRESPONDING FIELDS OF TABLE gt_data
  FROM ztsspoh
  WHERE (lv_where).
*  IF sy-subrc <> 0.
*    MESSAGE s999(zmcss) WITH '일치하는 정보가 존재하지 않습니다!'.
*    RETURN.
*  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_RANGES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0101_PONUM_S  text
*      -->P_ZSSSMM0101_PONUM_E  text
*      <--P_LR_PONUM  text
*----------------------------------------------------------------------*
FORM set_ranges_ponum  USING    VALUE(pv_start) TYPE ztsspoi-ponum
                          VALUE(pv_end) TYPE ztsspoi-ponum
                 CHANGING cv_range LIKE gr_ponum.

  DATA : ls_range LIKE LINE OF cv_range.

  CLEAR cv_range.

  IF pv_start IS NOT INITIAL AND pv_end IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign = 'I'.
    ls_range-option = 'BT'.
    ls_range-low = pv_start.
    ls_range-high = pv_end.
    APPEND ls_range TO cv_range.


  ELSEIF pv_start IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign   = 'I'.
    ls_range-option = 'GE'.
    ls_range-low    = pv_start.
    APPEND ls_range TO cv_range.

  ELSEIF pv_end IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign   = 'I'.
    ls_range-option = 'LE'.
    ls_range-high    = pv_end.
    APPEND ls_range TO cv_range.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_RANGES_PODAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0101_PODAT_S  text
*      -->P_ZSSSMM0101_PODAT_E  text
*      <--P_LR_PODAT  text
*----------------------------------------------------------------------*
FORM set_ranges_podat USING    VALUE(pv_start) TYPE sy-datum
                          VALUE(pv_end) TYPE sy-datum
                 CHANGING cv_range LIKE gr_podat.

  DATA : ls_range LIKE LINE OF cv_range.

  CLEAR cv_range.

  IF pv_start IS NOT INITIAL AND pv_end IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign = 'I'.
    ls_range-option = 'BT'.
    ls_range-low = pv_start.
    ls_range-high = pv_end.
    APPEND ls_range TO cv_range.

*  _append_range CV_RANGE 'I' 'BT' PV_START PV_END.

  ELSEIF pv_start IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign   = 'I'.
    ls_range-option = 'GT'.
    ls_range-low    = pv_start.
    APPEND ls_range TO cv_range.

  ELSEIF pv_end IS NOT INITIAL.

    CLEAR ls_range.
    ls_range-sign   = 'I'.
    ls_range-option = 'LE'.
    ls_range-high    = pv_end.
    APPEND ls_range TO cv_range.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIRST_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0101  text
*----------------------------------------------------------------------*
FORM set_first_display  CHANGING c_inputs TYPE zsssmm0101.

  c_inputs-podat_s = '20250101'.
  c_inputs-podat_e = '20251231'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_ALL_PO_DATAS_BY_COND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0321   text
*      -->P_0322   text
*      -->P_0323   text
*----------------------------------------------------------------------*
FORM get_all_po_datas_by_cond  USING    VALUE(pt_ponum) LIKE gr_ponum
                                        VALUE(pt_podat) LIKE gr_podat
                                        VALUE(p_venid).

  SELECT ponum podat venid dudat stext curky rgdat rgtor
    INTO CORRESPONDING FIELDS OF TABLE gt_data
    FROM ztsspoh
    WHERE ponum IN pt_ponum
    AND podat IN pt_podat
    AND venid = p_venid.

  IF sy-subrc <> 0.
    MESSAGE s999(zmcss) WITH '일치하는 정보가 존재하지 않습니다!'.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_DATAS_EXCP_VENID
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GR_PONUM  text
*      -->P_GR_PODAT  text
*----------------------------------------------------------------------*
FORM get_po_datas_excp_venid  USING    VALUE(pt_ponum) LIKE gr_ponum
                                       VALUE(pt_podat) LIKE gr_podat.

  SELECT ponum podat venid dudat stext curky rgdat rgtor
    INTO CORRESPONDING FIELDS OF TABLE gt_data
    FROM ztsspoh
    WHERE podat >= zsssmm0101-podat_s.

  IF sy-subrc <> 0.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_NUMBER_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_number_range .


  DATA : lv_num  TYPE n LENGTH 6,
         lv_year TYPE n LENGTH 4,
         lv_char TYPE c LENGTH 11.

  lv_year = sy-datum+0(4).

  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      nr_range_nr             = '01'
      object                  = 'ZNRSSMM01'
*     QUANTITY                = '1'
*     SUBOBJECT               = ' '
      toyear                  = lv_year
*     IGNORE_BUFFER           = ' '
    IMPORTING
      number                  = lv_num
*     QUANTITY                =
*     RETURNCODE              =
    EXCEPTIONS
      interval_not_found      = 1
      number_range_not_intern = 2
      object_not_found        = 3
      quantity_is_0           = 4
      quantity_is_not_1       = 5
      interval_overflow       = 6
      buffer_overflow         = 7
      OTHERS                  = 8.
  IF sy-subrc <> 0.
* Implement suitable error handling here
    MESSAGE a999(zmcss) WITH '넘버링이 실패했습니다.'.
    RETURN.
  ENDIF.
  gv_po_num = 'P' && lv_year && lv_num.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_200_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*----------------------------------------------------------------------*
FORM set_200_display  CHANGING c_input_200 TYPE zsssmm0103.

  c_input_200-podat = sy-datum.
  c_input_200-curky = 'KRW'.
  zsssmm0104-curky = 'KRW'.
  zsssmm0104-plant = '1010'.
  zsssmm0104-meins = 'EA'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ITEMS_RECORD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_items_record .

  DATA : lv_price TYPE zsssmm0104-poprc.

  SELECT SINGLE vnprc
    INTO lv_price
    FROM ztssprcat
    WHERE rawnr = zsssmm0104-pomnr
    AND venid = zsssmm0103-venid.

*  MESSAGE i999(zmcss) WITH lv_price.
  zsssmm0104-poprc = lv_price.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_POP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_ALV2  text
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM check_pop          USING VALUE(co_alv) TYPE REF TO cl_gui_alv_grid
                        CHANGING cv_subrc TYPE sy-subrc
                                 cv_rowid TYPE i.

  DATA : lt_row_no TYPE lvc_t_roid,
         ls_row_no LIKE LINE OF lt_row_no,
         lv_cnt    TYPE i.

  CLEAR cv_subrc.

  CALL METHOD co_alv->get_selected_rows
    IMPORTING
      et_row_no = lt_row_no.

  DESCRIBE TABLE lt_row_no LINES lv_cnt.

  IF lv_cnt <> 1.
    cv_subrc = 4.
    IF lv_cnt = 0.
      MESSAGE i999(zmcb06) WITH '조회 조건을 만들어주세요'(i01).
    ELSE.
      MESSAGE i999(zmcb06) WITH '한 건만 조회하세요'(i02).
    ENDIF.
    RETURN.
  ELSE.

    READ TABLE lt_row_no INDEX 1 INTO ls_row_no.
    cv_rowid = ls_row_no-row_id.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_PURCHASE_ORDER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_purchase_order CHANGING cv_subrc TYPE sy-subrc.

  CLEAR cv_subrc.
  DATA : lv_cnt TYPE i.

  DESCRIBE TABLE gt_item LINES lv_cnt.
  IF lv_cnt = 0.
    MESSAGE i999(zmcss) WITH '구매오더 아이템이 있어야 발주 가능합니다!'.
    cv_subrc = 4.
    RETURN.
  ENDIF.

  PERFORM insert_po_header.
  PERFORM insert_po_item.

  IF sy-subrc = 0.
    COMMIT WORK.
    cv_subrc = sy-subrc.
    MESSAGE s999(zmcss) WITH '구매오더가 완료되었습니다!'.
  ELSE.
    ROLLBACK WORK.
    cv_subrc = sy-subrc.
    MESSAGE s999(zmcss) WITH '구매오더가 실패하였습니다. 다시 확인해주세요'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_PO_HEADER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_po_header .

  " 채번된 번호에 대한 소실 문제 생각해보기

  DATA : ls_data LIKE ztsspoh.

  PERFORM set_number_range.

  ls_data-ponum = gv_po_num.
  ls_data-podat = zsssmm0103-podat.
  ls_data-dudat = zsssmm0103-dudat.
  ls_data-rgtor = zsssmm0103-rgtor.
  ls_data-curky = zsssmm0103-curky.
  ls_data-rgdat = sy-datum.
  ls_data-stext = zsssmm0103-stext.
  ls_data-venid = zsssmm0103-venid.

  INSERT ztsspoh FROM ls_data.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_PO_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_po_item .

  DATA : ls_item_data LIKE ztsspoi,
         ls_item      LIKE LINE OF gt_item.

  LOOP AT gt_item INTO ls_item.

    ls_item_data-ponum = gv_po_num.
    ls_item_data-itnum = ls_item-itnum.
    ls_item_data-pomnr = ls_item-pomnr.
    ls_item_data-amount = ls_item-amount.
    ls_item_data-meins = ls_item-meins.
    ls_item_data-plant = ls_item-plant.
    ls_item_data-poprc = ls_item-toprc.
    ls_item_data-curky = ls_item-curky.
    INSERT ztsspoi FROM ls_item_data.

    CLEAR : ls_item_data,
            ls_item.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SAVE_PO_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM save_po_item CHANGING c_header TYPE zsssmm0103
                           c_item TYPE zsssmm0104.

  DATA : ls_item LIKE LINE OF gt_item,
         lv_sum  LIKE zsssmm0104-toprc.

  c_item-toprc = c_item-poprc * c_item-amount.
  gv_item_num = gv_item_num + 1.

  MOVE-CORRESPONDING c_item TO ls_item.
  APPEND ls_item TO gt_item.

  LOOP AT gt_item INTO ls_item.
    lv_sum = lv_sum + ls_item-toprc.
  ENDLOOP.

  c_header-toprc = lv_sum.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EDIT_PO_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*      <--P_ZSSSMM0104  text
*----------------------------------------------------------------------*
FORM edit_po_item  CHANGING c_header TYPE zsssmm0103
                            c_item TYPE zsssmm0104.

  DATA : ls_item    LIKE LINE OF gt_item,
         lv_temp_id TYPE n LENGTH 3,
         lv_sum     LIKE zsssmm0104-toprc.


  lv_temp_id = c_item-itnum.
  c_item-toprc = c_item-poprc * c_item-amount.
  MOVE-CORRESPONDING c_item TO ls_item.

  LOOP AT gt_item INTO ls_item.
    IF lv_temp_id = ls_item-itnum.
      MOVE-CORRESPONDING c_item TO ls_item.
      MODIFY gt_item FROM ls_item.
*      EXIT.
    ENDIF.
  ENDLOOP.

  LOOP AT gt_item INTO ls_item.
    lv_sum = lv_sum + ls_item-toprc.
  ENDLOOP.

  c_header-toprc = lv_sum.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  RENUMBER_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM renumber_item .

  DATA : lv_cnt(3) TYPE n.

  lv_cnt = 0.

  LOOP AT gt_item ASSIGNING FIELD-SYMBOL(<fs_item>).
    lv_cnt = lv_cnt + 1.
    <fs_item>-itnum = lv_cnt.
  ENDLOOP.

  gv_item_num = lv_cnt + 1.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_REQUIRED_FIELDS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*----------------------------------------------------------------------*
FORM check_required_fields  CHANGING p_head_input TYPE zsssmm0103.

  IF p_head_input-podat IS INITIAL.
    MESSAGE e999(zmcss) WITH '구매오더일자를 입력해주세요.'.
    RETURN.
  ENDIF.
  IF p_head_input-dudat IS INITIAL.
    MESSAGE e999(zmcss) WITH '납기일자를 입력해주세요.'.
    RETURN.
  ENDIF.
  IF p_head_input-rgtor IS INITIAL.
    MESSAGE e999(zmcss) WITH '발주자를 입력해주세요.'.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_PO_DATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103_PODAT  text
*----------------------------------------------------------------------*
FORM check_po_date  CHANGING p_date TYPE zsssmm0103-podat.

  DATA : lv_enddatum TYPE sy-datum.

  lv_enddatum = sy-datum + 3.

  IF p_date < sy-datum.
    MESSAGE e999(zmcss) WITH '구매오더일자를 확인해주세요!'.
  ELSEIF p_date > lv_enddatum.
    MESSAGE e999(zmcss) WITH '구매오더일자를 확인해주세요!'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_DUE_DATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103_DUDAT  text
*----------------------------------------------------------------------*
FORM check_due_date  CHANGING p_dudat TYPE zsssmm0103-dudat.

  DATA : lv_dudat TYPE sy-datum.

  lv_dudat = sy-datum + 60.


  IF p_dudat <= sy-datum.
    MESSAGE e999(zmcss) WITH '납기일은 오늘 이전 날짜를 설정할 수 없습니다'.
  ELSEIF p_dudat  > lv_dudat.
    MESSAGE e999(zmcss) WITH '납기일은 60일 이후로는 설정할 수 없습니다'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_RESGISTOR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103_RGTOR  text
*----------------------------------------------------------------------*
FORM check_resgistor  CHANGING p_emp TYPE zsssmm0103-rgtor.

  DATA lv_depid TYPE ztssemp-depid.

  SELECT SINGLE depid
    INTO lv_depid
    FROM ztssemp
    WHERE pernr = p_emp
    AND estat = 1.

  IF sy-subrc <> 0.
    MESSAGE e999(zmcss) WITH '직원 정보를 찾을 수 없습니다'.
  ELSEIF lv_depid <> 'D002'.
    MESSAGE e999(zmcss) WITH '구매오더는 구매부서에서만 가능합니다'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_MATERIAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0104  text
*----------------------------------------------------------------------*
FORM check_material USING VALUE(p_vend) TYPE  zsssmm0103-venid
                    CHANGING p_mat TYPE zsssmm0104-pomnr.

  DATA lv_mat TYPE ztssprcat-rawnr.

  DATA : BEGIN OF ls_mat,
           rawnr TYPE ztssprcat-rawnr,
           venid TYPE ztssprcat-venid,
         END OF ls_mat.

  SELECT SINGLE rawnr venid
    INTO ls_mat
    FROM ztssprcat
    WHERE rawnr = p_mat
    AND venid = p_vend.

  IF sy-subrc <> 0.
    MESSAGE e999(zmcss) WITH '구매오더할 벤더사의 취급 상품이 아닙니다'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_AMOUNT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0104_AMOUNT  text
*----------------------------------------------------------------------*
FORM check_amount  CHANGING p_amt TYPE zsssmm0104-amount.

  IF p_amt IS INITIAL.
    MESSAGE e999(zmcss) WITH '수량은 1개 이상부터 구매가능합니다.'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_MAT_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_mat_name .

  DATA : lv_mat_name TYPE ztssmat_t-matnm.

  SELECT SINGLE matnm
  INTO lv_mat_name
  FROM ztssmat_t
  WHERE matnr = zsssmm0104-pomnr
  AND langu = sy-langu.

  IF sy-subrc <> 0.
    MESSAGE i999(zmcss) WITH '해당하는 원자재가 존재하지않습니다'.
  ENDIF.

  zsssmm0104-pname = lv_mat_name.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_EMP_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_emp_name USING VALUE(p_pernr) TYPE ztssemp-pernr
                  CHANGING p_emp_name TYPE zsssmm0103-ename.

  CLEAR p_emp_name.
  DATA : BEGIN OF ls_emp_name,
           lname TYPE ztssemp-lname,
           fname TYPE ztssemp-fname,
         END OF ls_emp_name.

  SELECT SINGLE fname lname
    INTO CORRESPONDING FIELDS OF ls_emp_name
    FROM ztssemp
    WHERE pernr = p_pernr.
  IF sy-subrc <> 0.
*    MESSAGE s999(zmcss) WITH '해당하는 사원이 존재하지 않습니다'.
*    RETURN.
  ENDIF.

  p_emp_name = ls_emp_name-lname && ls_emp_name-fname.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VEN_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_ven_name USING VALUE(p_venid) TYPE ztssvend-venid
                  CHANGING p_name TYPE ztssvend-vname.

  DATA : lv_vend_name TYPE ztssvend-vname.

  SELECT SINGLE vname
    INTO p_name
    FROM ztssvend
    WHERE venid = p_venid.
  IF sy-subrc <> 0.
    MESSAGE s999(zmcss) WITH '해당하는 벤더사가 존재하지 않습니다.'.
    RETURN.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DELETE_PO_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*----------------------------------------------------------------------*
*FORM delete_po_item  CHANGING p_zsssmm0103.
*
*
*  DATA : lv_item_rowid TYPE i,
*         ls_del_item   LIKE LINE OF gt_item,
*         l_data        TYPE ztsspoi.
*
*  CLEAR  gs_item.
*
*  PERFORM check_pop USING co_alv CHANGING cv_subrc lv_item_rowid.
*  IF cv_subrc = 0.
*    READ TABLE gt_item INDEX lv_item_rowid INTO ls_del_item.
*    zsssmm0103-toprc = zsssmm0103-toprc - ls_del_item-toprc.
*    gs_item = ls_del_item.
*    DELETE gt_item INDEX lv_item_rowid.
*    PERFORM renumber_item .
*  ENDIF.
*
*ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_ITEM_IN_DETAILS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_po_item_in_details .

  SELECT ponum itnum pomnr amount meins plant poprc curky
  INTO CORRESPONDING FIELDS OF TABLE gt_item
  FROM ztsspoi
    WHERE ponum = zsssmm0103-ponum.


  IF sy-subrc <> 0.
    MESSAGE i999(zmcss) WITH '일치하는 구매오더의 아이템이 존재하지 않습니다!'.
    RETURN.
  ENDIF.

  PERFORM get_po_item_mat_name.

  DATA : ls_item LIKE LINE OF gt_item,
         lv_sum  TYPE i.

  LOOP AT gt_item INTO ls_item.
    lv_sum = lv_sum + ls_item-poprc.
    CLEAR ls_item.
  ENDLOOP.

  gs_cond_head-toprc = lv_sum.




ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_ITEM_MAT_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_po_item_mat_name .

  DATA : ls_item      LIKE LINE OF gt_item,
         lv_mat_name  TYPE ztssmat_t-matnm,
         lv_tot_price TYPE i.

  LOOP AT gt_item INTO ls_item.
    SELECT SINGLE matnm
      INTO lv_mat_name
      FROM ztssmat_t
      WHERE matnr = ls_item-pomnr
      AND langu = sy-langu.

    IF sy-subrc <> 0.
      MESSAGE i999(zmcss) WITH '일치하는 자재가 존재하지 않습니다!'.
      RETURN.
    ENDIF.

    ls_item-pname = lv_mat_name.
*    ls_item-poprc = ls_item-poprc.
    lv_tot_price = lv_tot_price + ls_item-poprc.
    MODIFY gt_item FROM ls_item.
    CLEAR ls_item.
  ENDLOOP.

  zsssmm0103-toprc = lv_tot_price.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VENDER_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_vender_info USING VALUE(p_venid) TYPE ztssvend-venid
                     CHANGING cs_vend.

  DATA : lv_name TYPE zsssmm0103-ename.

  SELECT SINGLE  venid vname begda endda penid vpnme postc addre eid edom
   INTO CORRESPONDING FIELDS OF cs_vend
    FROM ztssvend
    WHERE venid = p_venid.
  IF sy-subrc <> 0.
    MESSAGE i999(zmcss) WITH '일치하는 벤더 정보가 존재하지 않습니다!'.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PRICE_INFO_BY_VENDER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_price_info_by_vender .

  SELECT rawnr vnprc curky
    INTO CORRESPONDING FIELDS OF TABLE gt_prcat
    FROM ztssprcat
    WHERE venid = zsssmm0103-venid.

  IF sy-subrc <> 0.
    MESSAGE s999(zmcss) WITH '일치하는 벤더-가격정보가 존재하지 않습니다!'.
*    RETURN.
  ENDIF.



  DATA : ls_prcat    LIKE LINE OF gt_prcat,
         lv_mat_name TYPE zsssmm0105-matnm.
  CLEAR lv_mat_name.


  LOOP AT gt_prcat INTO ls_prcat.
    SELECT SINGLE matnm
    INTO lv_mat_name
    FROM ztssmat_t
    WHERE matnr = ls_prcat-rawnr
    AND langu = sy-langu.

    ls_prcat-matnm = lv_mat_name.
    CLEAR lv_mat_name.
    MODIFY gt_prcat FROM ls_prcat.
  ENDLOOP.




ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  UPDATE_PO_INFOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM update_po_infos .

  DATA : ls_head_data TYPE ztsspoh,
         ls_item_data TYPE ztsspoi,
         ls_item      LIKE LINE OF gt_item,
         lv_item_cnt  TYPE i.

  DESCRIBE TABLE gt_item LINES lv_item_cnt.

  IF lv_item_cnt = 0.
    MESSAGE e999(zmcss) WITH '구매오더 수정 시 아이템은 1개이상 필수입니다!'.
    RETURN.
  ENDIF.

  UPDATE ztsspoh
  SET podat = zsssmm0103-podat
      dudat = zsssmm0103-dudat
      stext = zsssmm0103-stext
      rgdat = zsssmm0103-rgdat
      rgtor = zsssmm0103-rgtor
  WHERE ponum = zsssmm0103-ponum.

  LOOP AT gt_item INTO ls_item.

    UPDATE ztsspoi
    SET itnum = ls_item-itnum
        pomnr = ls_item-pomnr
        amount = ls_item-amount
    meins = ls_item-meins
    plant = ls_item-plant
    poprc = ls_item-poprc
    curky = ls_item-curky
    WHERE ponum = zsssmm0103-ponum
    AND itnum = ls_item-itnum.

    IF sy-subrc <> 0.
      ls_item-ponum = zsssmm0103-ponum.
      MOVE-CORRESPONDING ls_item TO ls_item_data.
      INSERT ztsspoi FROM ls_item_data.
    ENDIF.

  ENDLOOP.



  IF sy-subrc = 0.
    MESSAGE s999(zmcss) WITH '수정이 완료되었습니다!'.
    COMMIT WORK.

  ELSE.
    ROLLBACK WORK.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_EMAIL_DOMAIN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_VEND_EDOM  text
*      <--P_ZSSSMD0302_EDNME  text
*----------------------------------------------------------------------*
FORM get_email_domain  USING   VALUE(p_edom) TYPE ztssdom-edom
                       CHANGING c_domname TYPE ztssdom-ednme.

  SELECT SINGLE ednme
    INTO c_domname
    FROM ztssdom
    WHERE edom = p_edom.
  IF sy-subrc <> 0.
    MESSAGE i999(zmcss) WITH '일치하는 이메일 도메인이 존재하지 않습니다'.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_DISPLAY_0302
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_display_0302 .

  PERFORM create_alv USING 'CON3_1' CHANGING go_con32 go_alv32.
  PERFORM display_alv USING 'ZSSSMM0104' CHANGING gt_proto_item gs_layo32 gt_fcat3 gt_sort3 go_alv32.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_PO_RGTOR_UPDATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0103_RGDAT  text
*----------------------------------------------------------------------*
FORM check_po_rgtor_update  USING VALUE(p_dudat) TYPE zsssmm0103-dudat .

  DATA : lv_datum TYPE sy-datum.

  lv_datum = sy-datum + 60.

  IF p_dudat IS INITIAL.
    MESSAGE e999(zmcss) WITH '납기일은 필수 값입니다!'.
  ELSEIF p_dudat <= sy-datum.
    MESSAGE e999(zmcss) WITH '납기일은 오늘 이전으로 설정할 수 없습니다.'.
  ELSEIF p_dudat >= lv_datum.
    MESSAGE e999(zmcss) WITH '납기일은 60일이내로 설정할 수 있습니다!'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_OK_EDIT_BY_GR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_DATA_PONUM  text
*----------------------------------------------------------------------*
FORM check_ok_edit_by_gr  USING VALUE(p_ponum) TYPE ztsspoh-ponum
                          CHANGING cv_subrc TYPE sy-subrc.

  DATA : lv_ponum TYPE ztsspoh-ponum.

  SELECT SINGLE ponum
  INTO lv_ponum
  FROM ztssgri
  WHERE ponum = p_ponum.

  IF sy-subrc = 0.
    MESSAGE i999(zmcss) WITH 'GR이 수행된 PO입니다 수정불가입니다!'.
    cv_subrc = 1.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_field_catalog .

  PERFORM set_fcat.
  PERFORM set_fcat7.

*  perform set_fc


*  "field-catalog ##
*  PERFORM set_fs_field : USING 'FIELDNAME' 'PODAT' '' CHANGING gs_fcat gt_fcat,
*                         USING 'COL_POS' 'N' '' CHANGING gs_fcat gt_fcat.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'VENID' 'X' CHANGING gs_fcat gt_fcat,
*                         USING 'COL_POS' 'N' '' CHANGING gs_fcat gt_fcat.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'VNAME' 'X' CHANGING gs_fcat gt_fcat,
*                          USING 'COL_POS' 'N' '' CHANGING gs_fcat gt_fcat.
*
*  PERFORM set_fs_field :
*  USING 'FIELDNAME' 'DUDAT' '' CHANGING gs_fcat gt_fcat,
*  USING 'COL_POS' 'N' 'X' CHANGING gs_fcat gt_fcat.        " ← 추가!
*
*  " STEXT
*  PERFORM set_fs_field :
*    USING 'FIELDNAME' 'STEXT' '' CHANGING gs_fcat gt_fcat,
*    USING 'COL_POS' 'N' 'X' CHANGING gs_fcat gt_fcat.        " ← 추가!
*
*  " PONUM
*  PERFORM set_fs_field :
*    USING 'FIELDNAME' 'PONUM' '' CHANGING gs_fcat gt_fcat,
*    USING 'COL_POS' 'N' 'X' CHANGING gs_fcat gt_fcat.        " ← 추가!
*
*
*
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'PONUM' '' CHANGING gs_fcat2 gt_fcat2,
*                         USING 'NO_OUT' 'X' 'X' CHANGING gs_fcat2 gt_fcat2.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'ITNUM' '' CHANGING gs_fcat2 gt_fcat2,
*                         USING 'COLTEXT' '아이템 번호' 'X' CHANGING gs_fcat2 gt_fcat2.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'POMNR' '' CHANGING gs_fcat2 gt_fcat2,
*                         USING 'COLTEXT' '자재코드' 'X' CHANGING gs_fcat2 gt_fcat2.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'PNAME' 'X' CHANGING gs_fcat2 gt_fcat2.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'AMOUNT' '' CHANGING gs_fcat2 gt_fcat2,
*                         USING 'COLTEXT' '주문 수량' 'X' CHANGING gs_fcat2 gt_fcat2.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'POPRC' '' CHANGING gs_fcat2 gt_fcat2,
*                           USING 'COLTEXT' '주문 수량' 'X' CHANGING gs_fcat2 gt_fcat2.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'TOPRC' '' CHANGING gs_fcat2 gt_fcat2,
*                         USING 'COLTEXT' '총 가격' 'X' CHANGING gs_fcat2 gt_fcat2.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'PLANT' 'X' CHANGING gs_fcat2 gt_fcat2.
*
*
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'POPRC' '' CHANGING gs_fcat3 gt_fcat3,
*                             USING 'COLTEXT' '거래가격' 'X' CHANGING gs_fcat3 gt_fcat3.
*  PERFORM set_fs_field : USING 'FIELDNAME' 'TOPRC' '' CHANGING gs_fcat3 gt_fcat3,
*                             USING 'NO_OUT' 'X' 'X' CHANGING gs_fcat3 gt_fcat3.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'POPRC' '' CHANGING gs_fcat4 gt_fcat4,
*                             USING 'COLTEXT' '거래 가격' 'X' CHANGING gs_fcat4 gt_fcat4.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'TOPRC' '' CHANGING gs_fcat4 gt_fcat4,
*                             USING 'NO_OUT' 'X' 'X' CHANGING gs_fcat4 gt_fcat4.
*  PERFORM set_fs_field : USING 'FIELDNAME' 'PONUM' '' CHANGING gs_fcat4 gt_fcat4,
*                           USING 'NO_OUT' 'X' 'X' CHANGING gs_fcat4 gt_fcat4.
*
*  PERFORM set_fs_field : USING 'FIELDNAME' 'VNPRC' '' CHANGING gs_fcat5 gt_fcat5,
*                           USING 'COLTEXT' '자재원가' 'X' CHANGING gs_fcat5 gt_fcat5.
*  PERFORM set_fs_field : USING 'FIELDNAME' 'DEL' '' CHANGING gs_fcat5 gt_fcat5,
*                         USING 'COLTEXT' '삭제 여부' 'X' CHANGING gs_fcat5 gt_fcat5.

*  *  PERFORM set_fs_field :
*                      USING 'FIELDNAME' 'INDEX' '' CHANGING t_fcat t_fcat[],
*                         USING 'COL_POS' 'N' '' CHANGING t_fcat t_fcat[],
*                         USING 'COLTEXT' '번호'(f00) 'X' CHANGING t_fcat t_fcat[].


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_PO_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_po_data .

  DATA : ls_data LIKE LINE OF gt_data.

  LOOP AT gt_data INTO ls_data.
    PERFORM set_curr_status USING ls_data-ponum CHANGING ls_data ls_data-pstat ls_data-pstat_t.
    PERFORM get_emp_name USING ls_data-rgtor CHANGING ls_data-ename.
    PERFORM get_vender_name USING ls_data-venid CHANGING ls_data-vname.
    MODIFY gt_data FROM ls_data.
    CLEAR ls_data.
  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_VENDER_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_DATA_VENID  text
*      <--P_LS_DATA_VNAME  text
*----------------------------------------------------------------------*
FORM get_vender_name  USING    VALUE(p_venid) TYPE ztssvend-venid
                      CHANGING c_vname TYPE ztssvend-vname.

  SELECT SINGLE vname
    INTO c_vname
    FROM ztssvend
    WHERE venid = p_venid.
  IF sy-subrc <> 0.
    MESSAGE s999(zmcss) WITH '일치하는 정보가 존재하지 않습니다' DISPLAY LIKE 'W'.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FREE_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_ALV  text
*      -->P_GO_CON  text
*----------------------------------------------------------------------*
FORM free_alv  CHANGING co_con TYPE REF TO cl_gui_custom_container
                        co_alv TYPE REF TO cl_gui_alv_grid.

  CALL METHOD co_alv->free.
  CALL METHOD co_con->free.

  FREE : co_alv,
         co_con.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_REQUIRED_FIELDS_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSMM0103  text
*      -->P_ZSSSMM0104  text
*----------------------------------------------------------------------*
FORM check_required_fields_item  USING VALUE(p_item) TYPE zsssmm0104.

  IF p_item-pomnr IS INITIAL.
    MESSAGE e999(zmcss) WITH '자재코드는 필수값입니다!'.
    RETURN.
  ELSEIF p_item-amount IS INITIAL.
    MESSAGE e999(zmcss) WITH '수량은 필수값입니다!'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_CREATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*----------------------------------------------------------------------*
FORM init_create  CHANGING p_input TYPE zsssmm0103.

  p_input-curky = 'KRW'.
  p_input-dudat = sy-datum + 14.
  p_input-podat = sy-datum.
  gv_item_num  = 1.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_POP_INIT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM check_pop_init_data  CHANGING cv_subrc TYPE sy-subrc.


  DATA : lv_rowid     TYPE i,
         ls_data      LIKE LINE OF gt_data,
         ls_vend_info LIKE zsssmd0302.

  PERFORM check_pop USING go_alv CHANGING cv_subrc lv_rowid.
  IF cv_subrc = 0.
    " GR 여부 체크
    READ TABLE gt_data INDEX lv_rowid INTO ls_data.

    PERFORM check_ok_edit_by_gr USING ls_data-ponum CHANGING gv_subrc.
    IF cv_subrc = 1.
      RETURN.
    ENDIF.

    PERFORM init_data_edit USING lv_rowid CHANGING ls_data ls_vend_info zsssmm0103.

  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_DATA_EDIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_data_edit USING VALUE(p_id) TYPE i
                    CHANGING cs_data LIKE gs_data
                             cs_vend TYPE zsssmd0302
                             c_input TYPE zsssmm0103.

  MOVE-CORRESPONDING cs_data TO c_input.

  " 등록자 정보 구하기
  PERFORM get_emp_name USING c_input-rgtor CHANGING c_input-ename.
  c_input-rgdat = sy-datum.

  " 벤더 정보 구하기
  PERFORM get_vender_info USING  c_input-venid CHANGING cs_vend.
  c_input-vname = cs_vend-vname.

  " PO item 구하기
  PERFORM get_po_item_in_details.

  " 벤더에 따른 자재정보 가격구하기
  PERFORM get_price_info_by_vender.


  " 수정 시 원본 데이터 지정하기
  MOVE-CORRESPONDING c_input TO gs_cond_head.
  gs_cond_head-ename = c_input-ename.
  WRITE gs_cond_head-toprc  TO gs_cond_head-currency CURRENCY gs_cond_head-curky.

  gt_proto_item = gt_item.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_POP_INIT_DETAIL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM check_pop_init_detail_data  CHANGING cv_subrc TYPE sy-subrc.

  DATA : lv_rowid TYPE i,
         ls_data  LIKE LINE OF gt_data,
         ls_vend  LIKE zsssmd0302.

  PERFORM check_pop USING go_alv CHANGING gv_subrc lv_rowid.

  IF cv_subrc = 0.
    READ TABLE gt_data INDEX lv_rowid INTO ls_data.

    " 조회조건 정보
    MOVE-CORRESPONDING ls_data TO zsssmm0103.
    PERFORM init_data_detail CHANGING zsssmm0103 zsssmd0302.

  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_DATA_DETAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*      <--P_ZSSSMD0302  text
*----------------------------------------------------------------------*
FORM init_data_detail  CHANGING c_info TYPE zsssmm0103
                                c_ven_info TYPE zsssmd0302.


  DATA : ls_vend LIKE zsssmd0302,
         lv_name TYPE zsssmm0103-ename.

  c_info-curky = 'KRW'.

  " emp, 벤더, 아이템 정보가져오기
  PERFORM get_emp_name USING c_info-rgtor CHANGING c_info-ename.
  PERFORM get_po_item_in_details.
  PERFORM get_vender_info USING zsssmm0103-venid CHANGING ls_vend.
  c_info-vname = ls_vend-vname.

  " 탭스트립 조회조건 - 벤더 정보 가져오기
  MOVE-CORRESPONDING ls_vend TO c_ven_info.
  PERFORM get_emp_name USING c_ven_info-penid CHANGING lv_name.
  c_ven_info-penid_t = lv_name.

  " 탭스트립 벤더정보 조회하기
  PERFORM get_email_domain USING ls_vend-edom CHANGING c_ven_info-ednme.

  " 벤더에 따른 가격정보가져오기
  PERFORM get_price_info_by_vender.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ITEM_MAT_RECORD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_item_mat_record .
  PERFORM set_items_record.
  PERFORM get_mat_name.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEARCH_DATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM search_datas .

  PERFORM search_po_all_infos.
  PERFORM modify_po_data.

  DATA: lr_status TYPE RANGE OF i.

  " 선택된 상태 수집
  IF gv_chk1 = 'X'.  " 입고완료
    APPEND VALUE #( sign = 'I' option = 'EQ' low = 1 ) TO lr_status.
  ENDIF.

  IF gv_chk2 = 'X'.  " 입고중
    APPEND VALUE #( sign = 'I' option = 'EQ' low = 2 ) TO lr_status.
  ENDIF.

  IF gv_chk3 = 'X'.  " 미입고
    APPEND VALUE #( sign = 'I' option = 'EQ' low = 3 ) TO lr_status.
  ENDIF.

  " 필터링
  IF lr_status IS NOT INITIAL.
    DELETE gt_data WHERE pstat NOT IN lr_status.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ENTER_DATAS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM enter_datas .
  DATA : lv_name     TYPE zsssmm0103-ename,
         lv_ven_name TYPE ztssvend-vname.

  CLEAR : zsssmm0103-ename,
          zsssmm0103-vname.

  PERFORM get_emp_name USING zsssmm0103-rgtor CHANGING lv_name.
  zsssmm0103-ename = lv_name.
  PERFORM get_ven_name USING zsssmm0103-venid CHANGING lv_ven_name.
  zsssmm0103-vname = lv_ven_name.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_PO_CREATE_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_po_create_display .
  zsssmm0103-podat = sy-datum.
  zsssmm0103-dudat = sy-datum + 14.
  zsssmm0103-curky = 'KRW'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ITEM_NUM_TO_ONE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_item_num_to_one .
  gv_item_num = 1.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_POP_EDIT_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM check_pop_edit_item  USING VALUE(co_alv) TYPE REF TO cl_gui_alv_grid
                          CHANGING cv_subrc TYPE sy-subrc.

  DATA : lv_item_rowid TYPE i,
         ls_item       LIKE LINE OF gt_item.


  PERFORM check_pop USING co_alv CHANGING cv_subrc lv_item_rowid.
  IF cv_subrc = 0.
    READ TABLE gt_item INDEX lv_item_rowid INTO ls_item.

    MOVE-CORRESPONDING ls_item TO gs_cond_item.
    MOVE-CORRESPONDING gs_cond_item TO zsssmm0104.
  ENDIF.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_POP_DEL_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM check_pop_del_item   USING VALUE(co_alv) TYPE REF TO cl_gui_alv_grid
                          CHANGING cv_subrc TYPE sy-subrc.

  DATA : lv_item_rowid TYPE i,
         ls_del_item   LIKE LINE OF gt_item,
         l_data        TYPE ztsspoi.

  CLEAR  gs_item.

  PERFORM check_pop USING co_alv CHANGING cv_subrc lv_item_rowid.
  IF cv_subrc = 0.
    READ TABLE gt_item INDEX lv_item_rowid INTO ls_del_item.
    zsssmm0103-toprc = zsssmm0103-toprc - ls_del_item-toprc.
    gs_item = ls_del_item.
    DELETE gt_item INDEX lv_item_rowid.
    PERFORM renumber_item .
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  UPDATE_DELETE_INFOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GS_ITEM  text
*----------------------------------------------------------------------*
FORM update_delete_infos  USING    VALUE(ps_item) LIKE gs_item.

  UPDATE ztsspoi
  SET del = 'X'
  WHERE ponum = ps_item-ponum
     AND itnum = ps_item-itnum.
  IF sy-subrc = 0.
    COMMIT WORK.
  ELSE.
    ROLLBACK WORK.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat .

  DATA :
    lt_field_conf TYPE TABLE OF ty_field_conf,
    ls_conf       TYPE ty_field_conf,
    ls_fcat       TYPE lvc_s_fcat.


  PERFORM create_fcat USING 'ZSSSMM0102' 'GT_DATA' CHANGING gt_fcat.

  APPEND VALUE #(
    fieldname  = 'LIGHT'
    coltext    = TEXT-t01      " '상태' 등
    icon       = 'X'
    outputlen  = 3
    col_pos    = 1
    fix_column = 'X'
  ) TO gt_fcat.


  lt_field_conf = VALUE #(
  ( fieldname = 'PSTAT_T' )
  ( fieldname = 'PODAT' )
  ( fieldname = 'VNAME' )
  ( fieldname = 'DUDAT' )
  ( fieldname = 'STEXT' )
  ( fieldname = 'ENAME' )
  ( fieldname = 'PONUM' )
* ( fieldname = 'LIGHT' coltext = TEXT-t01  outputlen = 15 fix_column = 'X' )
* ( fieldname = 'VNAME' col_pos = 2 )  " 순서 변경
* ( fieldname = 'DUDAT' col_pos = 3 )  " 순서 변경
* ( fieldname = 'PODAT' col_pos = 4 )
* ( fieldname = 'ENAME' col_pos = 5 coltext = '담당자 이름' )
* ( fieldname = 'STEXT' col_pos = 6 )
* ( fieldname = 'PONUM' col_pos = 7 )
 ( fieldname = 'VENID' no_out = 'X' )
 ( fieldname = 'CURKY' no_out = 'X' )
 ( fieldname = 'RGTOR' no_out = 'X' )
 ( fieldname = 'RGDAT' no_out = 'X' )
 ( fieldname = 'PSTAT' no_out = 'X' )
).


  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_CURR_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LS_DATA_PONUM  text
*      <--P_LS_DATA_PSTAT_T  text
*----------------------------------------------------------------------*
FORM set_curr_status  USING    p_num TYPE ztsspoi-ponum
                      CHANGING  cs_data LIKE gs_data
                                c_flag TYPE c
                                c_stat TYPE zessetext.

  DATA : lt_po_sum LIKE TABLE OF gs_itamt,
         lt_gr_sum LIKE TABLE OF gs_itamt.

  PERFORM get_po_sum USING p_num CHANGING lt_po_sum.
  PERFORM get_gr_sum USING p_num CHANGING lt_gr_sum.

  PERFORM cal_grsum USING lt_po_sum lt_gr_sum CHANGING cs_data c_flag c_stat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_GR_SUM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LT_GR_SUM  text
*----------------------------------------------------------------------*
FORM get_gr_sum USING p_num TYPE ztsspoi-ponum
                CHANGING ct_gr_sum LIKE gt_itamt.

  DATA: lt_gr_raw TYPE TABLE OF ztssgri,
        ls_gr_raw LIKE LINE OF lt_gr_raw,
        ls_gr_sum LIKE gs_itamt.

  SELECT ponum itnum amount
    INTO CORRESPONDING FIELDS OF TABLE lt_gr_raw
    FROM ztssgri
    WHERE ponum = p_num.

*  IF sy-subrc <> 0. MESSAGE s999(zmcss) WITH '입고내역이 존재하지 않습니다!'. RETURN. ENDIF.

  LOOP AT lt_gr_raw INTO ls_gr_raw.
    ls_gr_sum-ponum  = ls_gr_raw-ponum.
    ls_gr_sum-itnum  = ls_gr_raw-itnum.
    ls_gr_sum-amount = ls_gr_raw-amount.
    COLLECT ls_gr_sum INTO ct_gr_sum.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CAL_GRSUM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_GR_SUM  text
*      <--P_C_STAT  text
*----------------------------------------------------------------------*
FORM cal_grsum  USING pt_po_sum LIKE gt_itamt
                      pt_gr_sum LIKE gt_itamt
                CHANGING  cs_data LIKE gs_data
                          c_flag TYPE c
                          c_stat TYPE zessetext.

  DATA : ls_gr_sum LIKE LINE OF pt_gr_sum,
         ls_po_sum LIKE gs_itamt,
         lv_comp   TYPE abap_bool,
         lv_incomp TYPE abap_bool.

  LOOP AT pt_po_sum INTO ls_po_sum.

    READ TABLE pt_gr_sum INTO ls_gr_sum WITH KEY ponum = ls_po_sum-ponum
                                                 itnum = ls_po_sum-itnum.

    IF sy-subrc <> 0.
      " 미입고
      lv_incomp = abap_true.
    ELSEIF ls_gr_sum-amount < ls_po_sum-amount.
      " 입고중
      lv_comp = abap_true.
    ELSE.
      " 입고완료
      lv_comp = abap_true.
    ENDIF.
  ENDLOOP.

  " 최종 상태 결정
  IF lv_comp = abap_true AND lv_incomp = abap_true.
*    cs_data-light = '2'.
    cs_data-light = '@5D@'.
    c_flag = 2.
    c_stat = '입고중'.  " 섞여있음
  ELSEIF lv_comp = abap_true.
    cs_data-light = '@5B@'.
*    cs_data-light = '3'.
    c_flag = 1.
    c_stat = '입고완료'.  " 모두 완료
  ELSE.
    cs_data-light = '@5C@'.
*    cs_data-light = '1'.
    c_flag = 3.
    c_stat = '미입고'.  " 모두 미입고 또는 입고중
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PO_SUM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_NUM  text
*      <--P_LT_PO_SUM  text
*----------------------------------------------------------------------*
FORM get_po_sum  USING    p_num TYPE ztsspoh-ponum
                 CHANGING ct_po_sum LIKE gt_itamt.


  DATA: lt_po_raw TYPE STANDARD TABLE OF ztsspoi,
        ls_po_raw LIKE LINE OF lt_po_raw,
        ls_po_sum LIKE gs_itamt.

  SELECT ponum itnum amount
    INTO CORRESPONDING FIELDS OF TABLE lt_po_raw
    FROM ztsspoi
    WHERE ponum = p_num.

  IF sy-subrc <> 0. RETURN. ENDIF.

  LOOP AT lt_po_raw INTO ls_po_raw.
    ls_po_sum-ponum  = ls_po_raw-ponum.
    ls_po_sum-itnum  = ls_po_raw-itnum.
    ls_po_sum-amount = ls_po_raw-amount.
    COLLECT ls_po_sum INTO ct_po_sum.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_2685   text
*      -->P_2686   text
*      <--P_GT_FCAT  text
*----------------------------------------------------------------------*
FORM create_fcat  USING    VALUE(pv_str) TYPE dd02l-tabname
                           VALUE(pv_itab) TYPE dd02l-tabname
                  CHANGING ct_fcat TYPE lvc_t_fcat.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name   = pv_str
      i_internal_tabname = pv_itab
    CHANGING
      ct_fieldcat        = ct_fcat
    EXCEPTIONS
      OTHERS             = 1.

  IF sy-subrc <> 0.
    MESSAGE a100(zmcss) WITH sy-uname. "시스템 오류 : &에게 문의하세요!
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELD_CATATLOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LT_FIELD_CONF  text
*      <--P_GT_FCAT  text
*----------------------------------------------------------------------*
FORM build_field_catatlog  USING    pt_field_conf TYPE ty_t_field_conf
                           CHANGING ct_fcat       TYPE lvc_t_fcat.


  DATA: ls_conf TYPE ty_field_conf,
        ls_fcat TYPE lvc_s_fcat,
        lv_pos  TYPE i VALUE 0.

  FIELD-SYMBOLS: <fs_fcat> TYPE lvc_s_fcat.

  LOOP AT pt_field_conf INTO ls_conf.
    " 기존 필드 찾기
    READ TABLE ct_fcat ASSIGNING <fs_fcat> WITH KEY fieldname = ls_conf-fieldname.
    IF sy-subrc = 0.
      " 찾으면 수정하기
      MOVE-CORRESPONDING ls_conf TO <fs_fcat>.
      IF ls_conf-col_pos > 0.
        <fs_fcat>-col_pos = ls_conf-col_pos.
      ENDIF.
    ELSE.
      " 존재하지않으면 새로 추가하기
      CLEAR ls_fcat.
      MOVE-CORRESPONDING ls_conf TO ls_fcat.
      IF ls_conf-col_pos > 0.
        ls_fcat-col_pos = ls_conf-col_pos.
      ENDIF.
      APPEND ls_fcat TO ct_fcat.
    ENDIF.
    lv_pos = lv_pos + 1.
    <fs_fcat>-col_pos = lv_pos + 1.
  ENDLOOP.
  UNASSIGN <fs_fcat>.


  LOOP AT ct_fcat INTO DATA(ls_fcat2).
    IF ls_fcat2-fieldname = 'TOPRC'.
      ls_fcat2-do_sum = 'X'.
      MODIFY ct_fcat FROM ls_fcat2 TRANSPORTING do_sum.
    ENDIF.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_EXCLUDE_BTN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_exclude_btn .

  CLEAR gt_exclude.

  DATA : ls_excl TYPE ui_func,
         lt_excl TYPE ui_functions.

  ls_excl = cl_gui_alv_grid=>mc_fc_excl_all.
  APPEND ls_excl TO gt_exclude.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_TAB_FDP_WITH_EXCLUDE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0055   text
*      -->P_GS_LAYO2  text
*      -->P_GT_EXCLUDE  text
*      <--P_GT_ITEM  text
*      <--P_GT_FCAT2  text
*      <--P_GT_SORT2  text
*      <--P_GO_ALV2  text
*----------------------------------------------------------------------*
FORM set_tab_fdp_with_exclude  USING    VALUE(p_structure) TYPE dd02l-tabname
                                        VALUE(ps_layout) TYPE lvc_s_layo
                                        VALUE(pt_exclude) TYPE ui_functions
                               CHANGING ct_outtab TYPE STANDARD TABLE
                                        ct_fcat TYPE lvc_t_fcat
                                        ct_sort TYPE lvc_t_sort
                                        co_alv TYPE REF TO cl_gui_alv_grid.

  co_alv->set_table_for_first_display(
     EXPORTING
       i_structure_name = p_structure
       is_layout = ps_layout
       it_toolbar_excluding = pt_exclude
     CHANGING
       it_outtab = ct_outtab
       it_fieldcatalog = ct_fcat
       it_sort = ct_sort
     EXCEPTIONS
       invalid_parameter_combination = 1
       program_error = 23
       too_many_lines = 3
       OTHERS = 4
   ).
  IF sy-subrc <> 0.
    MESSAGE a100(zmcss) WITH sy-uname. " 시스템 오류입니다. 담당자 &에게 문의해주세요!
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_ALV_0500
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_alv_0500 .
  IF go_con7 IS INITIAL.
    PERFORM create_alv USING 'CON_C' CHANGING go_con7 go_alv7.
    PERFORM req_event_0500.
    PERFORM set_tab_fdp_with_exclude USING 'ZSSSMM0104' gs_layo7 gt_exclude CHANGING gt_item2  gt_fcat7 gt_sort go_alv7.
  ELSE.

    PERFORM refresh_table_display CHANGING go_alv7.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT7
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat7 .
  DATA :
    lt_field_conf TYPE TABLE OF ty_field_conf,
    ls_conf       TYPE ty_field_conf,
    ls_fcat       TYPE lvc_s_fcat.


  PERFORM create_fcat USING 'ZSSSMM0104' 'GT_ITEM' CHANGING gt_fcat7.


  lt_field_conf = VALUE #(
  ( fieldname = 'PONUM' no_out = 'X' )
  ( fieldname = 'ITNUM' lzero = 'X' outputlen = 3 col_pos = 1  )
  ( fieldname = 'POMNR' col_pos = 2 )
  ( fieldname = 'PNAME' col_pos = 3 )
  ( fieldname = 'AMOUNT' col_pos = 4 )
  ( fieldname = 'MEINS' col_pos = 5 )
  ( fieldname = 'TOPRC' col_pos = 6  coltext = '구매가격' )
  ( fieldname = 'POPRC' no_out = 'X' )
  ( fieldname = 'CURKY' col_pos = 7 )
  ( fieldname = 'PLANT' col_pos = 8 no_out = 'X' )
  ( fieldname = 'PPNME' col_pos = 9 )
  ( fieldname = 'DEL' no_out = 'X' )
).


  PERFORM build_field_catatlog USING lt_field_conf CHANGING gt_fcat7.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  HANDLE_TOOLBAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_OBJECT  text
*      -->P_SENDER  text
*----------------------------------------------------------------------*
FORM handle_toolbar  USING  pcl_toolbar TYPE REF TO cl_alv_event_toolbar_set
                            p_sender TYPE REF TO cl_gui_alv_grid.

  DATA ls_toolbar TYPE stb_button.

  CASE p_sender.
    WHEN go_alv7.
      PERFORM add_toolbar_button USING 'I_ADD' TEXT-b01 icon_workflow_activity CHANGING pcl_toolbar.
      PERFORM add_toolbar_button USING 'I_EDIT' TEXT-b02 icon_workflow_activity CHANGING pcl_toolbar.
      PERFORM add_toolbar_button USING 'I_DEL' TEXT-b03 icon_incomplete CHANGING pcl_toolbar.
    WHEN OTHERS.
*    WHEN go_alv_po_items.
*      PERFORM add_toolbar_button USING 'I_DEL' TEXT-b02 icon_incomplete CHANGING pcl_toolbar.
*      PERFORM add_toolbar_button USING 'I_ALL_DEL' TEXT-b03 icon_system_modus_delete CHANGING pcl_toolbar.
*    WHEN go_alv_po_confirm.
*      PERFORM add_toolbar_button USING 'I_GR' TEXT-b04 icon_check CHANGING pcl_toolbar.
*      PERFORM add_toolbar_button USING 'I_CON_DEL' TEXT-b02 icon_incomplete CHANGING pcl_toolbar.
*    WHEN go_alv_gr_list.
*      PERFORM add_toolbar_button USING 'I_DETAIL' TEXT-b06 icon_check CHANGING pcl_toolbar.
*    WHEN go_alv_editgr.
**      PERFORM add_toolbar_button USING 'I_ADD' TEXT-b01 icon_workflow_activity CHANGING pcl_toolbar.
*      PERFORM add_toolbar_button USING 'I_EDIT' TEXT-b05 icon_workflow_activity CHANGING pcl_toolbar.
*      PERFORM add_toolbar_button USING 'I_EDIT_DEL' TEXT-b02 icon_incomplete CHANGING pcl_toolbar.
*      PERFORM add_toolbar_button USING 'I_EDIT_ALL_DEL' TEXT-b03 icon_system_modus_delete CHANGING pcl_toolbar.
  ENDCASE.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ADD_TOOLBAR_BUTTON
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_3639   text
*      -->P_TEXT_B01  text
*      -->P_ICON_WORKFLOW_ACTIVITY  text
*      <--P_PCL_TOOLBAR  text
*----------------------------------------------------------------------*
FORM add_toolbar_button  USING   pv_func     TYPE ui_func
                                 pv_text     TYPE text40
                                 pv_icon     TYPE icon_d
                        CHANGING pcl_toolbar TYPE REF TO cl_alv_event_toolbar_set.

  DATA: ls_toolbar TYPE stb_button.

  ls_toolbar-function  = pv_func.
  ls_toolbar-butn_type = 0.
  ls_toolbar-text      = pv_text.
  ls_toolbar-icon      = pv_icon.
  ls_toolbar-quickinfo = pv_text.

  APPEND ls_toolbar TO pcl_toolbar->mt_toolbar.

  PERFORM add_toolbar_sep CHANGING pcl_toolbar.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ADD_TOOLBAR_SEP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_PCL_TOOLBAR  text
*----------------------------------------------------------------------*
FORM add_toolbar_sep  CHANGING  c_toolbar TYPE REF TO cl_alv_event_toolbar_set.

  DATA: ls_toolbar TYPE stb_button.

  ls_toolbar-butn_type = 3.
  APPEND ls_toolbar TO c_toolbar->mt_toolbar.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  HANDLE_USER_COMMAND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_UCOMM  text
*----------------------------------------------------------------------*
FORM handle_user_command  USING    pv_ucomm TYPE sy-ucomm.


  CASE pv_ucomm.
    WHEN 'I_ADD'.
      PERFORM handle_add_item.
    WHEN 'I_EDIT'.
      PERFORM handle_edit_item.
    WHEN 'I_DEL'.
      PERFORM handle_delete_item.
  ENDCASE.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_TABLE_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GO_ALV7  text
*----------------------------------------------------------------------*
FORM refresh_table_display  CHANGING co_alv TYPE REF TO cl_gui_alv_grid.

  co_alv->refresh_table_display(
is_stable = VALUE #( row = 'X' col = 'X' )
        i_soft_refresh = ' '  " ← 하드 리프레시!
    ).
  IF sy-subrc <> 0.
    MESSAGE a100(zmcss) WITH sy-uname. " 시스템 오류 : 담당자 &에게 문의하세요!
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REQ_EVENT_0500
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM req_event_0500 .
  SET HANDLER :     lcl_event_handler=>handle_user_command FOR go_alv7,
                    lcl_event_handler=>handle_toolbar FOR go_alv7,
                    lcl_event_handler=>on_button_click for go_alv7.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  HANDLE_ADD_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM handle_add_item .
  CLEAR : zsssmm0104-pomnr,
               zsssmm0104-amount,
               zsssmm0104-poprc,
               zsssmm0104-toprc,
               zsssmm0104-pname.
  zsssmm0104-itnum = gv_item_num.
  IF zsssmm0103-venid IS NOT INITIAL.
*        CALL SCREEN 210 STARTING AT 5 10 ENDING AT 80 25.
    CALL SCREEN 210 STARTING AT 10 10.
    zsssmm0103-toprc = gv_sum.
    cl_gui_cfw=>set_new_ok_code(
      EXPORTING
        new_code =   'ENTER'
*      IMPORTING
*        rc       =     " Return code
    ).
  ELSE.
    MESSAGE i999(zmcss) WITH '벤더코드를 선택해주세요'.
  ENDIF.
  CLEAR : zsssmm0104-pomnr,
          zsssmm0104-amount,
          zsssmm0104-poprc,
          zsssmm0104-toprc,
          zsssmm0104-pname.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  HANDLE_EDIT_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM handle_edit_item .
*  PERFORM check_pop_edit_item USING go_alv7 CHANGING gv_subrc.
  PERFORM check_pop_edit_item2 USING go_alv7 CHANGING gv_subrc.
  IF gv_subrc = 0.
    CALL SCREEN 220 STARTING AT 5 5 ENDING AT 80 25.
  ENDIF.
  CLEAR : zsssmm0104-pomnr,
          zsssmm0104-amount,
          zsssmm0104-poprc,
          zsssmm0104-toprc,
          zsssmm0104-pname.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  HANDLE_DELETE_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM handle_delete_item .

*  PERFORM check_pop_del_item USING go_alv7 CHANGING gv_subrc.
  PERFORM check_pop_del_item2 USING go_alv7 CHANGING gv_subrc.
  PERFORM refresh_table_display CHANGING go_alv7.
*  perform
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SAVE_PO_ITEM2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*      <--P_ZSSSMM0104  text
*----------------------------------------------------------------------*
FORM save_po_item2  CHANGING c_header TYPE zsssmm0103
                           c_item TYPE zsssmm0104.

  CLEAR gv_sum.
  DATA : ls_item2 LIKE LINE OF gt_item,
         lv_sum   LIKE zsssmm0104-toprc.

  c_item-toprc = c_item-poprc * c_item-amount.

  gv_item_num = gv_item_num + 1.

  MOVE-CORRESPONDING c_item TO ls_item2.
  APPEND ls_item2 TO gt_item2.

  LOOP AT gt_item2 INTO ls_item2.
    lv_sum = lv_sum + ls_item2-toprc.
  ENDLOOP.

  c_header-toprc = lv_sum.
  gv_sum = lv_sum.
  zsssmm0103-toprc = gv_sum.
  zsssmm0104-toprc = gv_sum.

  PERFORM get_plant_name.

  DATA : lv_name TYPE ztssplant-pname.
  SELECT SINGLE pname
    INTO lv_name
    FROM ztssplant
    WHERE plant = zsssmm0104-plant.
  LOOP AT gt_item2 ASSIGNING FIELD-SYMBOL(<fs_data>).
    <fs_data>-ppnme = lv_name.
  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EDIT_PO_ITEM2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_ZSSSMM0103  text
*      <--P_ZSSSMM0104  text
*----------------------------------------------------------------------*
FORM edit_po_item2  CHANGING c_header TYPE zsssmm0103
                            c_item TYPE zsssmm0104.

  DATA : ls_item    LIKE LINE OF gt_item,
         lv_temp_id TYPE n LENGTH 3,
         lv_sum     LIKE zsssmm0104-toprc.


  lv_temp_id = c_item-itnum.
  c_item-toprc = c_item-poprc * c_item-amount.
  MOVE-CORRESPONDING c_item TO ls_item.

  LOOP AT gt_item2 INTO ls_item.
    IF lv_temp_id = ls_item-itnum.
      MOVE-CORRESPONDING c_item TO ls_item.
      MODIFY gt_item2 FROM ls_item.
*      EXIT.
    ENDIF.
  ENDLOOP.

  LOOP AT gt_item2 INTO ls_item.
    lv_sum = lv_sum + ls_item-toprc.
  ENDLOOP.

  c_header-toprc = lv_sum.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_POP_EDIT_ITEM2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_ALV7  text
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM check_pop_edit_item2  USING VALUE(co_alv) TYPE REF TO cl_gui_alv_grid
                          CHANGING cv_subrc TYPE sy-subrc.

  DATA : lv_item_rowid TYPE i,
         ls_item       LIKE LINE OF gt_item.


  PERFORM check_pop USING co_alv CHANGING cv_subrc lv_item_rowid.
  IF cv_subrc = 0.
    READ TABLE gt_item2 INDEX lv_item_rowid INTO ls_item.

    MOVE-CORRESPONDING ls_item TO gs_cond_item.
    MOVE-CORRESPONDING gs_cond_item TO zsssmm0104.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_POP_DEL_ITEM2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_ALV7  text
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM check_pop_del_item2   USING VALUE(co_alv) TYPE REF TO cl_gui_alv_grid
                          CHANGING cv_subrc TYPE sy-subrc.

  DATA : lv_item_rowid TYPE i,
         ls_del_item   LIKE LINE OF gt_item,
         l_data        TYPE ztsspoi.

  CLEAR  gs_item.

  PERFORM check_pop USING co_alv CHANGING cv_subrc lv_item_rowid.
  IF cv_subrc = 0.
    READ TABLE gt_item2 INDEX lv_item_rowid INTO ls_del_item.
    zsssmm0103-toprc = zsssmm0103-toprc - ls_del_item-toprc.
    gs_item = ls_del_item.
    DELETE gt_item2 INDEX lv_item_rowid.
*    PERFORM renumber_item .
    PERFORM renumber_item2 .
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  RENUMBER_ITEM2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM renumber_item2 .

  DATA : lv_cnt(3) TYPE n.

  lv_cnt = 0.

  LOOP AT gt_item2 ASSIGNING FIELD-SYMBOL(<fs_item>).
    lv_cnt = lv_cnt + 1.
    <fs_item>-itnum = lv_cnt.
  ENDLOOP.

  gv_item_num = lv_cnt + 1.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CAL_TOTAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM cal_total .
  DATA: ls_item LIKE LINE OF gt_item2,
        lv_sum  TYPE zsssmm0104-toprc.

  CLEAR lv_sum.
  LOOP AT gt_item2 INTO ls_item.
    lv_sum = lv_sum + ls_item-toprc.
  ENDLOOP.

  zsssmm0103-toprc = lv_sum.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_PURCHASE_ORDER2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM insert_purchase_order2 CHANGING cv_subrc TYPE sy-subrc.

  CLEAR cv_subrc.
  DATA : lv_cnt TYPE i.

  DESCRIBE TABLE gt_item2 LINES lv_cnt.
  IF lv_cnt = 0.
    MESSAGE i999(zmcss) WITH '구매오더 아이템이 있어야 발주 가능합니다!'.
*    cv_subrc = 4.
    RETURN.
  ENDIF.

  PERFORM insert_po_header.
  PERFORM insert_po_item.

  IF sy-subrc = 0.
    COMMIT WORK.
*    cv_subrc = sy-subrc.
    MESSAGE s999(zmcss) WITH '구매오더가 완료되었습니다!'.
  ELSE.
    ROLLBACK WORK.
*    cv_subrc = sy-subrc.
    MESSAGE s999(zmcss) WITH '구매오더가 실패하였습니다. 다시 확인해주세요'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_TEXT_EDIT_0510
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0286   text
*      -->P_GO_MOD  text
*      -->P_GO_EDIT  text
*----------------------------------------------------------------------*
FORM set_text_edit_0510  USING VALUE(p_con_name)
                              po_con TYPE REF TO cl_gui_custom_container
                              po_edit TYPE REF TO cl_gui_textedit  .
  IF po_con IS INITIAL.
    CREATE OBJECT po_con
      EXPORTING
        container_name = p_con_name.
  ENDIF.

  IF po_edit IS INITIAL.
    CREATE OBJECT po_edit
      EXPORTING
        max_number_chars = 60
        parent           = po_con.

  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CLEAR_TEXT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GO_EDIT  text
*----------------------------------------------------------------------*
FORM clear_text  USING po_edit TYPE REF TO cl_gui_textedit.

  DATA: lt_empty TYPE soli_tab.

  IF po_edit IS BOUND.
    CALL METHOD po_edit->set_text_as_r3table
      EXPORTING
        table = lt_empty.
  ENDIF.

  LEAVE TO SCREEN 0.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_TEXT_EDIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_EDIT  text
*      -->P_GO_EDIT  text
*----------------------------------------------------------------------*
FORM set_text_edit  TABLES pt_edit TYPE tt_text
                   USING po_edit TYPE REF TO cl_gui_textedit  .

  CALL METHOD po_edit->get_text_as_r3table
    IMPORTING
      table  = pt_edit[]
    EXCEPTIONS
      OTHERS = 1.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CONFIRM_CONTENTS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM confirm_contents .
  DATA lv_answer TYPE c.

  PERFORM popup_to_confirm
    USING    '발주최종확인'                " 제목
             '정말 발주하시겠습니까?'       " 질문
             'Yes'                         " 버튼1 텍스트
             'ICON_CHECKED'                " 버튼1 아이콘
             'No'                          " 버튼2 텍스트
             'ICON_INCOMPLETE'             " 버튼2 아이콘
             '누르면 발주가 완료됩니다'     " 버튼1 퀵인포
             '누르면 발주가 취소됩니다'     " 버튼2 퀵인포
    CHANGING lv_answer.



  CASE lv_answer.
    WHEN '1'.
*      MESSAGE i999(zmcss) with '입고완료!'.
      PERFORM insert_data.
    WHEN '2'.
    WHEN '3'.


  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_data .

  PERFORM insert_po_header2.

  PERFORM insert_po_item2.

  IF sy-subrc = 0.
    COMMIT WORK.
*    cv_subrc = sy-subrc.
    MESSAGE s999(zmcss) WITH '구매오더가 완료되었습니다!'.
  ELSE.
    ROLLBACK WORK.
*    cv_subrc = sy-subrc.
    MESSAGE s999(zmcss) WITH '구매오더가 실패하였습니다. 다시 확인해주세요'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_PO_HEADER2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_po_header2 .

  DATA : ls_data LIKE ztsspoh.

  PERFORM set_number_range.

  ls_data-ponum = gv_po_num.
  ls_data-podat = zsssmm0103-podat.
  ls_data-dudat = zsssmm0103-dudat.
  ls_data-rgtor = zsssmm0103-rgtor.
  ls_data-curky = zsssmm0103-curky.
  ls_data-rgdat = sy-datum.
  ls_data-stext = gv_text.
  ls_data-venid = zsssmm0103-venid.

  INSERT ztsspoh FROM ls_data.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_PO_ITEM2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_po_item2 .
  DATA : ls_item_data LIKE ztsspoi,
         ls_item      LIKE LINE OF gt_item.

  LOOP AT gt_item2 INTO ls_item.

    ls_item_data-ponum = gv_po_num.
    ls_item_data-itnum = ls_item-itnum.
    ls_item_data-pomnr = ls_item-pomnr.
    ls_item_data-amount = ls_item-amount.
    ls_item_data-meins = ls_item-meins.
    ls_item_data-plant = ls_item-plant.
    ls_item_data-poprc = ls_item-toprc.
    ls_item_data-curky = ls_item-curky.
    INSERT ztsspoi FROM ls_item_data.

    CLEAR : ls_item_data,
            ls_item.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  POPUP_TO_CONFIRM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_4364   text
*      -->P_4365   text
*      -->P_4366   text
*      -->P_4367   text
*      -->P_4368   text
*      -->P_4369   text
*      -->P_4370   text
*      -->P_4371   text
*      <--P_LV_ANSWER  text
*----------------------------------------------------------------------*
FORM popup_to_confirm   USING     iv_title
                                  iv_question
                                  iv_btn1_text
                                  iv_btn1_icon
                                  iv_btn2_text
                                  iv_btn2_icon
                                  iv_info1
                                  iv_info2
                        CHANGING cv_answer    TYPE c.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar              = iv_title
      text_question         = iv_question
      text_button_1         = iv_btn1_text
      icon_button_1         = iv_btn1_icon
      text_button_2         = iv_btn2_text
      icon_button_2         = iv_btn2_icon
      default_button        = '1'
      display_cancel_button = 'X'
      iv_quickinfo_button_1 = iv_info1
      iv_quickinfo_button_2 = iv_info2
    IMPORTING
      answer                = cv_answer
    EXCEPTIONS
      text_not_found        = 1
      OTHERS                = 2.

  IF sy-subrc <> 0.
    cv_answer = 'A'.  " Cancel 처리
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CLEAR_EDITOR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM clear_editor .

  CLEAR: gv_text,
       gt_edit,
       gt_item2.
  PERFORM refresh_table_display CHANGING go_alv7.
  PERFORM clear_text USING go_edit.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_PLANT_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_plant_name .

  DATA : lv_name.
  SELECT SINGLE pname
    INTO lv_name
    FROM ztssplant
    WHERE plant = zsssmm0104-plant.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_SORT9  text
*----------------------------------------------------------------------*
FORM set_sort  TABLES   pt_sort STRUCTURE lvc_s_sort.

  SORT gt_data BY podat DESCENDING.


  DATA: ls_sort TYPE lvc_s_sort.

  CLEAR ls_sort.
  ls_sort-fieldname = 'PODAT'.      "정렬할 필드명
  ls_sort-spos      = 1.             "정렬 순서 (1,2,3...)
  ls_sort-down      = 'X'.           "오름차순 (X) / 내림차순 (공백)
  ls_sort-subtot    = 'X'.           "소계 표시 (옵션)
  APPEND ls_sort TO pt_sort.

  CLEAR ls_sort.
  ls_sort-fieldname = 'VENID'.      "정렬할 필드명
  ls_sort-spos      = 2.             "정렬 순서 (1,2,3...)
  ls_sort-up        = 'X'.           "오름차순 (X) / 내림차순 (공백)
  ls_sort-subtot    = 'X'.           "소계 표시 (옵션)
  APPEND ls_sort TO pt_sort.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
