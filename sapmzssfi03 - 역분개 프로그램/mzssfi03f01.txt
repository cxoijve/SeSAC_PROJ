*&---------------------------------------------------------------------*
*&      Form  SET_LAYO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_LAYO .
  CLEAR GS_LAYO.

  GS_LAYO-CWIDTH_OPT = 'X'.
  GS_LAYO-ZEBRA = 'X'.
  GS_LAYO-SEL_MODE = 'A'.

  GS_LAYO-EXCP_FNAME = 'LIGHT'.
  GS_LAYO-EXCP_LED = 'X'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT .

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT .

  CLEAR: GT_FCAT.

  PERFORM FCAT USING:
        'JENUM' '3' '전표번호',
        'FYEAR' '4' '회계연도',
        'IVNUM' '5' '송장 문서 번호',
        'IVDAT' '6' '송장 검증일',
        'TOPRC' '7' '총 금액',
        'STEXT' '8' '비고',
        'CURKY' '9' '통화 키',
        'RGDAT' '10' '등록일',
        'RGTOR' '11' '등록자',
        'APNUM' '1' '지급 전표번호',
        'APFYR' '2' '지급 회계연도'.

  CLEAR GS_FCAT.

  LOOP AT GT_FCAT INTO GS_FCAT.
    IF GS_FCAT-FIELDNAME = 'TOPRC'.
      GS_FCAT-CFIELDNAME = 'CURKY'.
    ENDIF.

    MODIFY GT_FCAT FROM GS_FCAT.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0025   text
*      -->P_0026   text
*      -->P_0027   text
*----------------------------------------------------------------------*
FORM FCAT  USING    VALUE(P_FIELDNAME)
                    VALUE(P_COLPOS)
                    VALUE(P_COLTEXT).

  DATA LS_FCAT LIKE LINE OF GT_FCAT.

  LS_FCAT-FIELDNAME = P_FIELDNAME.
  LS_FCAT-COL_POS = P_COLPOS.
  LS_FCAT-COLTEXT = P_COLTEXT.
  APPEND LS_FCAT TO GT_FCAT.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_INIT .

  ZSSSFI0301-RRSON_T = '04'.

  ZSSSFI0301-RGDAT_T = SY-DATUM+0(6).  " 전기기간

  DATA: LV_DATE_START TYPE SY-DATUM,
        LV_LAST_DATE  TYPE SY-DATUM.

  " 전기기간(YYYYMM)에서 '01'일자를 붙여서 날짜 생성
  CONCATENATE ZSSSFI0301-RGDAT_T '01' INTO LV_DATE_START.

  " 해당 월의 마지막 일자를 구하는 함수 호출
  CALL FUNCTION 'RP_LAST_DAY_OF_MONTHS'
    EXPORTING
      DAY_IN            = LV_DATE_START
    IMPORTING
      LAST_DAY_OF_MONTH = LV_LAST_DATE.

  " 결과를 전기일 필드에 대입
  ZSSSFI0301-RGDAT = LV_LAST_DATE.


  PERFORM SET_SCREEN_0200.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_ALV_0200 .

  " 객체가 있을 시 미생성
  IF GO_CON IS NOT INITIAL.
    RETURN.
  ENDIF.

  CREATE OBJECT GO_CON
    EXPORTING
      CONTAINER_NAME              = 'CON'
    EXCEPTIONS
      CNTL_ERROR                  = 1
      CNTL_SYSTEM_ERROR           = 2
      CREATE_ERROR                = 3
      LIFETIME_ERROR              = 4
      LIFETIME_DYNPRO_DYNPRO_LINK = 5
      OTHERS                      = 6.
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT GO_ALV
    EXPORTING
      I_PARENT          = GO_CON
    EXCEPTIONS
      ERROR_CNTL_CREATE = 1
      ERROR_CNTL_INIT   = 2
      ERROR_CNTL_LINK   = 3
      ERROR_DP_CREATE   = 4
      OTHERS            = 5.
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  PERFORM SET_EVENT_0200.
*  "Event Register
*  PERFORM REQ_EVENT_FOR_ALV.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT_0200 .

  CLEAR: GT_FCAT.

  PERFORM FCAT USING:
        'LIGHT' '1' '역분개 여부',
        'JTYPE_T' '2' '전표 유형',
        'REV' '3' '역분개 여부',
        'JTYPE' '4' '전표 유형 코드',
        'FYEAR' '5' '기존 회계연도',
        'RGDAT' '6' '기존 전기일',
        'JENUM' '7' '기존 전표번호',
        'STEXT' '8' '비고',
        'TOPRC' '9' '총 금액',
        'CURKY' '10' '통화키',
        'RGTOR_T' '11' '등록자명',
        'RGTOR' '12' '등록자 코드',
        'RRSON' '13' '역분개 사유',
        'RJNUM' '14' '역분개 전표번호'.

  CLEAR GS_FCAT.

  LOOP AT GT_FCAT INTO GS_FCAT.

    IF GS_FCAT-FIELDNAME = 'JENUM'.
      GS_FCAT-HOTSPOT = 'X'. " 핫스팟

    ELSEIF GS_FCAT-FIELDNAME = 'RRSON'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'RJNUM'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'JTYPE'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'RGTOR'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'REV'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'RGTOR_T'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'TOPRC'.
      GS_FCAT-CFIELDNAME = 'CURKY'.


    ENDIF.

    MODIFY GT_FCAT FROM GS_FCAT.

  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_EVENT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_EVENT_0200 .
  CREATE OBJECT GO_EVENT.

  SET HANDLER:
  GO_EVENT->DATA_CHANGED FOR GO_ALV,
  GO_EVENT->HANDLE_HOTSPOT_CLICK FOR GO_ALV.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EVENT_OPTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM EVENT_OPTION_0200 .

  " Enter 눌렀을 때
  GO_ALV->REGISTER_EDIT_EVENT(
    EXPORTING
      I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER
   ).

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_0200 .

  CALL METHOD GO_ALV->SET_TABLE_FOR_FIRST_DISPLAY
    EXPORTING
      IS_LAYOUT            = GS_LAYO
      IT_TOOLBAR_EXCLUDING = GT_TOOLBAR
    CHANGING
      IT_OUTTAB            = GT_HDATA
      IT_FIELDCATALOG      = GT_FCAT
      IT_SORT              = GT_SORT.
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT_0200 .

  CLEAR: GT_SORT, GS_SORT.

  GS_SORT-SPOS = '1'.
  GS_SORT-FIELDNAME = 'FYEAR'.
  GS_SORT-DOWN = 'X'.
  APPEND GS_SORT TO GT_SORT.

  CLEAR GS_SORT.
  GS_SORT-SPOS = '2'.
  GS_SORT-FIELDNAME = 'JENUM'.
  GS_SORT-DOWN = 'X'.
  APPEND GS_SORT TO GT_SORT.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_ALV_0300 .

  " 객체가 있을 시 미생성
  IF GO_CON2 IS NOT INITIAL.
    RETURN.
  ENDIF.

  CREATE OBJECT GO_CON2
    EXPORTING
      CONTAINER_NAME              = 'CON2'
    EXCEPTIONS
      CNTL_ERROR                  = 1
      CNTL_SYSTEM_ERROR           = 2
      CREATE_ERROR                = 3
      LIFETIME_ERROR              = 4
      LIFETIME_DYNPRO_DYNPRO_LINK = 5
      OTHERS                      = 6.
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT GO_ALV2
    EXPORTING
      I_PARENT          = GO_CON2
    EXCEPTIONS
      ERROR_CNTL_CREATE = 1
      ERROR_CNTL_INIT   = 2
      ERROR_CNTL_LINK   = 3
      ERROR_DP_CREATE   = 4
      OTHERS            = 5.
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.


  PERFORM SET_EVENT_0300.
*  "Event Register
*  PERFORM REQ_EVENT_FOR_ALV.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT_0300 .

  CLEAR: GT_SORT2, GS_SORT2.

  GS_SORT2-SPOS = '1'.
  GS_SORT2-FIELDNAME = 'FYEAR'.
  GS_SORT2-DOWN = 'X'.
  APPEND GS_SORT2 TO GT_SORT2.


  CLEAR GS_SORT2.
  GS_SORT2-SPOS = '2'.
  GS_SORT2-FIELDNAME = 'RJNUM'.
  GS_SORT2-DOWN = 'X'.
  APPEND GS_SORT2 TO GT_SORT2.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT_0300 .

  CLEAR: GT_FCAT.

  PERFORM FCAT USING:
        'REV' '2' '역분개 여부',
        'JTYPE' '3' '전표 유형 코드',
        'JTYPE_T' '4' '전표 유형',
        'FYEAR' '5' '회계연도',
        'RRGDAT' '6' '역분개 전기일',
        'RJNUM' '7' '역분개 전표번호',
        'RSTEXT' '8' '역분개 사유',
        'RTOPRC' '9' '총 금액',
        'CURKY' '10' '통화 키',
        'RGTOR' '11' '등록자 코드',
        'RGTOR_T' '12' '등록자명',
        'REFDOC' '13' '참조문서',
        'RGDAT' '14' '기존 전기일',
        'JENUM' '15' '기존 전표번호',
        'LIGHT' '1' '역분개 여부'.

  CLEAR GS_FCAT.

  LOOP AT GT_FCAT INTO GS_FCAT.

    IF GS_FCAT-FIELDNAME = 'JENUM'.
      GS_FCAT-HOTSPOT = 'X'. " 핫스팟

    ELSEIF GS_FCAT-FIELDNAME = 'RTOPRC'.
      GS_FCAT-CFIELDNAME = 'CURKY'.

    ELSEIF GS_FCAT-FIELDNAME = 'RJNUM'.
      GS_FCAT-HOTSPOT = 'X'. " 핫스팟

    ELSEIF GS_FCAT-FIELDNAME = 'RGTOR'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'JTYPE'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'REFDOC'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'REV'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'RGTOR_T'.
      GS_FCAT-NO_OUT = 'X'.

    ENDIF.

    MODIFY GT_FCAT FROM GS_FCAT.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_0300 .

  CALL METHOD GO_ALV2->SET_TABLE_FOR_FIRST_DISPLAY
    EXPORTING
      IS_LAYOUT            = GS_LAYO
      IT_TOOLBAR_EXCLUDING = GT_TOOLBAR
    CHANGING
      IT_OUTTAB            = GT_ADATA
      IT_FIELDCATALOG      = GT_FCAT
      IT_SORT              = GT_SORT2
*  EXCEPTIONS
*     INVALID_PARAMETER_COMBINATION = 1
*     PROGRAM_ERROR        = 2
*     TOO_MANY_LINES       = 3
*     OTHERS               = 4
    .
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_JEH_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_NON_REV_DATA .

  SELECT JENUM FYEAR JTYPE STEXT CURKY RGDAT RGTOR REV
         RRSON RJNUM
    FROM ZTSSJEH
    INTO CORRESPONDING FIELDS OF TABLE GT_HDATA
    WHERE REV IN GT_RREV
      AND FYEAR IN GT_RFYEAR
      AND RGDAT IN GT_RRGDAT
      AND JTYPE IN GT_RJTYPE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_ALL_JEH_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_ALL_JEH_DATA .

  SELECT JENUM FYEAR JTYPE STEXT CURKY RGDAT RGTOR
         RJNUM REV RRSON
    FROM ZTSSJEH
    INTO CORRESPONDING FIELDS OF TABLE GT_ADATA
    WHERE REV IN GT_RREV
      AND FYEAR IN GT_RFYEAR
      AND RGDAT IN GT_RRGDAT
      AND JTYPE IN GT_RJTYPE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_TOPRC_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_TOPRC_INFO .

  SELECT JENUM JESEQ DEBIT CREDIT
         FROM ZTSSJEI
         INTO CORRESPONDING FIELDS OF TABLE GT_TOPRC.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MODIFY_DATA_0200 .

  " DOMAIN
  PERFORM GET_DOMAIN_VALUE USING 'ZDSSJTYPE' CHANGING GT_DOMAIN.

  CLEAR GS_DOMAIN.
  READ TABLE GT_DOMAIN INTO GS_DOMAIN WITH KEY DOMVALUE_L = GS_HDATA-JTYPE.

  IF SY-SUBRC = 0.
    GS_HDATA-JTYPE_T = GS_DOMAIN-DDTEXT.
  ENDIF.

  " 등록자명 취득
  PERFORM GET_RGTOR_NAME USING GS_HDATA-RGTOR
                         CHANGING GS_HDATA-RGTOR_T.


  " 자동전표일 경우, 등록자명 AutoFIBot
  IF GS_HDATA-RGTOR IS INITIAL.
    GS_HDATA-RGTOR_T = 'AutoFIBot'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DOMAIN_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0634   text
*      <--P_GT_DOMAIN  text
*----------------------------------------------------------------------*
FORM GET_DOMAIN_VALUE  USING    VALUE(PV_DOMNAME)
                       CHANGING PT_DOMAIN TYPE DD07V_T.
  CALL FUNCTION 'GET_DOMAIN_VALUES'
    EXPORTING
      DOMNAME    = PV_DOMNAME
    TABLES
      VALUES_TAB = PT_DOMAIN.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_RGTOR_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GS_HDATA_RGTOR  text
*      <--P_GS_HDATA_RGTOR_T  text
*----------------------------------------------------------------------*
FORM GET_RGTOR_NAME USING VALUE(P_RGTOR)
                    CHANGING CT_NAME.
  " 등록자명 취득
  DATA: LT_EMP TYPE TABLE OF ZTSSEMP,
        LS_EMP LIKE LINE OF LT_EMP.


  SELECT PERNR LNAME FNAME DEPID
    FROM ZTSSEMP
    INTO CORRESPONDING FIELDS OF TABLE LT_EMP.

  READ TABLE LT_EMP INTO LS_EMP WITH KEY PERNR = P_RGTOR.
  CT_NAME = LS_EMP-LNAME && LS_EMP-FNAME.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MODIFY_RANGE_0200.

  CLEAR: GS_RREV, GT_RREV.
  IF ZSSSFI0302-REV IS INITIAL.
    GS_RREV-SIGN   = 'I'.
    GS_RREV-OPTION = 'EQ'.

    GS_RREV-LOW = ' '. " 공백 (REV이 비어있는 값만)
*    GS_RREV-LOW    = ZSSSFI0302-REV. " SPACE.
    APPEND GS_RREV TO GT_RREV.
  ENDIF.

  CLEAR: GS_RFYEAR, GT_RFYEAR.
  IF ZSSSFI0302-FYEAR IS NOT INITIAL.
    GS_RFYEAR-SIGN   = 'I'.
    GS_RFYEAR-OPTION = 'EQ'.
    GS_RFYEAR-LOW    = ZSSSFI0302-FYEAR.
    APPEND GS_RFYEAR TO GT_RFYEAR.
  ENDIF.

  CLEAR: GS_RRGDAT, GT_RRGDAT.
  IF ZSSSFI0302-RGDATB IS NOT INITIAL AND ZSSSFI0302-RGDATE IS NOT INITIAL.
    GS_RRGDAT-SIGN   = 'I'.
    GS_RRGDAT-OPTION = 'BT'.
    GS_RRGDAT-LOW    = ZSSSFI0302-RGDATB.
    GS_RRGDAT-HIGH   = ZSSSFI0302-RGDATE.
    APPEND GS_RRGDAT TO GT_RRGDAT.
  ENDIF.

  CLEAR: GS_RJENUM, GT_RJENUM.
  IF ZSSSFI0302-JENUM IS NOT INITIAL.
    GS_RJENUM-SIGN   = 'I'.
    GS_RJENUM-OPTION = 'EQ'.
    GS_RJENUM-LOW    = ZSSSFI0302-JENUM.
    APPEND GS_RJENUM TO GT_RJENUM.
  ENDIF.

  CLEAR: GS_RJTYPE, GT_RJTYPE.
  IF ZSSSFI0302-JTYPE IS NOT INITIAL.
    GS_RJTYPE-SIGN   = 'I'.
    GS_RJTYPE-OPTION = 'EQ'.
    GS_RJTYPE-LOW    = ZSSSFI0302-JTYPE.
    APPEND GS_RJTYPE TO GT_RJTYPE.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_RANGE_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MODIFY_RANGE_0300 .

  CLEAR: GS_RREV, GT_RREV.
  IF ZSSSFI0303-REV IS NOT INITIAL.
    GS_RREV-SIGN   = 'I'.
    GS_RREV-OPTION = 'EQ'.
    GS_RREV-LOW    =  ZSSSFI0303-REV.
    APPEND GS_RREV TO GT_RREV.

  ELSE.
    GS_RREV-SIGN   = 'I'.
    GS_RREV-OPTION = 'EQ'.
    GS_RREV-LOW    =  SPACE.
    APPEND GS_RREV TO GT_RREV.
  ENDIF.

  CLEAR: GS_RFYEAR, GT_RFYEAR.
  IF ZSSSFI0303-FYEAR IS NOT INITIAL.
    GS_RFYEAR-SIGN   = 'I'.
    GS_RFYEAR-OPTION = 'EQ'.
    GS_RFYEAR-LOW    = ZSSSFI0303-FYEAR.
    APPEND GS_RFYEAR TO GT_RFYEAR.
  ENDIF.

  CLEAR: GS_RRGDAT, GT_RRGDAT.
  IF ZSSSFI0303-RGDATB IS NOT INITIAL AND ZSSSFI0303-RGDATE IS NOT INITIAL.
    GS_RRGDAT-SIGN   = 'I'.
    GS_RRGDAT-OPTION = 'BT'.
    GS_RRGDAT-LOW    = ZSSSFI0303-RGDATB.
    GS_RRGDAT-HIGH   = ZSSSFI0303-RGDATE.
    APPEND GS_RRGDAT TO GT_RRGDAT.
  ENDIF.

  CLEAR: GS_RJENUM, GT_RJENUM.
  IF ZSSSFI0303-JENUM IS NOT INITIAL.
    GS_RJENUM-SIGN   = 'I'.
    GS_RJENUM-OPTION = 'EQ'.
    GS_RJENUM-LOW    = ZSSSFI0303-JENUM.
    APPEND GS_RJENUM TO GT_RJENUM.
  ENDIF.

  CLEAR: GS_RJTYPE, GT_RJTYPE.
  IF ZSSSFI0303-JTYPE IS NOT INITIAL.
    GS_RJTYPE-SIGN   = 'I'.
    GS_RJTYPE-OPTION = 'EQ'.
    GS_RJTYPE-LOW    = ZSSSFI0303-JTYPE.
    APPEND GS_RJTYPE TO GT_RJTYPE.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SCREEN_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SCREEN_0200 .
  PERFORM MODIFY_RANGE_0200.

  PERFORM GET_TOPRC_INFO.   " 전표 아이템 금액 가져오기

  PERFORM GET_NON_REV_DATA.


  LOOP AT GT_HDATA INTO GS_HDATA.
    IF GS_HDATA-REV = 'X'.
      GS_HDATA-LIGHT = '3'.
    ELSE.
      GS_HDATA-LIGHT = '1'.
    ENDIF.

    " 차변이 없을 경우 대변 정보 출력
    READ TABLE GT_TOPRC INTO GS_TOPRC WITH KEY JENUM = GS_HDATA-JENUM.

    GS_HDATA-TOPRC = GS_TOPRC-DEBIT.

    IF GS_HDATA-TOPRC  = 0.
      GS_HDATA-TOPRC = GS_TOPRC-CREDIT.
    ENDIF.



    PERFORM MODIFY_DATA_0200.      " 추가 정보 취득

    MODIFY GT_HDATA FROM GS_HDATA.

  ENDLOOP.

  DELETE GT_HDATA WHERE TOPRC < 0.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SCREEN_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SCREEN_0300 .

  PERFORM MODIFY_RANGE_0300.

  PERFORM GET_TOPRC_INFO.   " 전표 아이템 금액 가져오기

  PERFORM GET_ALL_JEH_DATA.

  PERFORM GET_REV_JEH_DATA.


  LOOP AT GT_ADATA INTO GS_ADATA.
    IF GS_ADATA-REV = 'X'.
      GS_ADATA-LIGHT = '3'.
    ELSE.
      GS_ADATA-LIGHT = '1'.
    ENDIF.


    " GT_RVDATA에서 JENUM = GS_ADATA-RJNUM 인 행 찾기
    IF GS_ADATA-REV = 'X'.
      " GT_RVDATA에서 JENUM = GS_ADATA-RJNUM 인 행 찾기
      READ TABLE GT_RVDATA INTO GS_RVDATA WITH KEY JENUM = GS_ADATA-RJNUM.
      IF SY-SUBRC = 0.
        GS_ADATA-RRGDAT = GS_RVDATA-RGDAT.
        GS_ADATA-RSTEXT = GS_RVDATA-STEXT.
      ENDIF.
    ENDIF.


    " 차변이 없을 경우 대변 정보 출력
    READ TABLE GT_TOPRC INTO GS_TOPRC WITH KEY JENUM = GS_ADATA-JENUM.

    GS_ADATA-TOPRC = GS_TOPRC-DEBIT.

    IF GS_ADATA-TOPRC  = 0.
      GS_ADATA-TOPRC = GS_TOPRC-CREDIT.
    ENDIF.

    " 추가 정보 취득
    PERFORM MODIFY_DATA_0300.

    " 역분개 전표번호에 해당하는 총 금액
    READ TABLE GT_TOPRC INTO GS_TOPRC WITH KEY JENUM = GS_ADATA-RJNUM.

    GS_ADATA-RTOPRC = GS_TOPRC-DEBIT.

    IF GS_ADATA-RTOPRC  = 0.
      GS_ADATA-RTOPRC = GS_TOPRC-CREDIT.
    ENDIF.


    MODIFY GT_ADATA FROM GS_ADATA.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_DATA_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MODIFY_DATA_0300 .

  " DOMAIN
  PERFORM GET_DOMAIN_VALUE USING 'ZDSSJTYPE' CHANGING GT_DOMAIN.

  CLEAR GS_DOMAIN.
  READ TABLE GT_DOMAIN INTO GS_DOMAIN WITH KEY DOMVALUE_L = GS_ADATA-JTYPE.

  IF SY-SUBRC = 0.
    GS_ADATA-JTYPE_T = GS_DOMAIN-DDTEXT.
  ENDIF.

  " 등록자명 취득
  PERFORM GET_RGTOR_NAME USING GS_ADATA-RGTOR
                         CHANGING GS_ADATA-RGTOR_T.


  " 자동전표일 경우, 등록자명 AutoFIBot
  IF GS_ADATA-RGTOR IS INITIAL.
    GS_ADATA-RGTOR_T = 'AutoFIBot'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DATA_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_DATA_0300 .

  CLEAR ZSSSFI0303.
  ZSSSFI0303-FYEAR = '2025'.
  ZSSSFI0303-REV = 'X'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ES_ROW_NO  text
*      -->P_E_COLUMN  text
*----------------------------------------------------------------------*
FORM GET_DOUBLE_CLICK  USING    P_ES_ROW_NO
                                P_E_COLUMN.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_DATA_CHANGED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ER_DATA_CHANGED  text
*      -->P_E_ONF4  text
*      -->P_E_ONF4_BEFORE  text
*      -->P_E_ONF4_AFTER  text
*----------------------------------------------------------------------*
FORM ALV_DATA_CHANGED
  USING
    PR_DATA_CHANGED TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL
    P_ONF4
    P_ONF4_BEFORE
    P_ONF4_AFTER.

  DATA:
    LT_GOOD_CELLS TYPE LVC_T_MODI,
    LS_GOOD_CELL  TYPE LVC_S_MODI.

  LT_GOOD_CELLS[] = PR_DATA_CHANGED->MT_GOOD_CELLS[].


  LOOP AT LT_GOOD_CELLS INTO LS_GOOD_CELL.

    IF LS_GOOD_CELL-FIELDNAME EQ 'STEXT'.
      " 유효성 검사 ~~
      " SELECT ~~
***
***      IF SY-SUBRC EQ 0.
***        " 다른 필드 값 변경
***        CALL METHOD PR_DATA_CHANGED->MODIFY_CELL
***          EXPORTING
***            I_ROW_ID = LS_GOOD_CELL-ROW_ID  " Row ID
***            I_FIELDNAME = 'STEXT'           " Field Name
***            I_VALUE = '값 입력'.
***      ENDIF.

    ENDIF.


  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EVENT_OPTION_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM EVENT_OPTION_0300 .

  " Enter 눌렀을 때
  GO_ALV2->REGISTER_EDIT_EVENT(
    EXPORTING
      I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER
   ).

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_EVENT_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_EVENT_0300 .

  CREATE OBJECT GO_EVENT.

  SET HANDLER:
  GO_EVENT->DATA_CHANGED FOR GO_ALV2,
  GO_EVENT->HANDLE_HOTSPOT_CLICK FOR GO_ALV2.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F4_RRSON
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM F4_RRSON .

  DATA: LT_RETURN TYPE TABLE OF DDSHRETVAL,
        LS_RETURN TYPE DDSHRETVAL,
        LT_TAB    TYPE TABLE OF DFIES,
        LS_TAB    TYPE DFIES,
        LT_TEXT   TYPE TABLE OF DSELC,
        LS_TEXT   TYPE DSELC.

  GT_REV_REASON = VALUE #(
    ( CODE = '01' )
    ( CODE = '입력 오류' )
    ( CODE = '02' )
    ( CODE = '중복 입력' )
    ( CODE = '03' )
    ( CODE = '계정 오류' )
    ( CODE = '04' )
    ( CODE = '수정으로 인한 역분개' )
  ).

  LT_TAB = VALUE #(
    ( FIELDNAME = 'RRSON_T' OUTPUTLEN = 4 LENG = 4
      INTLEN = 4 REPTEXT = '코드' )
    ( FIELDNAME = 'RRSON_TEXT' OUTPUTLEN = 40 LENG = 40
      INTLEN = 40 REPTEXT = '설명' )
  ).

  LT_TEXT = VALUE #(
      ( FLDNAME = 'RRSON_T' DYFLDNAME = 'ZSSSFI0301-RRSON_T')
      ( FLDNAME = 'RRSON_TEXT' DYFLDNAME = 'ZSSSFI0301-RRSON_TEXT')
  ).

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      RETFIELD        = 'CODE'
      DYNPPROG        = SY-REPID
      DYNPNR          = SY-DYNNR
      DYNPROFIELD     = 'ZSSSFI0301-RRSON_T'
      VALUE_ORG       = 'C'  " S
    TABLES
      VALUE_TAB       = GT_REV_REASON
      FIELD_TAB       = LT_TAB
      DYNPFLD_MAPPING = LT_TEXT
      RETURN_TAB      = LT_RETURN
    EXCEPTIONS
      OTHERS          = 1.

  IF SY-SUBRC = 0 AND LT_RETURN IS NOT INITIAL.
    READ TABLE LT_RETURN INTO LS_RETURN INDEX 1.
    IF SY-SUBRC = 0.
      " 선택된 CODE 값을 화면필드에 넣음
      ZSSSFI0301-RRSON_T = LS_RETURN-FIELDVAL.
    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEL_ROWS_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM SEL_ROWS_0200  CHANGING PV_SUBRC.
  " 행 선택 처리
  DATA: LV_LINE TYPE I.

  PERFORM GET_SELECTED_ROWS CHANGING GT_ROWS.

  DESCRIBE TABLE GT_ROWS LINES LV_LINE.
  CASE LV_LINE.
    WHEN '0'.
      MESSAGE S999(ZMCSS) WITH '수정할 데이터를 선택해주세요.' DISPLAY LIKE 'E'.
      PV_SUBRC = 4.
      RETURN.
*      EXIT.

    WHEN OTHERS.
      LOOP AT GT_ROWS INTO GS_ROWS.
        READ TABLE GT_HDATA INTO GS_HDATA INDEX GS_ROWS-INDEX.

      ENDLOOP.

  ENDCASE.

  READ TABLE GT_HDATA INTO GS_HDATA INDEX GS_ROWS-INDEX .

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_SELECTED_ROWS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GT_ROWS  text
*----------------------------------------------------------------------*
FORM GET_SELECTED_ROWS CHANGING PT_ROWS TYPE LVC_T_ROW.

  CLEAR: PT_ROWS.

  CALL METHOD GO_ALV->GET_SELECTED_ROWS
    IMPORTING
      ET_INDEX_ROWS = PT_ROWS.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  F4_RRSON_2  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE F4_RRSON_0201 INPUT.

  PERFORM F4_RRSON_0201.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Form  F4_RRSON_2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM F4_RRSON_0201 .

  DATA: LT_RETURN TYPE TABLE OF DDSHRETVAL,
        LS_RETURN TYPE DDSHRETVAL,
        LT_TAB    TYPE TABLE OF DFIES,
        LS_TAB    TYPE DFIES,
        LT_TEXT   TYPE TABLE OF DSELC,
        LS_TEXT   TYPE DSELC.

  GT_REV_REASON = VALUE #(
    ( CODE = '01' )
    ( CODE = '입력 오류' )
    ( CODE = '02' )
    ( CODE = '중복 입력' )
    ( CODE = '03' )
    ( CODE = '계정 오류' )
    ( CODE = '04' )
    ( CODE = '수정으로 인한 역분개' )
  ).

  LT_TAB = VALUE #(
    ( FIELDNAME = 'RRSON_T' OUTPUTLEN = 4 LENG = 4
      INTLEN = 4 REPTEXT = '코드' )
    ( FIELDNAME = 'RRSON_TT' OUTPUTLEN = 40 LENG = 40
      INTLEN = 40 REPTEXT = '설명' )
  ).

  LT_TEXT = VALUE #(
      ( FLDNAME = 'RRSON_T' DYFLDNAME = 'ZSSSFI0304-RRSON_T')
      ( FLDNAME = 'RRSON_TT' DYFLDNAME = 'ZSSSFI0304-RRSON_TT')
  ).

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      RETFIELD        = 'CODE'
      DYNPPROG        = SY-REPID
      DYNPNR          = SY-DYNNR
      DYNPROFIELD     = 'ZSSSFI0304-RRSON_T'
      VALUE_ORG       = 'C'  " S
    TABLES
      VALUE_TAB       = GT_REV_REASON
      FIELD_TAB       = LT_TAB
      DYNPFLD_MAPPING = LT_TEXT
      RETURN_TAB      = LT_RETURN
    EXCEPTIONS
      OTHERS          = 1.

  IF SY-SUBRC = 0 AND LT_RETURN IS NOT INITIAL.
    READ TABLE LT_RETURN INTO LS_RETURN INDEX 1.
    IF SY-SUBRC = 0.
      " 선택된 CODE 값을 화면필드에 넣음
      ZSSSFI0304-RRSON_T = LS_RETURN-FIELDVAL.
    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INSERT_DATA .

  LOOP AT GT_ROWS INTO GS_ROWS.
    READ TABLE GT_HDATA INTO GS_HDATA INDEX GS_ROWS-INDEX.

    " 헤더
    " 전표 번호 채번
    DATA: LV_NUM(6)   TYPE N,
          LV_NUM2(13) TYPE C.
    CALL FUNCTION 'NUMBER_GET_NEXT'
      EXPORTING
        NR_RANGE_NR             = '01'
        OBJECT                  = 'ZNRSSFI01'
        TOYEAR                  = SY-DATUM+0(4)
      IMPORTING
        NUMBER                  = LV_NUM
      EXCEPTIONS  " M TYPE -> A
        INTERVAL_NOT_FOUND      = 1
        NUMBER_RANGE_NOT_INTERN = 2
        OBJECT_NOT_FOUND        = 3
        QUANTITY_IS_0           = 4
        QUANTITY_IS_NOT_1       = 5
        INTERVAL_OVERFLOW       = 6
        BUFFER_OVERFLOW         = 7
        OTHERS                  = 8.
    IF SY-SUBRC = 0.
      LV_NUM2 = 'J' && SY-DATUM+0(4) && LV_NUM.
      WRITE LV_NUM2.
    ENDIF.


    " 역분개 전기일 계산
    DATA: LV_YEAR     TYPE CHAR4,
          LV_MON      TYPE CHAR2,
          LV_NEXT01   TYPE D,
          LV_LAST_DAY TYPE D,
          LV_MONTH    TYPE CHAR6.

    LV_MONTH = SY-DATUM(6). " 예: '202510' (연월)

    LV_YEAR = LV_MONTH+0(4).
    LV_MON  = LV_MONTH+4(2).

    " 이번달 1일 날짜 생성
    CONCATENATE LV_YEAR LV_MON '01' INTO LV_NEXT01.

    " 이번달 말일 구하기 (FUNCTION MODULE 호출)
    CALL FUNCTION 'LAST_DAY_OF_MONTHS'
      EXPORTING
        DAY_IN            = LV_NEXT01
      IMPORTING
        LAST_DAY_OF_MONTH = LV_LAST_DAY
      EXCEPTIONS
        OTHERS            = 1.

    IF SY-SUBRC <> 0.
      " 에러 처리
    ENDIF.




    " 역분개 전표 데이터(REV/RRSON/RJNUM 없음)
    MOVE-CORRESPONDING GS_HDATA TO GS_ZTSSJEH.

    GS_ZTSSJEH-JENUM = LV_NUM2.
    GS_ZTSSJEH-RGDAT = LV_LAST_DAY.
    GS_ZTSSJEH-RGTOR = 'E0000001'.
    GS_ZTSSJEH-REV   = ''.
    GS_ZTSSJEH-RRSON = ''.
    GS_ZTSSJEH-RJNUM = ''.
    GS_ZTSSJEH-STEXT = |{ GS_HDATA-JENUM } 수정에 따른 역분개 전표|.

*    APPEND GS_ZTSSJEH TO GT_HDATA.


    " 1. 헤더 DB INSERT
    INSERT ZTSSJEH FROM GS_ZTSSJEH.
    IF SY-SUBRC <> 0.
      ROLLBACK WORK.
      MESSAGE S999(ZMCSS) WITH '헤더 생성 오류' DISPLAY LIKE 'E'.
      EXIT.
    ELSE.
      COMMIT WORK.
    ENDIF.

    " 신규 전표번호/JENUM, FYEAR 저장
    DATA: LV_NEW_JENUM TYPE ZTSSJEH-JENUM,
          LV_NEW_FYEAR TYPE ZTSSJEH-FYEAR.

    LV_NEW_JENUM = GS_ZTSSJEH-JENUM.
    LV_NEW_FYEAR = GS_ZTSSJEH-FYEAR.



    " 2. 아이템 INSERT (신규 전표번호/연도로 연결)
    LOOP AT GT_IDATA INTO GS_IDATA WHERE JENUM = GS_HDATA-JENUM.

      CLEAR GS_ZTSSJEI.
      MOVE-CORRESPONDING GS_IDATA TO GS_ZTSSJEI.

      " 새 전표번호 변경 후 저장
      GS_ZTSSJEI-JENUM = LV_NEW_JENUM.
      GS_ZTSSJEI-FYEAR = LV_NEW_FYEAR.

      " 금액 필드는 음수로 전환 (0이면 0 유지)
      GS_ZTSSJEI-DEBIT  = - ABS( GS_ZTSSJEI-DEBIT ).
      GS_ZTSSJEI-CREDIT = - ABS( GS_ZTSSJEI-CREDIT ).

      INSERT ZTSSJEI FROM GS_ZTSSJEI.

      IF SY-SUBRC <> 0.
        ROLLBACK WORK.
        MESSAGE S999(ZMCSS) WITH '아이템 생성 오류' DISPLAY LIKE 'E'.
        EXIT.
      ELSE.
        COMMIT WORK.
      ENDIF.
    ENDLOOP.


    " 문자열 템플릿, 호스트 변수 @{} escape 포함
    DATA(LV_RRSON) = |{ GS_HDATA-JENUM } 수정으로 인한 역분개|.

    UPDATE ZTSSJEH SET REV   = 'X',
                       RRSON = @LV_RRSON,
                       RJNUM = @GS_ZTSSJEH-JENUM
                 WHERE JENUM = @GS_HDATA-JENUM
                   AND FYEAR = @GS_HDATA-FYEAR.

    IF SY-SUBRC <> 0.
      MESSAGE S999(ZMCSS) WITH '전표 역분개 필드 업데이트 오류' DISPLAY LIKE 'E'.
      EXIT.
    ELSE.
      COMMIT WORK.

    ENDIF.

    " 지급, 수금 역분개 후 역분개된 전표번호로 IV UPDATE

    READ TABLE GT_MHDATA WITH  KEY APNUM = GS_HDATA-JENUM
                                   APFYR = GS_HDATA-FYEAR
          INTO GS_MHDATA.

    IF SY-SUBRC EQ 0.

      UPDATE ZTSSMIVH
        SET APNUM = @GS_ZTSSJEH-JENUM,
            FYEAR = @GS_ZTSSJEH-FYEAR
        WHERE JENUM = @GS_MHDATA-JENUM
          AND FYEAR = @GS_MHDATA-FYEAR.

      IF SY-SUBRC <> 0.

        MESSAGE S999(ZMCSS) WITH 'AP 전표번호 업데이트 오류' DISPLAY LIKE 'E'.

      ELSE.

        COMMIT WORK.

      ENDIF.
    ENDIF.



    READ TABLE GT_SHDATA WITH  KEY ARNUM = GS_HDATA-JENUM
                                   ARFYR = GS_HDATA-FYEAR
          INTO GS_SHDATA.

    IF SY-SUBRC EQ 0.

      UPDATE ZTSSSIVH
        SET ARNUM = @GS_ZTSSJEH-JENUM,
            FYEAR = @GS_ZTSSJEH-FYEAR
        WHERE JENUM = @GS_SHDATA-JENUM
          AND FYEAR = @GS_SHDATA-FYEAR.

      IF SY-SUBRC <> 0.

        MESSAGE S999(ZMCSS) WITH 'AR 전표번호 업데이트 오류' DISPLAY LIKE 'E'.

      ELSE.

        COMMIT WORK.

      ENDIF.
    ENDIF.

  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_JEI_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_JEI_DATA .

  " 라인아이템 정보 취득
  SELECT JENUM FYEAR JESEQ DEBIT CREDIT CURKY GLACC
    FROM ZTSSJEI
    INTO CORRESPONDING FIELDS OF TABLE GT_IDATA.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DATA_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_DATA_0200 .

  PERFORM GET_JEI_DATA.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DELETE_TOOLBAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DELETE_TOOLBAR .

  APPEND CL_GUI_ALV_GRID=>MC_FC_EXCL_ALL TO GT_TOOLBAR.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_MIVH_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_MIVH_DATA .

  SELECT *
    FROM ZTSSMIVH
    INTO CORRESPONDING FIELDS OF TABLE GT_MHDATA.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_SIVH_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_SIVH_DATA .

  SELECT *
      FROM ZTSSSIVH
      INTO CORRESPONDING FIELDS OF TABLE GT_SHDATA.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_REV_JEH_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_REV_JEH_DATA .

  " GT_RVDATA에 ZTSSJEH 전체 정보 담기
  SELECT JENUM FYEAR JTYPE STEXT CURKY RGDAT RGTOR
         RJNUM REV RRSON
    FROM ZTSSJEH
    INTO CORRESPONDING FIELDS OF TABLE GT_RVDATA.


ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
