*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_DATA .

  PERFORM MODIFY_RANGE.

  PERFORM GET_JEH_DATA.     " 전표 헤더 정보 취득

  PERFORM GET_TOPRC_INFO.   " 전표 아이템 금액 가져오기

  PERFORM GET_REFDOC_DATA.  " 참조문서 정보 취득

  LOOP AT GT_HDATA INTO GS_HDATA.
    CASE GS_HDATA-JTYPE.
      WHEN 'WE'. " 입고
        READ TABLE GT_ZTSSGRH INTO GS_ZTSSGRH WITH KEY JENUM = GS_HDATA-JENUM.
        GS_HDATA-REFDOC = GS_ZTSSGRH-GRNUM.

      WHEN 'KR'. " 송장검증
        READ TABLE GT_ZTSSMIVH INTO GS_ZTSSMIVH WITH KEY JENUM = GS_HDATA-JENUM.
        GS_HDATA-REFDOC = GS_ZTSSMIVH-IVNUM.

      WHEN 'KZ'. " 지급
        READ TABLE GT_ZTSSMIVH INTO GS_ZTSSMIVH WITH KEY APNUM = GS_HDATA-JENUM.
        GS_HDATA-REFDOC = GS_ZTSSMIVH-JENUM.

      WHEN 'WA'. " 출고
        READ TABLE GT_ZTSSGIH INTO GS_ZTSSGIH WITH KEY JENUM = GS_HDATA-JENUM.
        GS_HDATA-REFDOC = GS_ZTSSGIH-GINUM.

      WHEN 'DR'. " 청구
        READ TABLE GT_ZTSSSIVH INTO GS_ZTSSSIVH WITH KEY JENUM = GS_HDATA-JENUM.
        GS_HDATA-REFDOC = GS_ZTSSSIVH-BINUM.

      WHEN 'DZ'. " 수금
        READ TABLE GT_ZTSSSIVH INTO GS_ZTSSSIVH WITH KEY ARNUM = GS_HDATA-JENUM.
        GS_HDATA-REFDOC = GS_ZTSSSIVH-JENUM.

    ENDCASE.

    " 차변이 없을 경우 대변 정보를 가져와야 해
    READ TABLE GT_TOPRC INTO GS_TOPRC WITH KEY JENUM = GS_HDATA-JENUM.

    GS_HDATA-TOPRC = GS_TOPRC-DEBIT.

    IF GS_HDATA-TOPRC  = 0.
      GS_HDATA-TOPRC = GS_TOPRC-CREDIT.
    ENDIF.

    PERFORM MODIFY_DATA.      " 추가 정보 취득

    MODIFY GT_HDATA FROM GS_HDATA.

  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_ALV_0100 .

  " 객체가 있을 시 미생성
  IF GO_CON IS NOT INITIAL.
    RETURN.
  ENDIF.

  CREATE OBJECT GO_CON
    EXPORTING
      CONTAINER_NAME              = 'CON'
    EXCEPTIONS
      CNTL_ERROR                  = 1
      CNTL_SYSTEM_ERROR           = 2
      CREATE_ERROR                = 3
      LIFETIME_ERROR              = 4
      LIFETIME_DYNPRO_DYNPRO_LINK = 5
      OTHERS                      = 6.
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT GO_ALV
    EXPORTING
      I_PARENT          = GO_CON
    EXCEPTIONS
      ERROR_CNTL_CREATE = 1
      ERROR_CNTL_INIT   = 2
      ERROR_CNTL_LINK   = 3
      ERROR_DP_CREATE   = 4
      OTHERS            = 5.
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

*  "Event Register
*  PERFORM REQ_EVENT_FOR_ALV.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_LAYO .

  CLEAR GS_LAYO.

  GS_LAYO-CWIDTH_OPT = 'X'.
  GS_LAYO-ZEBRA = 'X'.
  GS_LAYO-SEL_MODE = 'A'.

*  GS_LAYO-STYLEFNAME = 'CELLSTYL'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT .

  CLEAR: GT_FCAT.

  PERFORM FCAT USING:
        'JENUM' '1' '전표번호',
        'FYEAR' '2' '회계연도',
        'JTYPE' '4' '전표 유형 코드',
        'JTYPE_T' '5' '전표 유형',
        'TOPRC' '8' '총 금액',
        'CURKY' '9' '통화 키',
        'RGDAT' '3' '전기일',
        'RGTOR' '7' '등록자 코드',
        'RGTOR_T' '6' '등록자명',
        'REFDOC' '10' '참조문서'.

  CLEAR GS_FCAT.


  CASE GV_CHECK.
    WHEN 0. " 조회모드
      GS_FCAT-FIELDNAME = 'STEXT'.
*      GS_FCAT-EDIT = ''.
      IF GV_FLAG = 'X'.
        GS_FCAT-EDIT = 'X'.
      ELSE.

        GS_FCAT-EDIT = ''.
      ENDIF.

      GS_FCAT-COL_POS = 7.
      GS_FCAT-COLTEXT = '비고'.
      APPEND GS_FCAT TO GT_FCAT.

    WHEN 1. " 편집모드
      GS_FCAT-FIELDNAME = 'STEXT'.
*      GS_FCAT-EDIT = 'X'.
      IF GV_FLAG = 'X' AND GV_FLAG2 = 'X'.
        GS_FCAT-EDIT = ''.
      ENDIF.
      GS_FCAT-COL_POS = 7.
      GS_FCAT-COLTEXT = '비고'.
      APPEND GS_FCAT TO GT_FCAT.
  ENDCASE.




  CLEAR GS_FCAT.

  LOOP AT GT_FCAT INTO GS_FCAT.

    IF GS_FCAT-FIELDNAME = 'JENUM'.
      GS_FCAT-HOTSPOT = 'X'. " 핫스팟

    ELSEIF GS_FCAT-FIELDNAME = 'TOPRC'.
      GS_FCAT-CFIELDNAME = 'CURKY'.

    ELSEIF GS_FCAT-FIELDNAME = 'REFDOC'.
      GS_FCAT-HOTSPOT = 'X'. " 핫스팟

    ELSEIF GS_FCAT-FIELDNAME = 'RGTOR'.
      GS_FCAT-NO_OUT = 'X'.

    ELSEIF GS_FCAT-FIELDNAME = 'JTYPE'.
      GS_FCAT-NO_OUT = 'X'.
    ENDIF.

    MODIFY GT_FCAT FROM GS_FCAT.

  ENDLOOP.


  " 따로 뺄 예정
***  " 역분개 여부
***  CLEAR GS_FCAT.
***  GS_FCAT-FIELDNAME = 'REV'.
***  GS_FCAT-COL_POS = 8.
***  GS_FCAT-COLTEXT = '역분개 여부'.
***  APPEND GS_FCAT TO GT_FCAT.
***
***  " 역분개 사유
***  CLEAR GS_FCAT.
***  GS_FCAT-FIELDNAME = 'RRSON'.
***  GS_FCAT-COL_POS = 9.
***  GS_FCAT-COLTEXT = '역분개 사유'.
***  APPEND GS_FCAT TO GT_FCAT.
***
***  " 역분개 전표번호
***  CLEAR GS_FCAT.
***  GS_FCAT-FIELDNAME = 'RJNUM'.
***  GS_FCAT-COL_POS = 9.
***  GS_FCAT-COLTEXT = '역분개 전표번호'.
***  APPEND GS_FCAT TO GT_FCAT.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT_0100 .
  CLEAR GT_SORT2.
  GS_SORT2-SPOS = '1'.
  GS_SORT2-FIELDNAME = 'JENUM'.
  GS_SORT2-DOWN = 'X'.
  APPEND GS_SORT2 TO GT_SORT2.

*  CLEAR GT_SORT2.
*  GS_SORT2-SPOS = '2'.
*  GS_SORT2-FIELDNAME = 'FYEAR'.
*  GS_SORT2-DOWN = 'X'.
*  APPEND GS_SORT2 TO GT_SORT2.

*  CLEAR GT_SORT2.
*  GS_SORT2-SPOS = '3'.
*  GS_SORT2-FIELDNAME = 'RGDAT'.
*  GS_SORT2-DOWN = 'X'.
*  APPEND GS_SORT2 TO GT_SORT2.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_JEH_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_JEH_DATA.

  SELECT JENUM FYEAR JTYPE STEXT CURKY RGDAT
             RGTOR REV RRSON RJNUM
         FROM ZTSSJEH
         INTO CORRESPONDING FIELDS OF TABLE GT_HDATA
         WHERE JENUM IN GT_RJENUM
          AND FYEAR IN GT_RFYEAR
          AND RGDAT IN GT_RRGDAT
          AND JTYPE IN GT_RJTYPE
          AND RGTOR IN GT_RRGTOR.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MODIFY_DATA .

  " DOMAIN
  PERFORM GET_DOMAIN_VALUE USING 'ZDSSJTYPE' CHANGING GT_DOMAIN.

  CLEAR GS_DOMAIN.
  READ TABLE GT_DOMAIN INTO GS_DOMAIN WITH KEY DOMVALUE_L = GS_HDATA-JTYPE.

  IF SY-SUBRC = 0.
    GS_HDATA-JTYPE_T = GS_DOMAIN-DDTEXT.
  ENDIF.

  " 등록자명 취득
  PERFORM GET_RGTOR_NAME USING GS_HDATA-RGTOR
                         CHANGING GS_HDATA-RGTOR_T.


  " 자동전표일 경우, 등록자명 AutoFIBot
  IF GS_HDATA-RGTOR IS INITIAL.
    GS_HDATA-RGTOR_T = 'AutoFIBot'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT_0200 .

  CLEAR: GT_FCAT.

  PERFORM FCAT USING:
        'JENUM' '1' '전표번호',
        'FYEAR' '2' '회계연도',
        'JESEQ' '3' '전표 아이템 번호',
        'GLACC' '4' 'G/L 계정',
        'ACTNM' '5' 'G/L 계정명',
        'CURKY' '6' '통화 키',
        'DEBIT' '7' '차변',
        'CREDIT' '8' '대변'.

  CLEAR GS_FCAT.

  LOOP AT GT_FCAT INTO GS_FCAT.
    IF GS_FCAT-FIELDNAME = 'JESEQ'.
      GS_FCAT-LZERO = 'X'.
    ELSEIF GS_FCAT-FIELDNAME = 'JENUM' OR GS_FCAT-FIELDNAME = 'FYEAR' .
      GS_FCAT-NO_OUT = 'X'.
    ELSEIF GS_FCAT-FIELDNAME = 'DEBIT' OR GS_FCAT-FIELDNAME = 'CREDIT'.
      GS_FCAT-CFIELDNAME = 'CURKY'.
    ENDIF.


    MODIFY GT_FCAT FROM GS_FCAT.
  ENDLOOP.


  " ALV EDIT
  " 계정, 계정명, 차변, 대변 수정 가능
  LOOP AT GT_FCAT INTO GS_FCAT.
    CASE GS_FCAT-FIELDNAME.
      WHEN 'GLACC' OR 'ACTNM' OR 'DEBIT' OR 'CREDIT'.
        CASE GV_CHECK.
          WHEN 0.
            IF GV_FLAG = 'X'.
              GS_FCAT-EDIT = 'X'.
            ELSE.
              GS_FCAT-EDIT = ''.
            ENDIF.
          WHEN 1.
            GS_FCAT-EDIT = ''. " 편집 불가
        ENDCASE.
    ENDCASE.

    MODIFY GT_FCAT FROM GS_FCAT.
  ENDLOOP.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_ALV_0200 .

  " 객체가 있을 시 미생성
  IF GO_CON3 IS NOT INITIAL.
    RETURN.
  ENDIF.

  CREATE OBJECT GO_CON3
    EXPORTING
      CONTAINER_NAME              = 'CON3'
    EXCEPTIONS
      CNTL_ERROR                  = 1
      CNTL_SYSTEM_ERROR           = 2
      CREATE_ERROR                = 3
      LIFETIME_ERROR              = 4
      LIFETIME_DYNPRO_DYNPRO_LINK = 5
      OTHERS                      = 6.
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT GO_ALV3
    EXPORTING
      I_PARENT          = GO_CON3
    EXCEPTIONS
      ERROR_CNTL_CREATE = 1
      ERROR_CNTL_INIT   = 2
      ERROR_CNTL_LINK   = 3
      ERROR_DP_CREATE   = 4
      OTHERS            = 5.
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_0200 .

  CALL METHOD GO_ALV3->SET_TABLE_FOR_FIRST_DISPLAY
    EXPORTING
      IS_LAYOUT       = GS_LAYO
    CHANGING
      IT_OUTTAB       = GT_IDATA
      IT_FIELDCATALOG = GT_FCAT
      IT_SORT         = GT_SORT.
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_SELECTED_ROWS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GT_ROWS  text
*----------------------------------------------------------------------*
FORM GET_SELECTED_ROWS CHANGING PT_ROWS TYPE LVC_T_ROW.

  CLEAR: PT_ROWS.

  CALL METHOD GO_ALV->GET_SELECTED_ROWS
    IMPORTING
      ET_INDEX_ROWS = PT_ROWS.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FCAT_CELL1
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0030   text
*      -->P_CL_GUI_ALV_GRID=>MC_STYLE_ENAB  text
*      <--P_LV_LIST  text
*----------------------------------------------------------------------*
FORM FCAT_CELL1 USING VALUE(P_FNAME)
                      VALUE(P_MC_STYLE)
                CHANGING
                  PS_LIST TYPE TY_S_LIST01.

  DATA:
    LV_CELL TYPE LVC_S_STYL.

  LV_CELL-FIELDNAME = P_FNAME.
  LV_CELL-STYLE = P_MC_STYLE.

  INSERT LV_CELL INTO TABLE PS_LIST-CELLSTYL.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_JEI_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_JEI_DATA .
  " 라인아이템 정보 취득
  SELECT JENUM FYEAR JESEQ DEBIT CREDIT CURKY GLACC
    FROM ZTSSJEI
    INTO CORRESPONDING FIELDS OF TABLE GT_ADATA
    WHERE JENUM = GS_HDATA-JENUM
      AND FYEAR = GS_HDATA-FYEAR.



  " G/L 계정명 취득
  LOOP AT GT_ADATA INTO GS_ADATA.
    PERFORM GET_GL_NAME USING GS_ADATA-GLACC
                        CHANGING GS_ADATA-ACTNM.

    MODIFY GT_ADATA FROM GS_ADATA.
  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0107   text
*      -->P_0108   text
*      -->P_0109   text
*----------------------------------------------------------------------*
FORM FCAT  USING    VALUE(P_FIELDNAME)
                    VALUE(P_COLPOS)
                    VALUE(P_COLTEXT).

  DATA LS_FCAT LIKE LINE OF GT_FCAT.

  " 전표번호
  LS_FCAT-FIELDNAME = P_FIELDNAME.
  LS_FCAT-COL_POS = P_COLPOS.
  LS_FCAT-COLTEXT = P_COLTEXT.
  APPEND LS_FCAT TO GT_FCAT.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_INIT .

  " 날짜 기본값 설정
  DATA: LV_DATE      LIKE SY-DATUM,
        LV_CALC_DATE LIKE SY-DATUM.

  LV_DATE      = SY-DATUM.

  CALL FUNCTION 'RP_CALC_DATE_IN_INTERVAL'
    EXPORTING
      DATE      = LV_DATE
      DAYS      = '00'
      MONTHS    = 1
      SIGNUM    = '-'
      YEARS     = '00'
    IMPORTING
      CALC_DATE = LV_CALC_DATE.

  ZSSSFI0101-RGDATB = LV_CALC_DATE.        " 1달 전

  ZSSSFI0101-RGDATE = SY-DATUM.            " 현재일

  ZSSSFI0101-FYEAR = SY-DATUM+0(4).

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_RGTOR_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_RGTOR_NAME USING VALUE(P_RGTOR)
                    CHANGING CT_NAME.
  " 등록자명 취득
  DATA: LT_EMP TYPE TABLE OF ZTSSEMP,
        LS_EMP LIKE LINE OF LT_EMP.


  SELECT PERNR LNAME FNAME DEPID
    FROM ZTSSEMP
    INTO CORRESPONDING FIELDS OF TABLE LT_EMP.

  READ TABLE LT_EMP INTO LS_EMP WITH KEY PERNR = P_RGTOR.
  CT_NAME = LS_EMP-LNAME && LS_EMP-FNAME.

**  MOVE-CORRESPONDING LT_EMP TO GT_EMP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ES_ROW_NO  text
*      -->P_E_COLUMN  text
*----------------------------------------------------------------------*
FORM GET_DOUBLE_CLICK  USING    P_ES_ROW_NO
                                P_E_COLUMN.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DATA_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_DATA_0200 .
  CLEAR ZSSSFI0102.

  ZSSSFI0102-RGDAT = SY-DATUM.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DATA_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_DATA_0300 .

  CLEAR ZSSSFI0102.


  MOVE-CORRESPONDING GS_HDATA TO ZSSSFI0102.

  PERFORM GET_RGTOR_NAME USING ZSSSFI0102-RGTOR
                         CHANGING ZSSSFI0102-RGTOR_T.

  " 자동전표일 경우, 등록자명 AutoFIBot
  IF ZSSSFI0102-RGTOR IS INITIAL.
    ZSSSFI0102-RGTOR_T = 'AutoFIBot'.
  ENDIF.

  PERFORM GET_JEI_DATA.

  PERFORM CAL_SUM_DC CHANGING ZSSSFI0104-DEBIT
                              ZSSSFI0104-CREDIT.

  ZSSSFI0104-CURKY = ZSSSFI0102-CURKY.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_DATA_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM CHECK_DATA_0200  CHANGING PV_SUBRC.

  " 필수값 유효성 체크
  IF ZSSSFI0102-RGTOR IS INITIAL OR
     ZSSSFI0102-JTYPE IS INITIAL OR
     ZSSSFI0102-RGDAT IS INITIAL.
    MESSAGE S999(ZMCSS) WITH '등록자, 전표유형, 전기일을 모두 입력해 주세요.'
     DISPLAY LIKE 'E'.
    PV_SUBRC = 4.
    RETURN.
  ENDIF.


  IF ZSSSFI0102-RGTOR IS INITIAL.

    MESSAGE S999(ZMCSS) WITH '등록자는 필수값입니다.' DISPLAY LIKE 'E'.
    PV_SUBRC = 4.
    RETURN.

  ELSEIF ZSSSFI0102-RGDAT IS INITIAL.

    MESSAGE S999(ZMCSS) WITH '전기일은 필수값입니다.' DISPLAY LIKE 'E'.
    PV_SUBRC = 4.
    RETURN.

  ELSEIF ZSSSFI0102-JTYPE IS INITIAL.

    MESSAGE S999(ZMCSS) WITH '전표 유형은 필수값입니다.' DISPLAY LIKE 'E'.
    PV_SUBRC = 4.
    RETURN.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INSERT_DATA .

  MOVE-CORRESPONDING ZSSSFI0102 TO GS_ZTSSJEH.

  " 헤더
  " 전표 번호 채번
  DATA: LV_NUM(6)   TYPE N,
        LV_NUM2(13) TYPE C.
  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      NR_RANGE_NR             = '01'
      OBJECT                  = 'ZNRSSFI01'
      TOYEAR                  = SY-DATUM+0(4)
    IMPORTING
      NUMBER                  = LV_NUM
    EXCEPTIONS  " M TYPE -> A
      INTERVAL_NOT_FOUND      = 1
      NUMBER_RANGE_NOT_INTERN = 2
      OBJECT_NOT_FOUND        = 3
      QUANTITY_IS_0           = 4
      QUANTITY_IS_NOT_1       = 5
      INTERVAL_OVERFLOW       = 6
      BUFFER_OVERFLOW         = 7
      OTHERS                  = 8.
  IF SY-SUBRC = 0.
    LV_NUM2 = 'J' && SY-DATUM+0(4) && LV_NUM.
    WRITE LV_NUM2.
  ENDIF.



  " 아이템 정보가 있을 경우만 인서트 되도록
  IF GT_IDATA IS NOT INITIAL.
    IF ZSSSFI0103-DEBIT = ZSSSFI0103-CREDIT.

      " 전기일의 연도 == 회계연도
      GS_ZTSSJEH-JENUM = LV_NUM2.
      GS_ZTSSJEH-FYEAR = ZSSSFI0102-RGDAT+0(4).
      GS_ZTSSJEH-CURKY = 'KRW'.
      " 전표 헤더 정보 인서트
      INSERT ZTSSJEH FROM GS_ZTSSJEH.
      IF SY-SUBRC <> 0.
        ROLLBACK WORK.
        MESSAGE S999(ZMCSS) WITH '이미 존재하는 전표입니다.' DISPLAY LIKE 'E'.
      ELSE.
        LOOP AT GT_IDATA INTO DATA(LV_ITEM).
          CLEAR GS_ZTSSJEI.
          MOVE-CORRESPONDING LV_ITEM TO GS_ZTSSJEI.
          GS_ZTSSJEI-JENUM = GS_ZTSSJEH-JENUM.
          GS_ZTSSJEI-FYEAR = GS_ZTSSJEH-FYEAR.
          INSERT ZTSSJEI FROM GS_ZTSSJEI.
          IF SY-SUBRC <> 0.
            ROLLBACK WORK.
            MESSAGE S999(ZMCSS) WITH '아이템 생성 오류' DISPLAY LIKE 'E'.
            EXIT.
          ENDIF.
        ENDLOOP.

        COMMIT WORK. " <-- LOOP 밖 (성공시 한 번만)
        MESSAGE S999(ZMCSS) WITH '등록 성공'.
        PERFORM GET_DATA.
        LEAVE TO SCREEN 0.
      ENDIF.
    ELSE.
      MESSAGE S999(ZMCSS) WITH '차변과 대변 금액이 일치하지 않습니다.' DISPLAY LIKE 'E'.
    ENDIF.
  ELSE.
    MESSAGE S999(ZMCSS) WITH '라인 아이템을 추가하세요.' DISPLAY LIKE 'E'.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHANGE_ALV_MODE_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CHANGE_ALV_MODE_0100 .
*  CLEAR: GV_FLAG, GV_CHECK.
*  DATA : LV_CHECK_C.

  " 헤더 정보 변경 버튼
  " HINFO 버튼 눌렀을 때만 편집모드 활성화
  GV_CHECK = GO_ALV->IS_READY_FOR_INPUT( ).

  CASE GV_CHECK.
    WHEN 0.  " 현재 조회모드일때
      CALL METHOD GO_ALV->SET_READY_FOR_INPUT " 조회모드 -> 편집모드 "
        EXPORTING
          I_READY_FOR_INPUT = 1. " Edit 활성화

*      LV_CHECK_C = GO_ALV->IS_READY_FOR_INPUT( ).

      GV_FLAG = 'X'.


    WHEN 1.  " 현재 편집모드일때
      CALL METHOD GO_ALV->SET_READY_FOR_INPUT " 편집모드 -> 조회모드 "
        EXPORTING
          I_READY_FOR_INPUT = 0. " Edit 비활성화

      GV_FLAG2 = 'X'.




*      LV_CHECK_C = GO_ALV->IS_READY_FOR_INPUT( ).
  ENDCASE.

  " ALV Refresh 필요시 호출
  CALL METHOD GO_ALV->REFRESH_TABLE_DISPLAY.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEL_ROWS_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SEL_ROWS_0100  CHANGING PV_SUBRC.
  " 행 선택 처리
  DATA: LV_LINE TYPE I.

  PERFORM GET_SELECTED_ROWS CHANGING GT_ROWS.

  DESCRIBE TABLE GT_ROWS LINES LV_LINE.
  CASE LV_LINE.
    WHEN '0'.
      MESSAGE S999(ZMCSS) WITH '수정할 데이터를 선택해주세요.' DISPLAY LIKE 'E'.
      PV_SUBRC = 4.
      RETURN.
*      EXIT.
    WHEN '1'.

      READ TABLE GT_ROWS INDEX 1 INTO GS_ROWS.

    WHEN OTHERS.
      MESSAGE S999(ZMCSS) WITH '데이터를 한 행만 선택하세요.' DISPLAY LIKE 'E'.
      PV_SUBRC = 4.
      RETURN.
  ENDCASE.

  READ TABLE GT_HDATA INTO GS_HDATA INDEX GS_ROWS-INDEX .

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FCAT_0300 .


  CLEAR: GT_FCAT.

  PERFORM FCAT USING:
        'JENUM' '1' '전표번호',
        'FYEAR' '2' '회계연도',
        'JESEQ' '3' '전표 아이템 번호',
        'GLACC' '4' 'G/L 계정',
        'ACTNM' '5' 'G/L 계정명',
        'CURKY' '6' '통화 키'.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME = 'DEBIT'.
  GS_FCAT-COL_POS = '7'.
  GS_FCAT-COLTEXT = '차변'.
  GS_FCAT-NO_SIGN = ''.
  APPEND GS_FCAT TO GT_FCAT.

  CLEAR GS_FCAT.
  GS_FCAT-FIELDNAME = 'CREDIT'.
  GS_FCAT-COL_POS = '8'.
  GS_FCAT-COLTEXT = '대변'.
  GS_FCAT-NO_SIGN = ''.
  APPEND GS_FCAT TO GT_FCAT.

*        'DEBIT' '7' '차변',
*        'CREDIT' '8' '대변'.

  CLEAR GS_FCAT.

  LOOP AT GT_FCAT INTO GS_FCAT.
    IF GS_FCAT-FIELDNAME = 'JESEQ'.
      GS_FCAT-LZERO = 'X'.
    ELSEIF GS_FCAT-FIELDNAME = 'JENUM' OR GS_FCAT-FIELDNAME = 'FYEAR' .
      GS_FCAT-NO_OUT = 'X'.
    ELSEIF GS_FCAT-FIELDNAME = 'DEBIT' OR GS_FCAT-FIELDNAME = 'CREDIT'.
      GS_FCAT-CFIELDNAME = 'CURKY'.
    ENDIF.


    MODIFY GT_FCAT FROM GS_FCAT.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_GL_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ZSSSFI0104_GLACC  text
*      <--P_ZSSSFI0104_GLACC_T  text
*----------------------------------------------------------------------*
FORM GET_GL_NAME  USING    P_GLACC
                  CHANGING CT_NAME.


  DATA: LT_GL TYPE TABLE OF ZTSSACNT,
        LS_GL LIKE LINE OF LT_GL.

  SELECT GLACC ACTNM
    FROM ZTSSACNT
    INTO CORRESPONDING FIELDS OF TABLE LT_GL.

  READ TABLE LT_GL INTO LS_GL WITH KEY GLACC = P_GLACC.
  CT_NAME = LS_GL-ACTNM.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CAL_SUM_DC
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CAL_SUM_DC CHANGING CV_DEBIT
                                                   CV_CREDIT.
  " 차/대변 총 금액
  DATA: LV_DEBIT  TYPE ZSSSFI0104-DEBIT,
        LV_CREDIT TYPE ZSSSFI0104-CREDIT.

  LOOP AT GT_ADATA INTO DATA(LS_ADATA).
    LV_DEBIT = LV_DEBIT + LS_ADATA-DEBIT.
    LV_CREDIT = LV_CREDIT + LS_ADATA-CREDIT.
  ENDLOOP.

  CV_DEBIT = LV_DEBIT.
  CV_CREDIT = LV_CREDIT.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_RGTOR_DEPID
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CHECK_RGTOR_DEPID USING VALUE(P_RGTOR).

  " 등록자 조건: 회계부서 사원만 가능
  " select single 로 가져와서 체크

  IF P_RGTOR IS NOT INITIAL.

    DATA LV_DEPID TYPE C LENGTH 4.

    " ZSSSFI0102-RGTOR 값에 해당하는 사원의 부서를 찾아서 읽음
    SELECT SINGLE DEPID
      INTO @LV_DEPID
      FROM ZTSSEMP
      WHERE PERNR = @P_RGTOR.

    " 해당되는 사원의 부서가 'D001'이 아닐 경우 에러
    IF SY-SUBRC = 0.
      IF LV_DEPID <> 'D001'.
        MESSAGE S999(ZMCSS) WITH '등록자는 회계부서 사원만 가능합니다. ' DISPLAY LIKE 'E'.
        GV_SUBRC = 4.
        RETURN.

      ELSE.

        MESSAGE S999(ZMCSS) WITH '회계부서 사원 확인 되었습니다.'.
      ENDIF.

    ELSE.

      MESSAGE S999(ZMCSS) WITH '등록자 정보가 존재하지 않습니다.' DISPLAY LIKE 'E'.
      RETURN.

    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EVENT_OPTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM EVENT_OPTION .

  " Enter 눌렀을 때
  GO_ALV->REGISTER_EDIT_EVENT(
    EXPORTING
      I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER
   ).

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_DATA_CHANGED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ER_DATA_CHANGED  text
*      -->P_E_ONF4  text
*      -->P_E_ONF4_BEFORE  text
*      -->P_E_ONF4_AFTER  text
*----------------------------------------------------------------------*
FORM ALV_DATA_CHANGED
  USING
    PR_DATA_CHANGED TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL
    P_ONF4
    P_ONF4_BEFORE
    P_ONF4_AFTER.

  DATA:
    LT_GOOD_CELLS TYPE LVC_T_MODI,
    LS_GOOD_CELL  TYPE LVC_S_MODI.

  LT_GOOD_CELLS[] = PR_DATA_CHANGED->MT_GOOD_CELLS[].


  LOOP AT LT_GOOD_CELLS INTO LS_GOOD_CELL.

    IF LS_GOOD_CELL-FIELDNAME EQ 'STEXT'.
      " 유효성 검사 ~~
      " SELECT ~~
***
***      IF SY-SUBRC EQ 0.
***        " 다른 필드 값 변경
***        CALL METHOD PR_DATA_CHANGED->MODIFY_CELL
***          EXPORTING
***            I_ROW_ID = LS_GOOD_CELL-ROW_ID  " Row ID
***            I_FIELDNAME = 'STEXT'           " Field Name
***            I_VALUE = '값 입력'.
***      ENDIF.

    ENDIF.


  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_0300 .

  CALL METHOD GO_ALV2->SET_TABLE_FOR_FIRST_DISPLAY
    EXPORTING
*     I_BUFFER_ACTIVE =
*     I_BYPASSING_BUFFER   =
*     I_CONSISTENCY_CHECK  =
*     I_STRUCTURE_NAME     =
*     IS_VARIANT      =
*     I_SAVE          =
*     I_DEFAULT       = 'X'
      IS_LAYOUT       = GS_LAYO
*     IS_PRINT        =
*     IT_SPECIAL_GROUPS    =
*     IT_TOOLBAR_EXCLUDING = GT_EXCLUDE
*     IT_HYPERLINK    =
*     IT_ALV_GRAPHICS =
*     IT_EXCEPT_QINFO =
*     IR_SALV_ADAPTER =
    CHANGING
      IT_OUTTAB       = GT_ADATA
      IT_FIELDCATALOG = GT_FCAT
      IT_SORT         = GT_SORT
*     IT_FILTER       =
*  EXCEPTIONS
*     INVALID_PARAMETER_COMBINATION = 1
*     PROGRAM_ERROR   = 2
*     TOO_MANY_LINES  = 3
*     OTHERS          = 4
    .
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_ALV_0300
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_ALV_0300 .


  " 객체가 있을 시 미생성
  IF GO_CON2 IS NOT INITIAL.
    RETURN.
  ENDIF.

  CREATE OBJECT GO_CON2
    EXPORTING
*     PARENT                      =
      CONTAINER_NAME              = 'CON2'
*     STYLE                       =
*     LIFETIME                    = lifetime_default
*     REPID                       =
*     DYNNR                       =
*     NO_AUTODEF_PROGID_DYNNR     =
    EXCEPTIONS
      CNTL_ERROR                  = 1
      CNTL_SYSTEM_ERROR           = 2
      CREATE_ERROR                = 3
      LIFETIME_ERROR              = 4
      LIFETIME_DYNPRO_DYNPRO_LINK = 5
      OTHERS                      = 6.
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CREATE OBJECT GO_ALV2
    EXPORTING
*     I_SHELLSTYLE      = 0
*     I_LIFETIME        =
      I_PARENT          = GO_CON2
*     I_APPL_EVENTS     = space
*     I_PARENTDBG       =
*     I_APPLOGPARENT    =
*     I_GRAPHICSPARENT  =
*     I_NAME            =
*     I_FCAT_COMPLETE   = SPACE
    EXCEPTIONS
      ERROR_CNTL_CREATE = 1
      ERROR_CNTL_INIT   = 2
      ERROR_CNTL_LINK   = 3
      ERROR_DP_CREATE   = 4
      OTHERS            = 5.
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_JEI_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_JEI_DATA .

  " 기존 아이템 데이터 로드

  " 입력되었을 경우
  IF ZSSSFI0103-GLACC IS NOT INITIAL.

    GS_IDATA-GLACC = ZSSSFI0103-GLACC.
    GS_IDATA-ACTNM = ZSSSFI0103-ACTNM.
    GS_IDATA-DEBIT = ZSSSFI0103-DEBIT.
    GS_IDATA-CREDIT = ZSSSFI0103-CREDIT.
    GS_IDATA-CURKY = 'KRW'.

    " 아이템 번호
    GS_IDATA-JESEQ = GS_IDATA-JESEQ + 1.
    APPEND GS_IDATA TO GT_IDATA.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_EVENT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_EVENT .

  CREATE OBJECT GO_EVENT.

  SET HANDLER:
  GO_EVENT->DATA_CHANGED FOR GO_ALV,
  GO_EVENT->HANDLE_HOTSPOT_CLICK FOR GO_ALV.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MODIFY_RANGE .

  CLEAR: GS_RFYEAR, GT_RFYEAR.
  IF ZSSSFI0101-FYEAR IS NOT INITIAL.
    GS_RFYEAR-SIGN   = 'I'.
    GS_RFYEAR-OPTION = 'EQ'.
    GS_RFYEAR-LOW    = ZSSSFI0101-FYEAR.
    APPEND GS_RFYEAR TO GT_RFYEAR.
  ENDIF.

  CLEAR: GS_RRGDAT, GT_RRGDAT.
  IF ZSSSFI0101-RGDATB IS NOT INITIAL AND ZSSSFI0101-RGDATE IS NOT INITIAL.
    GS_RRGDAT-SIGN   = 'I'.
    GS_RRGDAT-OPTION = 'BT'.
    GS_RRGDAT-LOW    = ZSSSFI0101-RGDATB.
    GS_RRGDAT-HIGH   = ZSSSFI0101-RGDATE.
    APPEND GS_RRGDAT TO GT_RRGDAT.
  ENDIF.

  CLEAR: GS_RJENUM, GT_RJENUM.
  IF ZSSSFI0101-JENUM IS NOT INITIAL.
    GS_RJENUM-SIGN   = 'I'.
    GS_RJENUM-OPTION = 'EQ'.
    GS_RJENUM-LOW    = ZSSSFI0101-JENUM.
    APPEND GS_RJENUM TO GT_RJENUM.
  ENDIF.

  CLEAR: GS_RRGTOR, GT_RRGTOR.
  IF ZSSSFI0101-RGTOR IS NOT INITIAL.
    GS_RRGTOR-SIGN   = 'I'.
    GS_RRGTOR-OPTION = 'EQ'.
    GS_RRGTOR-LOW    = ZSSSFI0101-RGTOR.
    APPEND GS_RRGTOR TO GT_RRGTOR.
  ENDIF.

  CLEAR: GS_RJTYPE, GT_RJTYPE.
  IF ZSSSFI0101-JTYPE IS NOT INITIAL.
    GS_RJTYPE-SIGN   = 'I'.
    GS_RJTYPE-OPTION = 'EQ'.
    GS_RJTYPE-LOW    = ZSSSFI0101-JTYPE.
    APPEND GS_RJTYPE TO GT_RJTYPE.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHANGE_ALV_MODE_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CHANGE_ALV_MODE_0200 .
  " 라인아이템 수정
  " 수정 버튼 눌렀을 때만 편집모드 활성화
  GV_CHECK = GO_ALV3->IS_READY_FOR_INPUT( ).

  CASE GV_CHECK.
    WHEN 0.  " 조회모드일때 "
      CALL METHOD GO_ALV3->SET_READY_FOR_INPUT " 조회모드 -> 편집모드 "
        EXPORTING
          I_READY_FOR_INPUT = 1. " Edit 활성화 "

      GV_FLAG = 'X'.

    WHEN 1.  " 편집모드일때 "


      CALL METHOD GO_ALV3->SET_READY_FOR_INPUT " 편집모드 -> 조회모드 "
        EXPORTING
          I_READY_FOR_INPUT = 0. " Edit 비활성화 "


  ENDCASE.


  " ALV Refresh 필요시 호출
  CALL METHOD GO_ALV3->REFRESH_TABLE_DISPLAY.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEL_ROWS_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SEL_ROWS_0200 .

  CLEAR: GT_ROWS.

  CALL METHOD GO_ALV3->GET_SELECTED_ROWS
    IMPORTING
      ET_INDEX_ROWS = GT_ROWS.

  DESCRIBE TABLE GT_ROWS LINES LV_LINE2.
  CASE LV_LINE2.
    WHEN '0'.
      MESSAGE S999(ZMCSS) WITH '수정할 데이터를 선택해주세요.' DISPLAY LIKE 'E'.
      RETURN.
    WHEN '1'.

      READ TABLE GT_ROWS INDEX 1 INTO GS_ROWS.

    WHEN OTHERS.
      MESSAGE S999(ZMCSS) WITH '데이터를 한 행만 선택하세요.' DISPLAY LIKE 'E'.
      RETURN.
  ENDCASE.


  READ TABLE GT_IDATA INTO GS_IDATA INDEX GS_ROWS-INDEX .

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EVENT_OPTION_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM EVENT_OPTION_0200 .

  " Enter 눌렀을 때
  GO_ALV3->REGISTER_EDIT_EVENT(
    EXPORTING
      I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER
   ).

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_EVENT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_EVENT_0200 .

  CREATE OBJECT GO_EVENT.

  SET HANDLER:
  GO_EVENT->DATA_CHANGED FOR GO_ALV3.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_DATA_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GV_SUBRC  text
*----------------------------------------------------------------------*
FORM CHECK_DATA_0100  CHANGING PV_SUBRC.

  IF ZSSSFI0101-JENUM IS NOT INITIAL.
    ZSSSFI0101-FYEAR = ZSSSFI0101-JENUM+1(4).
    MESSAGE S999(ZMCSS) WITH '전표번호는 회계연도와 함께 조회됩니다.'.
  ENDIF.

  " 날짜 조건
  IF ZSSSFI0101-FYEAR IS NOT INITIAL
    AND ZSSSFI0101-RGDATB IS NOT INITIAL
    AND ZSSSFI0101-RGDATE IS NOT INITIAL.
    " 전기일이 회계연도 범위 내에 없으면 에러
    IF ZSSSFI0101-FYEAR >= ZSSSFI0101-RGDATB+0(4)
      AND ZSSSFI0101-FYEAR <= ZSSSFI0101-RGDATE+0(4).

    ELSE.
      MESSAGE S999(ZMCSS) WITH '전기일이 회계연도 범위 내에 있어야 합니다.' DISPLAY LIKE  'E'.
      PV_SUBRC = 4.
      RETURN.
    ENDIF.
  ENDIF.

  IF ZSSSFI0101-RGDATB > ZSSSFI0101-RGDATE.
    MESSAGE S999(ZMCSS) WITH '전기일을 다시 확인해 주세요.' DISPLAY LIKE 'E'.
    PV_SUBRC = 4.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_RGTOR_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_RGTOR_INFO_0200 .
  PERFORM GET_RGTOR_NAME USING ZSSSFI0102-RGTOR
                         CHANGING ZSSSFI0102-RGTOR_T.

  PERFORM CHECK_RGTOR_DEPID USING ZSSSFI0102-RGTOR.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_SORT .

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DOMAIN_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0299   text
*      <--P_GT_DOMAIN  text
*----------------------------------------------------------------------*
FORM GET_DOMAIN_VALUE  USING    VALUE(PV_DOMNAME)
                       CHANGING PT_DOMAIN TYPE DD07V_T.
  CALL FUNCTION 'GET_DOMAIN_VALUES'
    EXPORTING
      DOMNAME    = PV_DOMNAME
    TABLES
      VALUES_TAB = PT_DOMAIN.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_REFDOC_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_REFDOC_DATA .


  SELECT GRNUM JENUM
    FROM ZTSSGRH
    INTO CORRESPONDING FIELDS OF TABLE GT_ZTSSGRH.

  SELECT IVNUM JENUM APNUM
    FROM ZTSSMIVH
    INTO CORRESPONDING FIELDS OF TABLE GT_ZTSSMIVH.

  SELECT GINUM JENUM
    FROM ZTSSGIH
    INTO CORRESPONDING FIELDS OF TABLE GT_ZTSSGIH.

  SELECT BINUM JENUM ARNUM
    FROM ZTSSSIVH
    INTO CORRESPONDING FIELDS OF TABLE GT_ZTSSSIVH.



ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_TOPRC_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_TOPRC_INFO .
  SELECT JENUM JESEQ DEBIT CREDIT
         FROM ZTSSJEI
         INTO CORRESPONDING FIELDS OF TABLE GT_TOPRC.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_RGTOR_INFO_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_RGTOR_INFO_0100 .
  PERFORM GET_RGTOR_NAME USING ZSSSFI0101-RGTOR
                         CHANGING ZSSSFI0101-RGTOR_T.

  PERFORM CHECK_RGTOR_DEPID USING ZSSSFI0101-RGTOR.


  " 휴직이나 퇴사인 회계부서 사원 체크

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
