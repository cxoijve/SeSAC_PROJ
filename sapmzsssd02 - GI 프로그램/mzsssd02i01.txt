*&---------------------------------------------------------------------*
*&  Include           MZSSSD02I01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit INPUT.
  CASE ok_code.
    WHEN 'CANC'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE ok_code.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'ENTER'.

      " 조건에 따라 이름 받아오기
      PERFORM get_emp_name :  USING     zssssd0201-rgtor
                              CHANGING  zssssd0201-rname,
                              USING     zssssd0202-rgtor
                              CHANGING  zssssd0202-rname,
                              USING     zssssd0203-rgtor
                              CHANGING  zssssd0203-rname.

      " 조건에 따라 자재 받아오기
      PERFORM get_mat_name USING zssssd0204-matnr
                           CHANGING zssssd0204-matnm.


    WHEN 'M300'.

      CALL SCREEN 300.

      CLEAR : zssssd0207 , gt_info_0300[], gv_ginum_0300.
      " 300 -> 500 Set Screen 으로 인한 Clear
      CLEAR : gs_info_0500h, gt_info_0500[], gs_info_o_0500h, gt_info_o_0500[], gv_stseq_0500.

    WHEN 'SEARCH'.

      PERFORM check_cond_0100 USING   zssssd0201
                                      zssssd0202
                                      zssssd0203
                                      zssssd0204
                             CHANGING gv_subrc.

      IF gv_subrc <> 0.
        RETURN.
      ENDIF.

      " 검색 조건을 바탕으로 Range 변수 세팅.
      PERFORM set_range_0200 USING zssssd0201
                                   zssssd0202
                                   zssssd0203
                                   zssssd0204
                             CHANGING gv_subrc.
      IF gv_subrc <> 0.
        RETURN.
      ENDIF.

      " 검색 조건을 바탕으로 데이터 쿼리
      PERFORM get_info_0200 TABLES gt_info_0200
                            USING  zssssd0201
                                   zssssd0202
                                   zssssd0203
                                   zssssd0204
                            CHANGING gv_subrc.

      IF gv_subrc <> 0.
        RETURN.
      ENDIF.

      " 검색 조건을 바탕으로 Screen 200번의 ALV Field Catalog 설정
      PERFORM set_fcat_0200 TABLES gt_fcat_0200
                            USING  zssssd0201
                                   zssssd0202
                                   zssssd0203
                                   zssssd0204.

      PERFORM set_sort_0200 TABLES gt_sort_0200
                            USING  zssssd0201
                                   zssssd0202
                                   zssssd0203
                                   zssssd0204.

      " 검색조건 테스트 스크린
      " CALL SCREEN 105.
      CALL SCREEN 200.

      " 검색 조건 클리어
      CLEAR : zssssd0201, zssssd0202, zssssd0203, zssssd0204.
      " Screen 200번의 ALV Field Catalog 클리어
      CLEAR : gt_fcat_0200[], gt_sort_0200[].
      " Screen 200번의 데이터 클리어
      CLEAR : gt_info_0200[].

    WHEN 'T101' OR 'T102' OR 'T103' OR 'T104'.
      " 검색 조건 클리어
      CLEAR : zssssd0201, zssssd0202, zssssd0203, zssssd0204.
      ts_0100-activetab = ok_code.

  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0105  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0105 INPUT.
  CASE ok_code.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.
  CASE ok_code.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'ENTER'.

    WHEN 'M500'.

      " 라인 하나 골랐는지 체크
      PERFORM select_row_0200 TABLES   gt_info_0200
                              CHANGING gv_ginum_0200
                                       gv_subrc.

      IF gv_subrc <> 0.
        RETURN.
      ENDIF.

      " CASE - 미출고 문서
      IF gv_ginum_0200 IS INITIAL.
        MESSAGE i999(zmcss) WITH '미출고 문서입니다.'.
        RETURN.
      ENDIF.

      " CASE - 출고 문서
      " 라인 하나에 대한 세부 정보 쿼리
      PERFORM get_info_0500 TABLES gt_info_0500
                            USING gv_ginum_0200
                            CHANGING gs_info_0500h
                                     gv_subrc.
      IF gv_subrc <> 0.
        RETURN.
      ENDIF.

      PERFORM set_default_0500 TABLES   gt_info_0500
                                        gt_info_o_0500
                               USING    gs_info_0500h
                               CHANGING gs_info_o_0500h
                                        gv_stseq_0500.
      CLEAR gv_eflag_0500.

      CALL SCREEN 500.

      " gt_info_500 과 관련 데이터 클리어
      CLEAR : gv_ginum_0200,
              gs_info_0500h, gt_info_0500[], gs_info_o_0500h, gt_info_o_0500[], gv_stseq_0500.

      " 재쿼리
      PERFORM get_info_0200 TABLES gt_info_0200
                            USING  zssssd0201
                                   zssssd0202
                                   zssssd0203
                                   zssssd0204
                            CHANGING gv_subrc.

      IF gv_subrc <> 0.
        MESSAGE a999(zmcss) WITH '변경후 재쿼리 중 치명적 에러 발생!'.
      ENDIF.

      " 검색 조건을 바탕으로 Screen 200번의 ALV Field Catalog 설정
      PERFORM set_fcat_0200 TABLES gt_fcat_0200
                            USING  zssssd0201
                                   zssssd0202
                                   zssssd0203
                                   zssssd0204.

      PERFORM set_sort_0200 TABLES gt_sort_0200
                            USING  zssssd0201
                                   zssssd0202
                                   zssssd0203
                                   zssssd0204.

  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0500  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0500 INPUT.
  CASE ok_code.
    WHEN 'BACK'.
      IF SY-CALLD = 'X'.
        LEAVE PROGRAM.
      ENDIF.

      IF gv_eflag_0500 = 'X'.
        MESSAGE s999(zmcss) WITH '현재 출고 문서를 수정중입니다'.
      ELSE.
        LEAVE TO SCREEN 0.
      ENDIF.

    WHEN 'ENTER'.
      PERFORM check_gi_updatability TABLES gt_info_o_0500
                                           gt_info_0500
                                    USING  gs_info_o_0500h
                                           gs_info_0500h
                                    CHANGING gv_subrc.

      PERFORM get_emp_name USING gs_info_0500h-rgtor
                         CHANGING gs_info_0500h-ename.


    WHEN 'SVEDIT'. " 변경사항 저장
      " 변경 저장 가능여부 판단
      PERFORM check_gi_updatability TABLES gt_info_o_0500
                                           gt_info_0500
                                    USING  gs_info_o_0500h
                                           gs_info_0500h
                                    CHANGING gv_subrc.
      " UPDATE
      CASE gv_subrc.
        WHEN '0'. " 라인 아이템이 있는 상태
          PERFORM update_gi_with_items TABLES gt_info_0500
                                       CHANGING gs_info_0500h
                                                gv_subrc.

        WHEN '4'. " INVALID
          MESSAGE s999(zmcss) WITH '변경이 취소되었습니다'.
          RETURN.

        WHEN '5'. " 라인 아이템이 없는 상태

          PERFORM update_gi_without_items TABLES gt_info_0500
                                          CHANGING gs_info_0500h
                                                   gv_subrc.

        WHEN OTHERS.
          MESSAGE a999(zmcss) WITH '<UPDATE>' 'UNKNOWN ERROR'.
      ENDCASE.

      " 변경 모드 복구
      MESSAGE i999(zmcss) WITH '출고 문서' gs_info_o_0500h-ginum '의 변경에 성공하였습니다.'.
      CLEAR gv_eflag_0500.

      " 재쿼리
      PERFORM get_info_0500 TABLES    gt_info_0500
                            USING     gs_info_o_0500h-ginum
                            CHANGING  gs_info_0500h
                                      gv_subrc.
      IF gv_subrc <> 0.
        MESSAGE a999(zmcss) WITH '변경중 치명적 에러 발생!'.
      ENDIF.

      " 변경 후 데이터 저장
      PERFORM set_default_0500 TABLES gt_info_0500
                                      gt_info_o_0500
                               USING  gs_info_0500h
                               CHANGING gs_info_o_0500h
                                        gv_stseq_0500.

    WHEN 'STEDIT'. " 변경 시작
      " 변경 가능여부 판단
      IF gs_info_o_0500h-binum IS INITIAL.
        gv_eflag_0500 = 'X'.
      ELSE.
        MESSAGE i999(zmcss) WITH '청구 완료된 출고 문서는 수정할 수 없습니다'.
        RETURN.
      ENDIF.

    WHEN 'INSITM'. " 아이템 추가
      CASE gv_eflag_0500.
        WHEN 'X'.
          " 301
          CALL SCREEN 301 STARTING AT 5 3 ENDING AT 35 3.
        WHEN OTHERS.
          MESSAGE a999(zmcss) WITH '<UCOMM_500>' 'EFLAG ERROR'.
      ENDCASE.


    WHEN 'DELITM'. " 아이템 삭제
      " Row 선택 및 삭제
      PERFORM delete_info_zssssd0206 TABLES gt_info_0500
                                     USING  'SELECTED'
                                            go_alv_0500
                                     CHANGING gv_subrc.

      IF gv_subrc = 0.
        MESSAGE s999(zmcss) WITH '선택한 아이템이 삭제되었습니다'.
      ENDIF.

    WHEN 'CLRITM'. " 아이템 초기화
      PERFORM delete_info_zssssd0206 TABLES gt_info_0500
                                     USING  'ALL'
                                            go_alv_0500
                                     CHANGING gv_subrc.

      IF gv_subrc = 0.
        MESSAGE s999(zmcss) WITH '모든 아이템이 삭제되었습니다'.
      ENDIF.

    WHEN 'JEDTL'.
      "MESSAGE i999(zmcss) WITH 'JE : ' gs_info_0500h-jenum'/' gs_info_0500h-fyear.
      PERFORM call_je USING gs_info_0500h-jenum.
    WHEN 'BIDTL'.
      MESSAGE i999(zmcss) WITH 'BI : ' gs_info_0500h-binum.
    WHEN 'BJDTL'.
      "MESSAGE i999(zmcss) WITH 'JE : ' gs_info_0500h-bjnum '/' gs_info_0500h-bifyr.
      PERFORM call_je USING gs_info_0500h-bjnum.
    WHEN 'ARDTL'.
      "MESSAGE i999(zmcss) WITH 'JE : ' gs_info_0500h-arnum '/' gs_info_0500h-arfyr.
      PERFORM call_je USING gs_info_0500h-arnum.
    WHEN 'PEDTL'.
      PERFORM call_per USING gs_info_0500h-rgtor.
  ENDCASE.

  IF gt_info_0500 IS NOT INITIAL.
    PERFORM set_giseq_update TABLES gt_info_0500
                             USING  gv_stseq_0500.
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0300  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0300 INPUT.
  CASE ok_code.
    WHEN 'BACK'.
      MESSAGE s999(zmcss) WITH '신규 출고 문서 생성중 입니다.'.
    WHEN 'ENTER'.

      " 유효성 검사
      PERFORM check_gi_insertability TABLES gt_info_0300
                                     USING  zssssd0207
                                     CHANGING gv_subrc.

      CASE gv_subrc.
        WHEN '0'. " 라인 아이템이 있는 상태
          RETURN.
        WHEN '4'. " INVALID
          MESSAGE s999(zmcss) WITH '출고 문서에 문제가 있습니다'.
          CLEAR zssssd0207-stext.
          RETURN.
        WHEN '5'. " 라인 아이템이 없는 상태*
          RETURN.
        WHEN OTHERS.
          MESSAGE a999(zmcss) WITH '<ISSUE>' 'UNKNOWN ERROR'.
      ENDCASE.

    WHEN 'ISSUE'.

      CLEAR : gv_ginum_0300.

      " 유효성 검사
      PERFORM check_gi_insertability TABLES gt_info_0300
                                     USING  zssssd0207
                                     CHANGING gv_subrc.

      CASE gv_subrc.
        WHEN '0'. " 라인 아이템이 있는 상태
          PERFORM insert_gi_with_items TABLES gt_info_0300
                                       CHANGING zssssd0207
                                                gv_subrc.

        WHEN '4'. " INVALID
          RETURN.
        WHEN '5'. " 라인 아이템이 없는 상태*
          PERFORM insert_gi_without_items USING zssssd0207
                                          CHANGING gv_subrc.


        WHEN OTHERS.
          MESSAGE a999(zmcss) WITH '<ISSUE>' 'UNKNOWN ERROR'.
      ENDCASE.

      " M500
      IF gv_subrc = 0.
        " 라인 하나에 대한 세부 정보 쿼리
        PERFORM get_info_0500 TABLES   gt_info_0500
                              USING    gv_ginum_0300
                              CHANGING gs_info_0500h
                                       gv_subrc.
        IF gv_subrc <> 0.
          RETURN.
        ENDIF.

        PERFORM set_default_0500 TABLES   gt_info_0500
                                          gt_info_o_0500
                                 USING    gs_info_0500h
                                 CHANGING gs_info_o_0500h
                                          gv_stseq_0500.

        CLEAR gv_eflag_0500.
        LEAVE TO SCREEN 500.
      ENDIF.

    WHEN 'INSITM'. " 아이템 추가

      CALL SCREEN 301 STARTING AT 5 3 ENDING AT 35 3.

    WHEN 'DELITM'. " 아이템 삭제

      " Row 선택 및 삭제
      PERFORM delete_info_zssssd0206 TABLES   gt_info_0300
                                     USING    'SELECTED'
                                              go_alv_0300
                                     CHANGING gv_subrc.

      IF gv_subrc = 0.
        MESSAGE s999(zmcss) WITH '선택한 아이템이 삭제되었습니다'.
      ENDIF.

    WHEN 'CLRITM'. " 아이템 초기화

      PERFORM delete_info_zssssd0206 TABLES   gt_info_0300
                                     USING    'ALL'
                                              go_alv_0300
                                     CHANGING gv_subrc.

      IF gv_subrc = 0.
        MESSAGE s999(zmcss) WITH '모든 아이템이 삭제되었습니다'.
      ENDIF.

  ENDCASE.

  IF gt_info_0300 IS NOT INITIAL.
    PERFORM set_giseq TABLES gt_info_0300
                      USING '001'.
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0301  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0301 INPUT.
  CASE ok_code.

    WHEN 'BYSO'. "SO로 선택
      SET SCREEN 0.
      CALL SCREEN 302 STARTING AT 5 3 ENDING AT 100 25.

      "0302 조건 Clear
      CLEAR : gt_info_0302[], zssssd0209.

    WHEN 'BYCUS'. "고객으로 선택
      SET SCREEN 0.
      CALL SCREEN 303 STARTING AT 5 3 ENDING AT 100 25.

      "0303 조건 Clear
      CLEAR : gt_info_0303[], zssssd0208.

    WHEN 'CANCEL'.
      SET SCREEN 0.
      MESSAGE s999(zmcss) WITH '사용자가 액션을 취소하였습니다.'.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0302  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0302 INPUT.
  CASE ok_code.

    WHEN 'SEARCH'.
      CLEAR gt_info_0302[].

      "CHECK CONDITION 0302.
      IF zssssd0209-sonum IS INITIAL.
        MESSAGE i999(zmcss) WITH '검색 조건을 입력해 주십시오'.
        RETURN.
      ENDIF.

      CASE gv_eflag_0500.
        WHEN 'X'. " 500
          "Query 500
          PERFORM get_so_with_so TABLES gt_info_0302
                                        gt_info_0500
                                 USING  zssssd0209
                               CHANGING gv_subrc.
        WHEN ''. " 300
          "QUERY 300
          PERFORM get_so_with_so TABLES gt_info_0302
                                        gt_info_0300
                                 USING  zssssd0209
                                 CHANGING gv_subrc.
      ENDCASE.

      IF gv_subrc <> 0.
        CASE gv_subrc.
          WHEN '4'.
            MESSAGE i999(zmcss) WITH '조회 결과가 없습니다'.
          WHEN '5'.
            MESSAGE i999(zmcss) WITH '이미 해당 판매오더에 대한 출고 아이템을 추가 하였습니다.'.
        ENDCASE.
        RETURN.
      ENDIF.

    WHEN 'CANCEL'.
      SET SCREEN 0.
      MESSAGE s999(zmcss) WITH '사용자가 액션을 취소하였습니다.'.

    WHEN 'CONTINUE'.

      CASE gv_eflag_0500.
        WHEN 'X'. "500
          PERFORM set_zssssd0206_from_0302 TABLES gt_info_0500
                                           CHANGING gv_subrc.
        WHEN ''. "300
          PERFORM set_zssssd0206_from_0302 TABLES gt_info_0300
                                           CHANGING gv_subrc.
      ENDCASE.


      IF gv_subrc = 0.
        SET SCREEN 0.
        MESSAGE s999(zmcss) WITH '출고 수량은 판매오더의 잔여 출고 수량으로 자동 설정됩니다.'.
      ENDIF.
  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0303  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0303 INPUT.
  CASE ok_code.
    WHEN 'SEARCH'.

      CLEAR gt_info_0303[].

      " CHECK CONDITION 0303
      PERFORM check_cond_0303 USING zssssd0208
                              CHANGING gv_subrc.

      IF gv_subrc <> 0.
        RETURN.
      ENDIF.

      CASE gv_eflag_0500.
        WHEN 'X'. " 500
          " QUERY 303
          PERFORM get_so_with_cust TABLES gt_info_0303
                                          gt_info_0500
                                   CHANGING gv_subrc.
        WHEN ''. " 300
          " QUERY 303
          PERFORM get_so_with_cust TABLES gt_info_0303
                                          gt_info_0300
                                   CHANGING gv_subrc.
      ENDCASE.


      IF gv_subrc <> 0.
        CASE gv_subrc.
          WHEN '4'.
            MESSAGE i999(zmcss) WITH '조회 결과가 없습니다'.
          WHEN '5'.
            MESSAGE i999(zmcss) WITH '이미 해당 판매오더에 대한 출고 아이템을 추가 하였습니다.'.
        ENDCASE.
        RETURN.
      ENDIF.

    WHEN 'CANCEL'.
      SET SCREEN 0.
      MESSAGE s999(zmcss) WITH '사용자가 액션을 취소하였습니다.'.

    WHEN 'CONTINUE'.

      CASE gv_eflag_0500.
        WHEN 'X'. "500
          PERFORM set_zssssd0206_from_0303 TABLES gt_info_0500
                                           CHANGING gv_subrc.
        WHEN ''. "300
          PERFORM set_zssssd0206_from_0303 TABLES gt_info_0300
                                           CHANGING gv_subrc.
      ENDCASE.

      IF gv_subrc = 0.
        SET SCREEN 0.
        MESSAGE s999(zmcss) WITH '출고 수량은 판매오더의 잔여 출고 수량으로 자동 설정됩니다.'.
      ENDIF.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  EXIT_WITH_WARNING  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit_with_warning INPUT.
  CASE ok_code.
    WHEN 'CANC'.
      " 취소 모달
      PERFORM canc.

    WHEN 'EXIT'.
      " 종료 모달
      PERFORM exit.
  ENDCASE.
ENDMODULE.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
