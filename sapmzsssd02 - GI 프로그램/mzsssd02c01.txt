*&---------------------------------------------------------------------*
*&  Include           MZSSSD02C01
*&---------------------------------------------------------------------*

CLASS lcl_handler IMPLEMENTATION.
  METHOD on_hotspot_click.
    "MESSAGE i016(pn) WITH 'HOTSPOT_CLICK:' me->hname e_column_id-fieldname es_row_no-row_id.
    DATA : ls_info TYPE zssssd0206.
    DATA : lv_matnr TYPE zessmatnr,
           lv_sonum TYPE zesssonum.

    CASE me->hname.
      WHEN '0300'.
        READ TABLE gt_info_0300 INTO ls_info INDEX es_row_no-row_id.
        lv_matnr = ls_info-somnr.
        lv_sonum = ls_info-sonum.
      WHEN '0500'.
        READ TABLE gt_info_0500 INTO ls_info INDEX es_row_no-row_id.
        lv_matnr = ls_info-somnr.
        lv_sonum = ls_info-sonum.
    ENDCASE.

    IF lv_matnr IS INITIAL OR lv_sonum IS INITIAL.
      MESSAGE i999(zmcss) WITH '선택한 Hotspot의 상세정보를 확인할 수 없습니다.'.
      RETURN.
    ENDIF.

    CASE e_column_id-fieldname.
      WHEN 'SOMNR'.
        CALL FUNCTION 'Z_CALL_MATERIAL_DETAIL'
          EXPORTING
            iv_matnr     = lv_matnr
            iv_ismodal   = 'X'
          EXCEPTIONS
            query_failed = 1
            OTHERS       = 2.
        IF sy-subrc <> 0.
          MESSAGE i999(zmcss) WITH '선택한 자재 정보' lv_matnr '를 확인할 수 없습니다.'.
          RETURN.
        ENDIF.

      WHEN 'SONUM'.
        MESSAGE i999(zmcss) WITH lv_sonum.
    ENDCASE.

  ENDMETHOD.

  METHOD on_toolbar.
*    DATA ls_button TYPE stb_button.
*    CASE sy-dynnr.
*      WHEN '0300'.
*        ls_button-butn_type = '3'. "Separator
*        APPEND ls_button TO e_object->mt_toolbar.
*
*        CLEAR ls_button.
*        ls_button-function = 'ENDEDIT'.
*        ls_button-icon = icon_change.
*        ls_button-butn_type = '0'.
*        ls_button-text = '입력 완료'.
*        APPEND ls_button TO e_object->mt_toolbar.
*      WHEN '0500'.
*        IF gv_eflag_0500 EQ 'X'.
*          ls_button-butn_type = '3'. "Separator
*          APPEND ls_button TO e_object->mt_toolbar.
*
*          CLEAR ls_button.
*          ls_button-function = 'ENDEDIT'.
*          ls_button-icon = icon_change.
*          ls_button-butn_type = '0'.
*          ls_button-text = '입력 완료'.
*          APPEND ls_button TO e_object->mt_toolbar.
*        ENDIF.
*    ENDCASE.

  ENDMETHOD.

  METHOD on_user_command.
    DATA: lt_row_no TYPE lvc_t_roid,
          ls_row_no LIKE LINE OF lt_row_no.

    CASE e_ucomm.
      WHEN 'ENDEDIT'.
        MESSAGE s000(ymc00) WITH '변경 사항이 반영되었습니다'.
        CALL METHOD cl_gui_cfw=>set_new_ok_code
          EXPORTING
            new_code = 'ENTER'.
    ENDCASE.
  ENDMETHOD.

  METHOD on_data_changed.
    DATA ls_cell LIKE LINE OF er_data_changed->mt_good_cells.

    DATA ls_info TYPE zssssd0206.

    DATA : lv_msgamount TYPE string,
           lv_msgstoid  TYPE string,
           lv_msgmatnm  TYPE string.

    LOOP AT er_data_changed->mt_good_cells INTO ls_cell.
      CASE ls_cell-fieldname.
        WHEN 'AMOUNT'.
          CASE gv_eflag_0500.
            WHEN 'X'. " 수정 임.
              READ TABLE gt_info_0500 INTO ls_info INDEX ls_cell-row_id.
            WHEN ''. " 수정 아님
              READ TABLE gt_info_0300 INTO ls_info INDEX ls_cell-row_id.
            WHEN OTHERS.
          ENDCASE.

          er_data_changed->get_cell_value(
            EXPORTING
              i_row_id = ls_cell-row_id
              i_fieldname = ls_cell-fieldname
            IMPORTING
              e_value = ls_info-amount
          ).

          " ERROR CHECK
          PERFORM check_gii_availability USING ls_info
                                         CHANGING lv_msgamount
                                                  lv_msgstoid
                                                  lv_msgmatnm
                                                  gv_subrc.
          IF gv_subrc <> 0.
            CASE gv_subrc.
              WHEN '4'.
                er_data_changed->add_protocol_entry(
                 EXPORTING
                   i_msgid = 'ZMCSS'
                   i_msgno = '301'
                   i_msgty = 'E'
                   i_msgv1 = ls_info-giseq
                   i_fieldname = ls_cell-fieldname
                   i_row_id = ls_cell-row_id
                 ).
              WHEN '5'.
                er_data_changed->add_protocol_entry(
                 EXPORTING
                   i_msgid = 'ZMCSS'
                   i_msgno = '302'
                   i_msgty = 'E'
                   i_msgv1 = ls_info-giseq
                   i_msgv2 = lv_msgamount
                   i_fieldname = ls_cell-fieldname
                   i_row_id = ls_cell-row_id
                 ).
              WHEN '6'.
                er_data_changed->add_protocol_entry(
                  EXPORTING
                    i_msgid = 'ZMCSS'
                    i_msgno = '303'
                    i_msgty = 'E'
                    i_msgv1 = ls_info-giseq
                    i_msgv2 = lv_msgstoid
                    i_msgv3 = lv_msgmatnm
                    i_msgv4 = lv_msgamount
                    i_fieldname = ls_cell-fieldname
                    i_row_id = ls_cell-row_id
                  ).
            ENDCASE.
            CONTINUE.
          ENDIF.

          er_data_changed->modify_cell(
            EXPORTING
              i_row_id = ls_cell-row_id
              i_tabix = ls_cell-tabix
              i_fieldname = ls_cell-fieldname
              i_value = ls_info-amount
          ).
      ENDCASE.
    ENDLOOP.
  ENDMETHOD.
ENDCLASS.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
